<?xml version="1.0" encoding="UTF-8" ?>








<rss version="2.0"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/"
	xmlns:activity="http://activitystrea.ms/spec/1.0/" >
<channel>
	
		
			<title><![CDATA[BrokenC의 블로그]]></title>
			<link>https://blog.naver.com/drifterz303</link>
			
				<image>
					<url><![CDATA[https://blogpfthumb-phinf.pstatic.net/20130910_257/drifterz303_1378814995480FyXM0_JPEG/02_01_%C1%A4%B1%E2%BF%CF.jpg?type=m2]]></url>
					<title><![CDATA[BrokenC의 블로그]]></title>
					<link>https://blog.naver.com/drifterz303</link>
				</image>
			
			<description><![CDATA[꾸준히]]></description>
			<language>ko</language>
			<generator>Naver Blog</generator>
			<pubDate>Tue, 14 May 2019 08:32:41 +0900</pubDate>

			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[React.js]]></category>
					<title><![CDATA[redux syntax를 한단계씩 적용시키기]]></title>
					<link>https://blog.naver.com/drifterz303/221434776838</link>
					<guid>https://blog.naver.com/drifterz303/221434776838</guid>
					<description><![CDATA[1단계state 만 가지고 가능한데 까지 앱을 만들어 본다 2단계.mapStateToProps를 통해서 state 를 props로 바꾼다 mapStateToProps만 정의해서 props로 값이 들어오는 것을 본다mapDispatchToProps 자리는 현재는 사용하지 않고 null을 넘겨준다 (Store정의 등 세팅은 해줘야 함 튜토리얼 보면 쉽게 찾을 수 있음)리듀서는 간단하게 짠다 dispatch를 쌩으로 날려서 props를 변경시켜본다이렇게만 해도 앱을 만들 수 있다. 이렇게 여러번 해서 적응이 되면 2단계로 넘어가본다3단계.dispatch를 쌩으로 날리던 역할을 action 에게 맡긴다 액션에게 맡기고 사용하기 위해서는 import 후 bindActionCreators 에 감싸서 mapStateToProps에 넘.......]]></description>
					<pubDate>Sat, 05 Jan 2019 11:51:27 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[리눅스(centOS)]]></category>
					<title><![CDATA[nginx forbidden 의심]]></title>
					<link>https://blog.naver.com/drifterz303/221429957380</link>
					<guid>https://blog.naver.com/drifterz303/221429957380</guid>
					<description><![CDATA[nginx에서 static file 을 서빙하려고 하는데 안되는 경우/nginx에서 proxy_pass를 하려는데 안되는 경우 &#x3D;&gt;첫번째 의심 )nginx 설정의 user 와 static 디렉토리의 권한이 맞는지. 그니까 그 유저가 디렉토리에 들어가서 읽을 수 있는 상태가 돼있는지 체크두번째 의심)이건 몰랐는데;;selinux 뭐시기 때문에 폴더를 http가 접근 못하게 막혀있다고 한다. 이런 명령어로 해당 폴더만 해제해줘야 함. 아래와 같이 하면 모든 폴더를 허용하는 듯함.(static)https://tutorials.technology/solved_errors/Nginx-static-files-return-403-even-with-correct-permission.html아래와 같이 하면 api 등 port listen 열기]]></description>
					<pubDate>Sat, 29 Dec 2018 18:55:02 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[리눅스(centOS)]]></category>
					<title><![CDATA[mysql 설치]]></title>
					<link>https://blog.naver.com/drifterz303/221429871172</link>
					<guid>https://blog.naver.com/drifterz303/221429871172</guid>
					<description><![CDATA[https://www.digitalocean.com/community/tutorials/how-to-install-mysql-on-centos-7참고끝까지 과정을 해야 remote allow가 되니 주의.]]></description>
					<pubDate>Sat, 29 Dec 2018 16:17:07 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[Docker]]></category>
					<title><![CDATA[mysql 설치]]></title>
					<link>https://blog.naver.com/drifterz303/221405205955</link>
					<guid>https://blog.naver.com/drifterz303/221405205955</guid>
					<description><![CDATA["비밀번호 없이 설치하고 실행해라" 스크립트도커 이미지가 없으면 알아서 먼저 받고 나서 명령어를 실행한다. 공식 도커에 써있는 실행 스크립트 이대로 실행하면 디폴트로 33060 포트에 맵핑이 되는 것 같다. 조심.]]></description>
					<pubDate>Sat, 24 Nov 2018 13:15:58 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[vue.js]]></category>
					<title><![CDATA[new Vue VS export default]]></title>
					<link>https://blog.naver.com/drifterz303/221335317961</link>
					<guid>https://blog.naver.com/drifterz303/221335317961</guid>
					<description><![CDATA[new Vue({ }) 이 문법은 root vue 할때만 쓰자. 나머지는 이렇게 파일별로. 파일전체가 export 되는거임.]]></description>
					<pubDate>Thu, 09 Aug 2018 01:49:45 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[vue.js]]></category>
					<title><![CDATA[simple deploy]]></title>
					<link>https://blog.naver.com/drifterz303/221335317150</link>
					<guid>https://blog.naver.com/drifterz303/221335317150</guid>
					<description><![CDATA[https://medium.com/@kamerk22/deploy-vue-js-ssr-vuetify-on-production-with-pm2-and-nginx-ec7b5c0748a3 npm run build nginx로 퍼나르기.]]></description>
					<pubDate>Thu, 09 Aug 2018 01:46:38 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[vue.js]]></category>
					<title><![CDATA[axios 설정]]></title>
					<link>https://blog.naver.com/drifterz303/221335302253</link>
					<guid>https://blog.naver.com/drifterz303/221335302253</guid>
					<description><![CDATA[최상위에서 axios를 이렇게 할당해주면컴포넌트에서 아래와 같이 사용할 수 있다.]]></description>
					<pubDate>Thu, 09 Aug 2018 00:59:11 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[객체지향]]></category>
					<title><![CDATA[객체지향 학습노트]]></title>
					<link>https://blog.naver.com/drifterz303/221290768129</link>
					<guid>https://blog.naver.com/drifterz303/221290768129</guid>
					<description><![CDATA[아 인터페이스라는게 편하기 위해서 만들어진거구나 싶다 Strategy pattern을 사용해서 전달되는 strategy에 따라서 판단하게 하는 코드를 만들려고 하는데 TestStrategy와 일반 Strategy를 따로 만들기 위해선 서로 함수 같은걸 맞춰줘야 한다. 이건 굉장히 귀찮은 일이다. 무슨 함수가 들어갔는지 일일히 비교를 해야하기 때문. 인터페이스로 본체를 미리 구현해 놓으면 IDE의 도움을 받아서 옵션+엔터로 끝이 난다. 뭘 놓쳤는지도 미리 알 수 있다. 객체지향 알아가고 있는 초초초보.]]></description>
					<pubDate>Sun, 03 Jun 2018 20:26:40 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[React.js]]></category>
					<title><![CDATA[functional component를 class component로 바꾸기]]></title>
					<link>https://blog.naver.com/drifterz303/221226124727</link>
					<guid>https://blog.naver.com/drifterz303/221226124727</guid>
					<description><![CDATA[https://stackoverflow.com/questions/43695583/converting-react-function-component-to-class-component-issue functional component 내용이 class component의 render 함수 안으로 들어가면 된다 단, props는 this.props 로 해줘야 한다 두 컴포넌트 간의 성능 차이는 미디엄 글에서 확인할 수 있다]]></description>
					<pubDate>Sat, 10 Mar 2018 22:54:52 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[객체지향]]></category>
					<title><![CDATA[케이스1.상황에 따라 역할이 다른 객체]]></title>
					<link>https://blog.naver.com/drifterz303/221210017752</link>
					<guid>https://blog.naver.com/drifterz303/221210017752</guid>
					<description><![CDATA[phone 객체를 가져오고 싶다 근데 phone에는 사무실 전화, 집 전화 두 종류가 있다 어떻게 구현하는게 좋을까 다음 코드를 살펴보자 이 코드는 인덱스로 구분해서 가져오고 있다. 이런 경우, index가 무엇을 뜻하는지 전혀 알 수 없으며 boundException 처리도 꼼꼼하게 해야하므로 관리하기가 불편하다고 할 수 있다. 그런 단점을 다음과 같은 방식으로 해결할 수 있다. 객체지향 디자인 패턴 책에서 발췌하였습니다.]]></description>
					<pubDate>Fri, 16 Feb 2018 22:58:29 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[객체지향]]></category>
					<title><![CDATA[객체와 부품 객체]]></title>
					<link>https://blog.naver.com/drifterz303/221209854118</link>
					<guid>https://blog.naver.com/drifterz303/221209854118</guid>
					<description><![CDATA[다음 두 코드의 차이점을 살펴보자. 첫번째 코드에서는 본 객체(Computer) 내부의 생성자에서 부품 객체(MainBoard, CPU)를 생성해서 속성(property)에 바인딩한다. 따라서, 본 객체가 사라지면 부품 객체도 같이 사라진다. 즉, 본 객체에 의존적인 부품객체들이 생기는 것이다. 두번째 코드에서는 생성자가 부품객체의 위치를 참조(reference)할 뿐이다. 따라서 본 객체가 사라져도 부품 객체는 영향을 받지 않는다.]]></description>
					<pubDate>Fri, 16 Feb 2018 15:37:33 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[객체지향]]></category>
					<title><![CDATA[객체지향에 대한 이야기...]]></title>
					<link>https://blog.naver.com/drifterz303/221209849494</link>
					<guid>https://blog.naver.com/drifterz303/221209849494</guid>
					<description><![CDATA[동기객체지향 아직도 잘 몰라서 제대로 알아보려고 한다. 핑계를 대자면, 스크립트 언어만 쓰고 그러다보니.. 암튼. 여러번 시도를 해보았으나 성공하지 못했다. 참고하고자 하는 책은 [JAVA 객체지향 디자인패턴] (한빛미디어) [],[],[] 네 권이다. 객체지향이란...클래스는 변화의 최소 단위라고 한다. 환경에 맞게 자기 자신이 바뀌어야 하는데 그걸 하는 최소의 단위라고 하는 것임. 마치 세포 혹은 DNA? UML혼자 프로젝트를 하고 놀다가 끝낼 것이라면 UML 같은 것은 필요 없을지도 모른다. 하지만 현업에서 모델링으로 소통해야되는 경우가 아주 많다. 그 때 사용하는 것이 UML이다 UML: Unified Modeling Language 경우에 따라서 생략되는.......]]></description>
					<pubDate>Fri, 16 Feb 2018 15:25:00 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[vue.js]]></category>
					<title><![CDATA[getting started vue.js]]></title>
					<link>https://blog.naver.com/drifterz303/221202758388</link>
					<guid>https://blog.naver.com/drifterz303/221202758388</guid>
					<description><![CDATA[백엔드 관련 포스팅은 엄두가 안난다.. 프론트엔드나 재미로 올려본다 설치로 척척 하려고 했더니만 node 버전이 구려서 안된단다. nvm으로 node를 깔았으니 업그레이드를 해주자 노드 버전을 올려주니까 잘된다 이 와중에 프론트까지 하려는 건 욕심인 것 같다..]]></description>
					<pubDate>Tue, 06 Feb 2018 21:49:54 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[javascript]]></category>
					<title><![CDATA[Hoisting에 대하여]]></title>
					<link>https://blog.naver.com/drifterz303/221141779808</link>
					<guid>https://blog.naver.com/drifterz303/221141779808</guid>
					<description><![CDATA[일단 코드를 보자.예상컨데 hoist 라는 변수는 아직 선언되지 않았기 때문에 'ReferenceError: hoist is not defined' 이런 에러가 떠야한다. 그런데 결과는 undefined 에러. 선언은 되었지만 값이 할당이 안됐다는 얘긴데 왜 이런 현상이 나타날까? 그 이유는 자바스크립트가 hoisting을 하기 때문이다. hoisting을 거치면 interpreter는 이렇게 인식하게 된다.hoisting 때문에 변수가 scope의 최상단으로 끌어올려지기 때문에 이미 선언이 된 변수로 보이는 것이다.https://scotch.io/tutorials/understanding-hoisting-in-javascript]]></description>
					<pubDate>Thu, 16 Nov 2017 23:53:15 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[javascript]]></category>
					<title><![CDATA[closure에 대하여]]></title>
					<link>https://blog.naver.com/drifterz303/221141772069</link>
					<guid>https://blog.naver.com/drifterz303/221141772069</guid>
					<description><![CDATA[코드부터 보자.나는 개허접이라서 눈치채지 못했지만 자바스크립트의 특성상 마지막에 myFunc()를 호출하는 시점에는 name 변수가 유효하지 않아서 에러가 나야한다. 그런데 잘 실행된다. 왜일까? 그 이유는 자바스크립트의 함수가 클로저를 형성하기 때문이다. 클로저는 함수와 함수가 선언된 어휘적 환경의 조합이다. 이 환경은 클로저가 생성된 시점의 범위 내에 있는 모든 지역 변수로 구성된다. 위의 경우, myFunc은 makeFunc이 실행될 때 생성된 displayName 함수의 인스턴스에 대한 참조다. displayName의 인스턴스는 그 변수, name 이 있는 어휘적 환경에 대한 참조를 유지한다. 이런 이유로 myFunc가 호출될 때 변수 name은 사용할 수 있.......]]></description>
					<pubDate>Thu, 16 Nov 2017 23:40:49 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[파이어베이스]]></category>
					<title><![CDATA[커스텀 서버를 이용하여 검증하기-Rails]]></title>
					<link>https://blog.naver.com/drifterz303/221140081574</link>
					<guid>https://blog.naver.com/drifterz303/221140081574</guid>
					<description><![CDATA[getIdToken() 함수를 사용하여 파이어베이스에서 관리하는 토큰을 사용할 수 있다. 이 토큰은 1시간 동안 유효한 토큰이며 시간이 지나면 새로 갱신된다. https://firebase.google.com/docs/auth/admin/create-custom-tokens?hl=ko rails 구현 참고 https://stackoverflow.com/questions/38884521/how-to-firebase-auth-with-rails https://medium.com/@igorkhomenko/how-to-validate-firebase-id-token-in-ruby-23f4f54c89ab 인증만 firebase를 사용하는 경우 사용자 서버에서 jwt 라이브러리를 사용하여 토큰을 디코드하여 사용하면 된다. https://groups.google.com/forum/#!topic/firebase-talk/iefJWQ9LMQE]]></description>
					<pubDate>Tue, 14 Nov 2017 22:28:15 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[webpack]]></category>
					<title><![CDATA[리액트 컴포넌트에서 es6 문법]]></title>
					<link>https://blog.naver.com/drifterz303/221118540393</link>
					<guid>https://blog.naver.com/drifterz303/221118540393</guid>
					<description><![CDATA[리액트 컴포넌트 내에서 arrow function 같은 걸 쓰려면 따로 해줘야되는게 있었다. npm install --save-dev transform-class-properties 해주고 쿼리에 플러그인에 다음과 같이 추가.babelrc에도 요렇게 추가. (추가. 웹팩 설정에서 babelrc: false 로 하면 바벨 설정을 무시한다는 것 같은데 따로 작업을 해주지 않으면 두번 중복되는건지 여부를 아직 잘 모르겠다.)]]></description>
					<pubDate>Mon, 16 Oct 2017 23:18:56 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[es6]]></category>
					<title><![CDATA[bind에 대하여]]></title>
					<link>https://blog.naver.com/drifterz303/221115154715</link>
					<guid>https://blog.naver.com/drifterz303/221115154715</guid>
					<description><![CDATA[es6의 arrow function 을 사용하면 this가 bind 되는 효과인데 기존 스타일로 하려면 이렇게..]]></description>
					<pubDate>Thu, 12 Oct 2017 02:09:31 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[webpack]]></category>
					<title><![CDATA[dev-server에서 라우팅이 안될때]]></title>
					<link>https://blog.naver.com/drifterz303/221113393849</link>
					<guid>https://blog.naver.com/drifterz303/221113393849</guid>
					<description><![CDATA[historyApiFallback: true 옵션을 켜주면 된다. 상대주소와도 연관이 있는 문제인 것 같다. 특히 나는 htmlplugin을 사용중이였기 때문에 좀더 자세하게는 아래가 맞다.]]></description>
					<pubDate>Mon, 09 Oct 2017 20:57:16 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[webpack]]></category>
					<title><![CDATA[webpack-dev-server]]></title>
					<link>https://blog.naver.com/drifterz303/221113390639</link>
					<guid>https://blog.naver.com/drifterz303/221113390639</guid>
					<description><![CDATA[webpack-dev-server는 기본적으로 실제 빌드 파일들을 생성하지 않는다. 나는 주로 dist/ 라는 이름에다가 빌드된 파일들을 생성하게 해두었는데 webpack이 아닌 webpack-dev-server는 실제 생성하지 않는다는 사실을 모르고 있다가 한참 찾았다.]]></description>
					<pubDate>Mon, 09 Oct 2017 20:52:10 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[github]]></category>
					<title><![CDATA[트랙킹 중단시키기]]></title>
					<link>https://blog.naver.com/drifterz303/221113176182</link>
					<guid>https://blog.naver.com/drifterz303/221113176182</guid>
					<description><![CDATA[ignore 등록이랑은 다르게 삭제하진 않지만 더이상 git이 관찰하지 않도록 만들기]]></description>
					<pubDate>Mon, 09 Oct 2017 14:55:52 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기 팁]]></category>
					<title><![CDATA[링크드리스트]]></title>
					<link>https://blog.naver.com/drifterz303/221084594980</link>
					<guid>https://blog.naver.com/drifterz303/221084594980</guid>
					<description><![CDATA[링크드 리스트가 문제에서 나오면...]]></description>
					<pubDate>Tue, 29 Aug 2017 11:53:32 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기 팁]]></category>
					<title><![CDATA[유형 정리]]></title>
					<link>https://blog.naver.com/drifterz303/221082124790</link>
					<guid>https://blog.naver.com/drifterz303/221082124790</guid>
					<description><![CDATA[패턴 비교문제 속에서 글자 패턴을 비교하거나 그런 경우, 이런 것도 생각해볼 수 있다.pattern[i%3]매 루프마다 S,O,S 를 반복적으로 접근할 수 있게 된다.input의 함정인풋에 주의하자. 인풋의 범위가 음수도 포함하는 경우 (-9&lt;n&lt;9), maxNum 같은 값의 초기화를 0으로 하면 안된다.arr 배열이 음수인 경우, 음수 중 가장 큰 수가 나와야 하는데 초기값 0이 가장 큰 수 이므로 전혀 이상한 결과인 0이 나오게 된다.]]></description>
					<pubDate>Fri, 25 Aug 2017 17:26:53 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기 팁]]></category>
					<title><![CDATA[C++ 로 문제풀이 하기 위한 문법 기초]]></title>
					<link>https://blog.naver.com/drifterz303/221082093446</link>
					<guid>https://blog.naver.com/drifterz303/221082093446</guid>
					<description><![CDATA[2차월 벡터 배열 선언주요 라이브러리]]></description>
					<pubDate>Fri, 25 Aug 2017 16:49:18 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[데이터구조]]></category>
					<title><![CDATA[해싱]]></title>
					<link>https://blog.naver.com/drifterz303/221074998067</link>
					<guid>https://blog.naver.com/drifterz303/221074998067</guid>
					<description><![CDATA[해싱이라는 것이 설명은 어렵게 돼있지만, 핵심은 간단한 것 같다. 시간복잡도 O(1) 만에 연산을 할 수 있도록 해주는 기법이다. 개념: 해시 테이블, 해시 함수, 버킷(bucket), 슬롯(slot) 상황: 충돌(collision), 오버플로우(overflow) 1) 해시 테이블 해시 테이블은 실질적인 값이 들어가는 자료 구조다. 배열이라고 생각하면 되는 것 같다. 단, 2차원 배열이다. 첫번째 분류는 bucket이라고 부르고 두번째 분류는 slot이라고 부른다 해시 테이블을 사전으로 따지면 bucket은 초성 표시 ㄱ, ㄴ, ㄷ, ㄹ,.. slot은 각 단어 설명 칸 2) 해시 함수 특별한게 아니고, 그냥 값을 넣으면 들어가야할 해시 테이블의 주소를 리턴하도록 만드는 함수다. .......]]></description>
					<pubDate>Wed, 16 Aug 2017 11:18:38 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[파이어베이스]]></category>
					<title><![CDATA[firebase를 프론트에서 사용하기]]></title>
					<link>https://blog.naver.com/drifterz303/221066884620</link>
					<guid>https://blog.naver.com/drifterz303/221066884620</guid>
					<description><![CDATA[정적 웹 페이지에는 '웹시작하기' 코드를 그대로 넣어주면 된다 . BUT, react 같이 javascript로 작동하는 경우에는 다음과 같은 방법으로 넣으면 된다. 1. 우선 firebase를 npm으로 설치한다2. 최상위 javascript 파일에 코드를 넣는다]]></description>
					<pubDate>Fri, 04 Aug 2017 16:38:15 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기]]></category>
					<title><![CDATA[소수 (prime) 판별]]></title>
					<link>https://blog.naver.com/drifterz303/221065299959</link>
					<guid>https://blog.naver.com/drifterz303/221065299959</guid>
					<description><![CDATA[소수: 1~(N-1) 까지 그 어떤 수로도 나눠지지 않는 수! 그러므로 단순하게 for loop를 n번 돌릴 수도 있다. =&gt;O(n) 그러나 수학적인 면에서 더 살펴보자. N이라는 숫자는 소수가 아니라면 a*b로 나타낼 수 있다. 중요한 점은 a나 b 둘 중 하나는 루트N 보다 작다는 사실왜냐하면 a와 b가 둘다 루트N보다 크다면 a*b는 N보다 커지므로 N = a*b가 성립이 안된다. 이 사실을 이용하면 루트N까지만 시도해보면 되니까 시간복잡도가 O(루트N) 이 된다. 이걸 식으로 표현하면 출처: 백준 강의]]></description>
					<pubDate>Wed, 02 Aug 2017 16:04:27 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기 팁]]></category>
					<title><![CDATA[test case T회]]></title>
					<link>https://blog.naver.com/drifterz303/221061958899</link>
					<guid>https://blog.naver.com/drifterz303/221061958899</guid>
					<description><![CDATA[C++이어진 숫자 54321을 입력했을 때 배열로 한글자씩 넣는 방법]]></description>
					<pubDate>Fri, 28 Jul 2017 18:11:30 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기]]></category>
					<title><![CDATA[bottom-up 방식으로 풀기]]></title>
					<link>https://blog.naver.com/drifterz303/221061406673</link>
					<guid>https://blog.naver.com/drifterz303/221061406673</guid>
					<description><![CDATA[11726 문제 dp라는 배열을 하나 두고 그것을 기반으로 bottom up하는 방식]]></description>
					<pubDate>Fri, 28 Jul 2017 00:42:29 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기 팁]]></category>
					<title><![CDATA[python 필수 문법]]></title>
					<link>https://blog.naver.com/drifterz303/221061247945</link>
					<guid>https://blog.naver.com/drifterz303/221061247945</guid>
					<description><![CDATA[나눈 몫만 가져오기 입력받기배열 뒤에 더하고 빼기swap 하기배열 자르기무한대대문자 체크대문자&lt;-&gt;소문자 변환아스키&lt;-&gt;문자 변환배열 안에 요소 존재 여부 배열에 중복 아이템 제거 (set 속성을 사용)인덱스가 3씩 증가하는 for loop주의할 점은 for i in range(len(A), 3): 이렇게 시작점 파라미터 0을 넣지 않으면 파라미터 순서가 의도치 않은대로 결정됨. 이전까지 다 더한것 +1튜플에서 특정값 기준으로 정렬그래프에서 4방향으로 탐색할 때]]></description>
					<pubDate>Thu, 27 Jul 2017 20:21:43 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기 팁]]></category>
					<title><![CDATA[min 사용(C++)]]></title>
					<link>https://blog.naver.com/drifterz303/221061242005</link>
					<guid>https://blog.naver.com/drifterz303/221061242005</guid>
					<description><![CDATA[1. stl 사용하는 방법2. define 사용하는 방법]]></description>
					<pubDate>Thu, 27 Jul 2017 20:10:36 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[알고리즘]]></category>
					<title><![CDATA[다이나믹 프로그래밍]]></title>
					<link>https://blog.naver.com/drifterz303/221061239278</link>
					<guid>https://blog.naver.com/drifterz303/221061239278</guid>
					<description><![CDATA[dynamic programming 에서 dynamic은 '동적'이라는 의미가 아니다. 처음 용어를 사용한 본인이 멋있어 보여서 썼다고 고백했다. 그래서 다이나믹 프로그래밍 전략을 쓰면서 동적인 부분을 찾으려고 하지 말자. 다이나믹 프로그래밍의 핵심은 분할&amp;정복 + memoization 인 것 같다. memoization의 개념을 그림으로 나타내면 다음과 같다. 즉, 한번 계산한 연산은 저장해놓았다가 다시 계산하지 않는 것이다. 시간을 획기적으로 줄일 수 있다. 일반적으로 저장은 배열에 한다. 출처: 코드플러스 강의]]></description>
					<pubDate>Thu, 27 Jul 2017 20:05:45 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기]]></category>
					<title><![CDATA[1초 걸리는 크기 알아두기]]></title>
					<link>https://blog.naver.com/drifterz303/221060853803</link>
					<guid>https://blog.naver.com/drifterz303/221060853803</guid>
					<description><![CDATA[참고로 알고 있으면 좋다. 알고리즘은 조건에 따라서 해결하는 행위이기 때문에 꼭 필요하다. 약 1초가 걸릴때 n의 크기 O(n) =&gt; n이 1억일때 O(NlogN) =&gt; n이 5백만일때 O(N^2)=&gt;n이 1만 O(N^3)=&gt;n이 500 O(2^N)=&gt; 20 O(N!)=&gt; 10 ------ 일반적인 상황 O(1) =&gt; 더하기 빼기, 인덱스 접근 등 단순계산 O(n) =&gt; for문 O(NlogN) =&gt; n을 절반으로 계속 나눔 O(N^2)=&gt; 2중 for문 O(N^3)=&gt; 3중 for문 O(2^N)=&gt; 크기가 N인 집합의 부분 집합 (멱집합: 원소마다 선택할지, 안할지 따지는 모든 부분집합 구할때) O(N!)=&gt; 크기가 N인 순열 (N개의 순서가 다른 집합은 다른 집합일때)]]></description>
					<pubDate>Thu, 27 Jul 2017 12:00:15 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[Codeigniter]]></category>
					<title><![CDATA[모델 예시]]></title>
					<link>https://blog.naver.com/drifterz303/221058450285</link>
					<guid>https://blog.naver.com/drifterz303/221058450285</guid>
					<description><![CDATA[민감 정보는 A,B,C 등으로 처리함]]></description>
					<pubDate>Mon, 24 Jul 2017 13:58:11 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[Codeigniter]]></category>
					<title><![CDATA[컨트롤러 예시]]></title>
					<link>https://blog.naver.com/drifterz303/221058438865</link>
					<guid>https://blog.naver.com/drifterz303/221058438865</guid>
					<description><![CDATA[]]></description>
					<pubDate>Mon, 24 Jul 2017 13:45:28 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[Codeigniter]]></category>
					<title><![CDATA[RESTful 라우팅]]></title>
					<link>https://blog.naver.com/drifterz303/221058434428</link>
					<guid>https://blog.naver.com/drifterz303/221058434428</guid>
					<description><![CDATA[게시를 안한지 너무 오래돼서 지금 코드랑 너무 차이나서 일단 올린다 ㅠ collection 이라는 모델에 대한 라우팅 예시다.]]></description>
					<pubDate>Mon, 24 Jul 2017 13:40:37 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[데이터구조]]></category>
					<title><![CDATA[quick sort]]></title>
					<link>https://blog.naver.com/drifterz303/221056827712</link>
					<guid>https://blog.naver.com/drifterz303/221056827712</guid>
					<description><![CDATA[피봇을 잡는게 특징 왼쪽은 피봇보다 작은 값, 오른쪽은 피봇보다 큰 값. 중간에 있는 값은 그냥 위치상 중간에 있는거지 별다른 의미가 없음. 만약, pivot이 젤 작은 값이라면 [] + [pivot] + [right] 피봇 오른쪽에 쏠리는 형태로 sorting이 될 것임.]]></description>
					<pubDate>Fri, 21 Jul 2017 20:19:06 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[데이터구조]]></category>
					<title><![CDATA[merge sort]]></title>
					<link>https://blog.naver.com/drifterz303/221056826543</link>
					<guid>https://blog.naver.com/drifterz303/221056826543</guid>
					<description><![CDATA[합병정렬 :이름에서 분할정복 냄새가 난다. 배열을 2등분을 하고 작은 것 순서대로 한줄 세우기 (== 중학교 2학년 5반과 6반을 합병한다. 평균 점수 높은 순서대로 줄 세워서 반등수를 다시 측정한다) 그냥 처음부터 줄세우기 하는것이랑은 다름. 각 두 집단이 정렬된 상태이기 때문에.]]></description>
					<pubDate>Fri, 21 Jul 2017 20:16:50 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[데이터구조]]></category>
					<title><![CDATA[insertion sort]]></title>
					<link>https://blog.naver.com/drifterz303/221056047729</link>
					<guid>https://blog.naver.com/drifterz303/221056047729</guid>
					<description><![CDATA[insertion sort (삽입 정렬) 용어 풀이를 해보자. 매회 하나의 아이템을 제자리에 삽입을 한다는 것을 알 수 있다. 그러면 삽입을 하기 위해서 비집고 들어갈 틈이 있어야 한다. 그 틈은 어디서 나는가? 땡겨서 나온다. 그렇다. insertion sort에서 가장 중요한 것은 땡긴다. 삽입한다. 이게 다임.]]></description>
					<pubDate>Thu, 20 Jul 2017 21:05:06 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[데이터구조]]></category>
					<title><![CDATA[bubble sort]]></title>
					<link>https://blog.naver.com/drifterz303/221056042205</link>
					<guid>https://blog.naver.com/drifterz303/221056042205</guid>
					<description><![CDATA['값들이 정렬되는 모양이 수면위로 거품이 올라오는 것 같다'는 어이 없는 이유로 bubble sort.]]></description>
					<pubDate>Thu, 20 Jul 2017 20:55:51 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[OS(운영체제)]]></category>
					<title><![CDATA[프로세스와 쓰레드]]></title>
					<link>https://blog.naver.com/drifterz303/221055141929</link>
					<guid>https://blog.naver.com/drifterz303/221055141929</guid>
					<description><![CDATA[프로세스란,메모리 위에 올라간 실행 중인 프로그램이다.프로세스는 운영체제로부터 스택, 힙, 데이터섹션, 텍스트섹션 등을 할당받는다. 쓰레드는 프로세스 안에서 실행되는 실행의 흐름이라고 볼 수 있다. 하나의 프로세스 안에서 여러개의 쓰레드를 사용할 수 있으며 각 쓰레드는 프로세스 내부 자원을 공유한다. 프로세스를 생성하는 것보다 쓰레드가 생성되는게 좋은 점은 다음과 같다. 1)자원의 공유가 편하다(?) 프로세스는 명시적으로 따로 처리를 해줘야지만 자원을 공유할 수 있다. 그러나 쓰레드는 자동으로 자원과 메모리를 공유한다. 2)경제성(빠르다) 프로세스 생성 시에는 메모리와 자원이 할당된다. 따라서 생성 시간과 context .......]]></description>
					<pubDate>Wed, 19 Jul 2017 18:45:35 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기]]></category>
					<title><![CDATA[멱집합 구하기]]></title>
					<link>https://blog.naver.com/drifterz303/221054961058</link>
					<guid>https://blog.naver.com/drifterz303/221054961058</guid>
					<description><![CDATA[]]></description>
					<pubDate>Wed, 19 Jul 2017 15:18:30 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기]]></category>
					<title><![CDATA[문자열 포함 여부]]></title>
					<link>https://blog.naver.com/drifterz303/221054951989</link>
					<guid>https://blog.naver.com/drifterz303/221054951989</guid>
					<description><![CDATA[입력 예시 mef myself 출력 YES]]></description>
					<pubDate>Wed, 19 Jul 2017 15:08:34 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기]]></category>
					<title><![CDATA[이진수 변환]]></title>
					<link>https://blog.naver.com/drifterz303/221054950588</link>
					<guid>https://blog.naver.com/drifterz303/221054950588</guid>
					<description><![CDATA[입력 예시 23]]></description>
					<pubDate>Wed, 19 Jul 2017 15:07:04 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기]]></category>
					<title><![CDATA[올바른 괄호인지 판단]]></title>
					<link>https://blog.naver.com/drifterz303/221054949407</link>
					<guid>https://blog.naver.com/drifterz303/221054949407</guid>
					<description><![CDATA[입력 예시 (((())())(()())((())()))]]></description>
					<pubDate>Wed, 19 Jul 2017 15:05:49 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[문제풀기]]></category>
					<title><![CDATA[quicksort 구현]]></title>
					<link>https://blog.naver.com/drifterz303/221054947333</link>
					<guid>https://blog.naver.com/drifterz303/221054947333</guid>
					<description><![CDATA[python으로 quicksort 구현하기 입력 예시 10 2 3 4 5 6 9 7 8 1]]></description>
					<pubDate>Wed, 19 Jul 2017 15:03:35 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[데이터구조]]></category>
					<title><![CDATA[그래프]]></title>
					<link>https://blog.naver.com/drifterz303/221049854370</link>
					<guid>https://blog.naver.com/drifterz303/221049854370</guid>
					<description><![CDATA[일반적으로, graph == 무방향그래프 bigraph == 방향그래프무방향 그래프(undirected graph)는 선(a,b)와 (b,a)가 같다고 여기는 그래프. 갈수도있고 올수도 있는선. 방향그래프(directed graph)는 &lt;a,b&gt;와 &lt;b,a&gt;가 다르다고 여기는 그래프. a--&gt;b 이면 a에서 b로는 건너갈 수 있지만 b에서 a를 갈 수는 없는 선이다. 그래프를 활용한 탐색 1. 깊이 우선 탐색 위 그림에서 깊이우선탐색을 하면 0,1,3,7,4,5,2,6 순서로 탐색 코드) 리컬시브를 활용하여 끝이 나올 때 까지 아직 방문하지 않은 점은 방문하고 그 다음 점을 방문한다. 탐색 했는지 안했는지 여부를 print로 하기로 한다.]]></description>
					<pubDate>Wed, 12 Jul 2017 16:41:44 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[es6]]></category>
					<title><![CDATA[파라미터의 개수를 알 수 없을 때]]></title>
					<link>https://blog.naver.com/drifterz303/221039435052</link>
					<guid>https://blog.naver.com/drifterz303/221039435052</guid>
					<description><![CDATA[Variadic function파라미터 개수에 제한이 없는 함수 마지막 케이스처럼, 고정적으로 넘어와야 하는 파라미터가 섞여있다면? 파라미터 사용 시 문제가 있음. 그래서 Rest Parameter라는 문법이 필요. Rest Parametersrest parameter는 반드시 마지막 파라미터여야만 하며, ...을 붙여서 사용한다 array를 파라미터로 넘기고 싶다면, 호출할 때 rest 형식을 사용해주면 된다. 함수 내부에서 array의 각 원소를 split 해서 각각 파라미터로 전달온 것 처럼 행동한다.]]></description>
					<pubDate>Wed, 28 Jun 2017 14:28:14 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[es6]]></category>
					<title><![CDATA[명시된 파라미터]]></title>
					<link>https://blog.naver.com/drifterz303/221037093813</link>
					<guid>https://blog.naver.com/drifterz303/221037093813</guid>
					<description><![CDATA[named parameter파라미터 객체 내부 key에 이름을 명시할 수 있고 디폴트 값을 설정할 수 있게 됐다. 따라서 명시된 변수는 let이나 var 로 새로 할당하지 않고 바로 사용한다.]]></description>
					<pubDate>Sun, 25 Jun 2017 14:48:58 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>drifterz303</author>
					<category><![CDATA[es6]]></category>
					<title><![CDATA[let, const]]></title>
					<link>https://blog.naver.com/drifterz303/221037091503</link>
					<guid>https://blog.naver.com/drifterz303/221037091503</guid>
					<description><![CDATA[let재할당은 가능, 재선언은 당연히 불가능. 호이스팅을 안하도록 막음. ex) const재할당이 불가능 **hoisting scope 안에 있는 변수들을 위로 끌어올려서 먼저 몰아서 선언하는 것. (주로 function)]]></description>
					<pubDate>Sun, 25 Jun 2017 14:44:07 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
		
		
	
</channel>
</rss>
