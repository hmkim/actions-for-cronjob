<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/rss2full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0" version="2.0">
  <channel>
    <title>웹으로 말하기</title>
    <description>웹개발, PHP, CSS, jQuery, javascript, 아이폰 등등
</description>
    <link>https://mytory.net/</link>
    
    <pubDate>Mon, 06 May 2019 00:07:29 +0900</pubDate>
    <lastBuildDate>Mon, 06 May 2019 00:07:29 +0900</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>
    
      <atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/rss+xml" href="http://feeds.feedburner.com/mytory_tc" /><feedburner:info uri="mytory_tc" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><feedburner:emailServiceId>mytory_tc</feedburner:emailServiceId><feedburner:feedburnerHostname>https://feedburner.google.com</feedburner:feedburnerHostname><item>
        <title>SpringBoot 다국어 지원 설정 가이드</title>
        <description>참고자료: Guide to Internationalization in Spring Boot

의존성 추가

spring-boot-starter-thymeleaf를 추가해야 한다. 사실 타임리프는 스프링부트에서 기본으로 의존성을 포함해 뒀을 것이므로 이 단계를 해야 하는 경우는 거의 없을 것이다.

만약 의존성이 포함돼 있지 않다면 포함시킨다. 메이븐이라면 아래 코드를 사용한다. 2019년 4월 14일 현재 최신 버전은 2.1.4.RELEASE다. 물론 자신의 스프링부트 버전을 따라야 하므로 최신 버전이 뭔지는 이 자체로는 큰 ...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=Wy5lVUyjS0c:pppKCNzk94Q:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/Wy5lVUyjS0c" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Sun, 14 Apr 2019 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/Wy5lVUyjS0c/spring-boot-internationalization.html</link>
        <guid isPermaLink="false">https://mytory.net/2019/04/14/spring-boot-internationalization.html</guid>
        
        <category>java</category>
        
        <category>spring</category>
        
        
      <feedburner:origLink>https://mytory.net/2019/04/14/spring-boot-internationalization.html</feedburner:origLink></item>
    
      <item>
        <title>[요약] 모바일 기기에서 가로 슬라이드</title>
        <description>닐슨앤노만 그룹의 Carousels on Mobile Devices를 요약한 것이다.



요약: 터치 스크린에서 캐로셀(가로 슬라이드)은 낮은 발견 가능성(discoverability)과 순차적 구성으로 고통받아왔다. 또한 모든 디자인이 캐로셀 제어로 스와이프를 구현하지는 않는다.

캐로셀은 좁은 공간에 중요한 콘텐츠들을 담을 수 있어서 각광받았다. 하지만 분명한 단점도 있다.


  순차적 접근에 기반한다: 사용자는 모든 내용을 보려면 하나씩 넘겨 봐야 한다. 비효율적이다.
  늘 잘 발견되는 것은 아니다: 심지어 캐로셀을...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=s5tt1nlT9VQ:61zsvEDjC6s:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/s5tt1nlT9VQ" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Wed, 13 Feb 2019 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/s5tt1nlT9VQ/carousels-on-mobile-devices.html</link>
        <guid isPermaLink="false">https://mytory.net/usability/2019/02/13/carousels-on-mobile-devices.html</guid>
        
        
        <category>usability</category>
        
      <feedburner:origLink>https://mytory.net/usability/2019/02/13/carousels-on-mobile-devices.html</feedburner:origLink></item>
    
      <item>
        <title>[번역] 아무도 말하지 않는 PHP의 좋은 점</title>
        <description>원문은 Good thing in PHP nobody talks about이다. 번역에 대해 저자 허락을 구했다. (gnoownow10님이 번역을 감수해 줬다.)

[ ] 안의 말은 이해에 도움이 되라고 내가 넣은 것이다.



PHP에서 내가 좋아하는 점이 뭘까?

PHP는 실행후 죽도록 설계됐다.

우리는 코드 중복, 혹은 나쁜 코드 정렬(formmating), 나쁜 변수명 등을 두려워해선 안 된다. 코드 냄새를 풍기는 이런 결함들은 물론 나쁜 것이지만, 코드를 오염하는 데에선 상태 있음(statefulness)에 비할 바가...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=8oSGPJDBY-s:UbWykEt9S1s:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/8oSGPJDBY-s" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Sat, 13 Oct 2018 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/8oSGPJDBY-s/good-thing-in-php-nobody-talks-about.html</link>
        <guid isPermaLink="false">https://mytory.net/2018/10/13/good-thing-in-php-nobody-talks-about.html</guid>
        
        <category>PHP</category>
        
        
      <feedburner:origLink>https://mytory.net/2018/10/13/good-thing-in-php-nobody-talks-about.html</feedburner:origLink></item>
    
      <item>
        <title>PHP short open tag를 long open tag로 변환해 주는 스크립트</title>
        <description>PHP 코드를 작성할 때 모든 서버에서 잘 돌아갈 수 있도록 &amp;lt;?가 아니라 &amp;lt;?php로 여튼 태그를 쓰는 편이 좋다. (참고: PHP 짧은 태그(&amp;lt;? ?&amp;gt;)가 좋을까 긴 태그(&amp;lt;?php ?&amp;gt;)가 좋을까?)

레거시 코드가 모든 여는 태그를 짧은 태그(&amp;lt;?)로 작성했다면 변경이 골치아프다. 찾기 바꾸기로 바꾸는 것은 만만찮고, 오류가 발생할 확률도 크다. 그러나 PHP 언어 자체의 파싱 기능을 이용한다면 100% 신뢰성을 확보하면서 코드를 수정할 수 있다. 아래 스크립트가 바로 그런 스크립트...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=JAxMoBsc2rs:2MO8cuBAtoo:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/JAxMoBsc2rs" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Sun, 30 Sep 2018 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/JAxMoBsc2rs/convert-short-open-tag.html</link>
        <guid isPermaLink="false">https://mytory.net/2018/09/30/convert-short-open-tag.html</guid>
        
        <category>PHP</category>
        
        
      <feedburner:origLink>https://mytory.net/2018/09/30/convert-short-open-tag.html</feedburner:origLink></item>
    
      <item>
        <title>Laravel, 로그 기록 레벨 설정하기</title>
        <description>개발시엔 debug 레벨로 메시지를 봐야겠지만, 제품으로 내보냈을 때는 warning 레벨 정도로 로그를 기록하는 편이 좋을 것이다. var_dump() 안 쓰고 Log::debug() 쓰는 큰 이유중 하나 아닌가.

라라벨은 PSR-31 표준을 따르는 Monolog 패키지를 이용해 로그를 기록한다. PSR-3에는 8단계의 로그 기록 레벨이 있다. 아래는 가장 높은 단계인 emergency부터 가장 낮은 단계인 debug까지 나열한 것이다.


  emergency
  alert
  critical
  error
  warni...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=RfMbz0DXISE:3NQ7F188Nnc:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/RfMbz0DXISE" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Wed, 29 Aug 2018 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/RfMbz0DXISE/set-laravel-logging-level.html</link>
        <guid isPermaLink="false">https://mytory.net/2018/08/29/set-laravel-logging-level.html</guid>
        
        <category>PHP</category>
        
        <category>Laravel</category>
        
        
      <feedburner:origLink>https://mytory.net/2018/08/29/set-laravel-logging-level.html</feedburner:origLink></item>
    
      <item>
        <title>PHP 개발자를 위한 VSCode 확장과 팁, 단축키</title>
        <description>최고의 PHP 개발툴1은 누가 뭐래도 PhpStorm이다. 다만 1달 1~2만 원 꼴 되는 사용료가 진입장벽이 된다. 최근 핫한 VSCode는 PhpStorm만큼은 아니지만 꽤 괜찮은 대안이 될 수 있는 것 같다.

그래서 라라캐스트의 Visual Studio Code for PHP Developers를 보고 공부했다. 무료다. 아래는 보면서 정리한 내용이다.

단축키는 맥 기준이다. 윈도우/리눅스에서는 Cmd는 Ctrl로, Opt는 Alt로 하면 얼추 맞을 거다.

Git


  Git는 내장돼 있고, 변경사항이 있는 경우 ...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=sVXrfzI_OKM:qgIN5hjbhYI:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/sVXrfzI_OKM" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Sun, 26 Aug 2018 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/sVXrfzI_OKM/vscode-study.html</link>
        <guid isPermaLink="false">https://mytory.net/2018/08/26/vscode-study.html</guid>
        
        <category>Tip</category>
        
        <category>Editor</category>
        
        
      <feedburner:origLink>https://mytory.net/2018/08/26/vscode-study.html</feedburner:origLink></item>
    
      <item>
        <title>Docker 각 볼륨 플래그(delegated, cached, consistent)의 의미</title>
        <description>요약


  delegated: 컨테이너쪽 파일시스템 내용이 최신이다. 컨테이너쪽 변경사항이 호스트쪽에 반영되는 데 시간이 걸릴 수 있다.
  cached: 호스트쪽 파일시스템의 내용이 최신이다. 호스트쪽 변경사항이 컨테이너에 반영되는 데 시간이 걸릴 수 있다.
  consistent: 컨테이너와 호스트가 완전히 동기화된다.
  default: consistent와 같다. 플래그를 주지 않으면 default다. consistent와 결정적 차이가 있다. consistent를 주면 마운트 볼륨이 겹칠 경우 deleagted와 c...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=unYdBrEn9qw:G0LDaOmNqZg:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/unYdBrEn9qw" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Thu, 21 Jun 2018 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/unYdBrEn9qw/docker-volume-flags-description.html</link>
        <guid isPermaLink="false">https://mytory.net/2018/06/21/docker-volume-flags-description.html</guid>
        
        <category>docker</category>
        
        
      <feedburner:origLink>https://mytory.net/2018/06/21/docker-volume-flags-description.html</feedburner:origLink></item>
    
      <item>
        <title>[코드조각] 주요 DNS 서버의 도메인 ip 연결 확인 스크립트</title>
        <description>한국에서 사용하는 주요 DNS서버에서 도메인이 어느 ip와 연결돼 있는지 확인하는 리눅스용 bash 스크립트다(맨 아래 있다). 도메인 ip를 변경한 뒤 적용됐는지 확인할 때 쓸 용도로 만들었다.

KT, SKT, LGU+, 구글DNS, 1.1.1.1, 오픈DNS 서버의 기본, 보조 DNS 서버에 도메인 ip를 질의한다.

그리 아름다운 스크립트는 아니고 그냥 복붙으로 노가다해 만들었다. 스크립트는 맨 아래 있다.

사용 방법

초보를 위해 사용방법을 설명한다.

아래 코드를 복사해서 test-dns.sh 같은 파일로 만든 뒤...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=VPnCd3R9c5o:KevAXwvi6gs:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/VPnCd3R9c5o" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Wed, 09 May 2018 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/VPnCd3R9c5o/dns-test.html</link>
        <guid isPermaLink="false">https://mytory.net/2018/05/09/dns-test.html</guid>
        
        <category>snippet</category>
        
        <category>Shell</category>
        
        <category>Linux</category>
        
        
      <feedburner:origLink>https://mytory.net/2018/05/09/dns-test.html</feedburner:origLink></item>
    
      <item>
        <title>[책] 바쁜 팀장님 대신 알려 주는 신입 PHP 개발자 안내서</title>
        <description>페이스북 Modern PHP User Group의 이현석 님이 쓴 책이다. 2월 초에 업투데이트북스(이현석 님이 만든 출판사다)로부터 “읽어보시고, 사람들에게 소개할만하다고 생각되시면” 블로그에 소개해 달라는 요청을 받았다. 저자를 한 번도 만나 본 적은 없지만, 페이스북의 그룹에서는 종종 좋은 정보를 얻고 있었다.

책을 읽어 보니 소개할 만할 뿐 아니라 추천한다. 나도 신입 개발자 교육을 이 책으로 진행하면 될 것 같다.

현대적 PHP를 다루는 책

PHP의 기본적 문법을 알려 주는 책은 많다. 나도 학교 도서관에서 빌린...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=gVo44HEv9FY:enLadIQyl3g:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/gVo44HEv9FY" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Sat, 05 May 2018 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/gVo44HEv9FY/php-newbie-guide.html</link>
        <guid isPermaLink="false">https://mytory.net/2018/05/05/php-newbie-guide.html</guid>
        
        <category>PHP</category>
        
        <category>Book</category>
        
        
      <feedburner:origLink>https://mytory.net/2018/05/05/php-newbie-guide.html</feedburner:origLink></item>
    
      <item>
        <title>IT 회사 합격 또는 거절 통지에 대처하는 요령 (《코딩 인터뷰 완전 분석》 중)</title>
        <description>아래는 인사이트 출판사의 《코딩 인터뷰 완전 분석》 내용 중 일부를 옮긴 것이다. 두고 두고 보려고 받아 적었다.



면접이 끝났으니 긴장을 풀어도 되겠다 싶을 즈음 또 다른 스트레스와 마주하게 되니, 바로 ‘면접 후 스트레스’다. 입사 요청에 응해야 하나? 나한테 딱 맞는 자리이긴 한 건가? 거절은 어떻게 해야 하나? 데드라인이 있나? 지금부터 이런 몇 가지 이슈에 대해서 살펴보고, 입사 제안(offer)을 받으면 그 제안을 어떻게 검토할 것인지, 그리고 협상은 어떻게 해야 하는지 좀더 상세히 살펴보겠다.

합격 또는 거절...&lt;div class="feedflare"&gt;
&lt;a href="http://feeds.feedburner.com/~ff/mytory_tc?a=OU1XPBJEC9c:2baS7yzVzMs:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/mytory_tc?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt;
&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/mytory_tc/~4/OU1XPBJEC9c" height="1" width="1" alt=""/&gt;</description>
        <pubDate>Fri, 16 Mar 2018 00:00:00 +0900</pubDate>
        <link>http://feedproxy.google.com/~r/mytory_tc/~3/OU1XPBJEC9c/application-tactics.html</link>
        <guid isPermaLink="false">https://mytory.net/2018/03/16/application-tactics.html</guid>
        
        <category>quotation</category>
        
        
      <feedburner:origLink>https://mytory.net/2018/03/16/application-tactics.html</feedburner:origLink></item>
    
  </channel>
</rss>
