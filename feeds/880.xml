<?xml version="1.0" encoding="UTF-8"?><rss version="2.0"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:atom="http://www.w3.org/2005/Atom"
	xmlns:sy="http://purl.org/rss/1.0/modules/syndication/"
	xmlns:slash="http://purl.org/rss/1.0/modules/slash/"
	
xmlns:georss="http://www.georss.org/georss" xmlns:geo="http://www.w3.org/2003/01/geo/wgs84_pos#"
>

<channel>
	<title>개발하는 seapy는</title>
	<atom:link href="https://code.iamseapy.com/feed" rel="self" type="application/rss+xml" />
	<link>https://code.iamseapy.com</link>
	<description>개발관련 이야기</description>
	<lastBuildDate>Thu, 11 Oct 2018 01:03:19 +0000</lastBuildDate>
	<language>ko-KR</language>
	<sy:updatePeriod>hourly</sy:updatePeriod>
	<sy:updateFrequency>1</sy:updateFrequency>
	<generator>https://wordpress.org/?v=5.0.4</generator>
<site xmlns="com-wordpress:feed-additions:1">113891680</site>	<item>
		<title>Amazon RDS 삭제 보호 활성화를 운영중인 DB에 적용하기</title>
		<link>https://code.iamseapy.com/archives/188</link>
		<comments>https://code.iamseapy.com/archives/188#respond</comments>
		<pubDate>Thu, 11 Oct 2018 01:03:19 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[AWS]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=188</guid>
		<description><![CDATA[AWS 에서 제공하는 데이터베이스 서비스인 RDS에 데이터베이스 삭제를 보호하는 기능이 추가되었습니다. Amazon RDS, 이제 데이터베이스 삭제 보호 기능 제공 테스트용 데이터베이스를 만들고 지우다가 혹은 콘솔에서 클릭을 잘못해서 우발적으로 데이터베이스를 삭제하는 경우를 막고자 추가된 기능입니다. EC2 에서는 제공되고 있던 기능으로 RDS 는 실수로 지웠을경우 그 파장이 크기 때문에 이런 옵션의 추가는 사용자 입장에서 좋습니다. 이 기능은 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>AWS 에서 제공하는 데이터베이스 서비스인 RDS에 데이터베이스 삭제를 보호하는 기능이 추가되었습니다.</p>
<ul>
<li><a href="https://aws.amazon.com/ko/about-aws/whats-new/2018/09/amazon-rds-now-provides-database-deletion-protection/">Amazon RDS, 이제 데이터베이스 삭제 보호 기능 제공</a></li>
</ul>
<p>테스트용 데이터베이스를 만들고 지우다가 혹은 콘솔에서 클릭을 잘못해서 우발적으로 데이터베이스를 삭제하는 경우를 막고자 추가된 기능입니다. EC2 에서는 제공되고 있던 기능으로 RDS 는 실수로 지웠을경우 그 파장이 크기 때문에 이런 옵션의 추가는 사용자 입장에서 좋습니다.</p>
<p>이 기능은 모든 AWS 리전의 Amazon Aurora, RDS for MySQL, MariaDB, Oracle, PostgreSQL, SQL Server 에 대해 지원됩니다.</p>
<h2>운영중인 DB에 삭제 보호를 활성화시 서비스 영향</h2>
<p>삭제 보호 기능이 좋다고는 하지만 삭제 보호 기능을 위해 DB 서비스가 중단된다면 바로 적용하기는 곤란합니다. 그래서 확인 해보니 운영중인 DB에 삭제 보호 기능을 활성화 하더라도 DB 인스턴스의 상태가 바뀌지 않았습니다.</p>
<p>RDS 콘솔에서 DB 인스턴스 수정 페이지 아래쪽의 “삭제방지”를 활성화 하고 다음 버튼을 눌러 봅니다.(AWS 콘솔 번역은 삭제 방지라고 되있지만 저는 그냥 삭제 보호라고 하기로… AWS 블로그에도 삭제 보호라고 되있기도 하구요.)</p>
<p><img class="alignnone size-full wp-image-186" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/16997505-F99E-48C5-8C24-28DB8380BD18.png?resize=625%2C107&#038;ssl=1" width="625" height="107" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/16997505-F99E-48C5-8C24-28DB8380BD18.png?w=1628&amp;ssl=1 1628w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/16997505-F99E-48C5-8C24-28DB8380BD18.png?resize=300%2C52&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/16997505-F99E-48C5-8C24-28DB8380BD18.png?resize=768%2C132&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/16997505-F99E-48C5-8C24-28DB8380BD18.png?resize=1024%2C176&amp;ssl=1 1024w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/16997505-F99E-48C5-8C24-28DB8380BD18.png?resize=624%2C107&amp;ssl=1 624w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/16997505-F99E-48C5-8C24-28DB8380BD18.png?w=1250&amp;ssl=1 1250w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>그리고 즉시 적용을 하면 같이 예기치 않은 잠재적 다운타임이 있다고 나오는데요. 이 메시지는 그냥 항상 보여주는것으로 즉시 적용 해도 DB 인스턴스의 상태가 변하지 않고 적용됩니다.</p>
<p><img class="alignnone size-full wp-image-185" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/E6384C92-E8FC-41F9-B7DC-1BB5DEBB949C.png?resize=625%2C488&#038;ssl=1" width="625" height="488" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/E6384C92-E8FC-41F9-B7DC-1BB5DEBB949C.png?w=1646&amp;ssl=1 1646w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/E6384C92-E8FC-41F9-B7DC-1BB5DEBB949C.png?resize=300%2C234&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/E6384C92-E8FC-41F9-B7DC-1BB5DEBB949C.png?resize=768%2C599&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/E6384C92-E8FC-41F9-B7DC-1BB5DEBB949C.png?resize=1024%2C799&amp;ssl=1 1024w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/E6384C92-E8FC-41F9-B7DC-1BB5DEBB949C.png?resize=624%2C487&amp;ssl=1 624w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/E6384C92-E8FC-41F9-B7DC-1BB5DEBB949C.png?w=1250&amp;ssl=1 1250w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>활성화 된다음에 DB를 삭제하려고 하면 보호 옵션이 활성화 되있다는 메시지와 함께 삭제를 할 수 없습니다.</p>
<p><img class="alignnone size-full wp-image-187" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/7AFF6474-29E9-4503-8C91-F191D322E589.png?resize=625%2C165&#038;ssl=1" width="625" height="165" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/7AFF6474-29E9-4503-8C91-F191D322E589.png?w=1226&amp;ssl=1 1226w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/7AFF6474-29E9-4503-8C91-F191D322E589.png?resize=300%2C79&amp;ssl=1 300w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/7AFF6474-29E9-4503-8C91-F191D322E589.png?resize=768%2C203&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/7AFF6474-29E9-4503-8C91-F191D322E589.png?resize=1024%2C271&amp;ssl=1 1024w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/10/7AFF6474-29E9-4503-8C91-F191D322E589.png?resize=624%2C165&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<h2>지금 바로 적용하기</h2>
<p>거의 모든 서비스의 제일 중요한 부분은 DB라고 해도 과언이 아니라고 생각합니다. 지금 당장 운영중인 RDS 에 삭제 보호 방지를 활성화 하세요!</p>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/188/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">188</post-id>	</item>
		<item>
		<title>PostgreSQL pg_restore 할 때 외래키(foreign key) 제약(constraints) 조건 무시하기</title>
		<link>https://code.iamseapy.com/archives/184</link>
		<comments>https://code.iamseapy.com/archives/184#respond</comments>
		<pubDate>Fri, 14 Sep 2018 08:47:55 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[미분류]]></category>
		<category><![CDATA[postgresql]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=184</guid>
		<description><![CDATA[Ignore foreign key constraints when pg_restore 개발하다보면 개발서버 혹은 운영중인 DB 서버의 데이터를 이용해야 하는 경우가 있습니다. 이런 경우 PostgreSQL 에서는 pg_dump, pg_restore를 이용해 백업 및 복원을 진행합니다. 전체 DB를 백업하고 복원하는것은 어렵지 않지만 특정 테이블 하나만 적용하려고 보면 왜래키(Foreign key) 제약 조건으로 인해 복원이 실패하는 경우가 발생합니다. MySQL 의 경우는 외래키 제약 조건을 임시로 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Ignore foreign key constraints when pg_restore</p>
<p>개발하다보면 개발서버 혹은 운영중인 DB 서버의 데이터를 이용해야 하는 경우가 있습니다. 이런 경우 PostgreSQL 에서는 <code>pg_dump</code>, <code>pg_restore</code>를 이용해 백업 및 복원을 진행합니다.</p>
<p>전체 DB를 백업하고 복원하는것은 어렵지 않지만 특정 테이블 하나만 적용하려고 보면 왜래키(Foreign key) 제약 조건으로 인해 복원이 실패하는 경우가 발생합니다. MySQL 의 경우는 외래키 제약 조건을 임시로 중단할수 있는 SQL이 있지만 PostgreSQL 에서는 여러가지 방법을 찾아 봤지만 모두 실패 했고 하나의 성공 방법을 찾았습니다.</p>
<p>monsters 라는 테이블을 운영 DB에서 받아와서 개발 DB에 반영 한다면 아래와 같은 절차로 진행합니다.</p>
<p>pg_dump 명령어를 이용해 monsters 테이블을 파일로 저장합니다.</p>
<pre><code>$ pg_dump -W \
    -h DB_HOST \
    -p DB_PORT \
    -U DB_USER \
    -d DB_DATABASE \
    -F c -b -v \
    -t monsters \
    -f monsters.dump
</code></pre>
<p>개발 DB에 접속후 복원하려는 DB와 같은 이름을 가진 테이블을 삭제하는데 이때 cascade 옵션이 중요합니다.</p>
<pre><code>$ psql -U local_db_user -d local_db_name -c 'DROP TABLE IF EXISTS monsters cascade;'
</code></pre>
<p>cascade 옵션은 다른 테이블에서 외래키로 참조하고 있는 제약 조건을 같이 삭제합니다. 실행하면 아래와 같이 외래키 제약 조건이 같이 삭제되었다는 메시지가 출력됩니다.</p>
<pre><code>NOTICE:  drop cascades to 4 other objects
DETAIL:  drop cascades to constraint xxx on table regions_111
drop cascades to constraint yyy on table regions_222
drop cascades to constraint zzz on table regions_333
drop cascades to constraint qqq on table regions_444
DROP TABLE
</code></pre>
<p>마지막으로 pg_restore 명령어를 이용해 DB를 복원합니다.</p>
<pre><code>$ pg_restore --no-acl --no-owner -U local_db_user -d local_db_name monsters.dump
</code></pre>
<p>복원시에는 <code>--no-acl</code>, <code>--no-owner</code>을 주어 원본 DB의 사용자에 할당되어 있는 권한을 제거합니다.</p>
<p>pg_restore 할때 <code>--clean</code> 옵션을 주면 굳이 DROP TABLE 을 따로 안해도 되지만 제약조건이 걸려 있는 경우 복원이 실패합니다. 이런 이유로 DROP TABLE을 복원 전에 실행하는것이 문제 해결의 키입니다.</p>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/184/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">184</post-id>	</item>
		<item>
		<title>Terraform(테라폼) 여러 버전 동시에 사용하기</title>
		<link>https://code.iamseapy.com/archives/180</link>
		<comments>https://code.iamseapy.com/archives/180#respond</comments>
		<pubDate>Tue, 21 Aug 2018 07:25:39 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[개발 도구]]></category>
		<category><![CDATA[terraform]]></category>
		<category><![CDATA[테라폼]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=180</guid>
		<description><![CDATA[Terraform을 여러 프로젝트에서 사용하다보면 서로 다른 버전을 요구하는 경우가 있습니다. 버전에 따라서 다르게 동작할 가능성도 있어서 모든 프로젝트의 Terraform 버전을 최신버전으로 유지하는것도 어렵습니다. Terraform에서 프로젝트마다 다른 버전을 사용하는 2가지 방법을 소개합니다. 첫번째 방법 : direnv 이용 direnv는 폴더마다 환경변수를 설정하는데 주로 사용하는 툴입니다. 이러한 특징을 이용하면 폴더마다 PATH를 다른곳을 바라보게 변경하여 폴더마다 다른버전의 Terraform을 사용할수 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p><a href="https://www.terraform.io/">Terraform</a>을 여러 프로젝트에서 사용하다보면 서로 다른 버전을 요구하는 경우가 있습니다. 버전에 따라서 다르게 동작할 가능성도 있어서 모든 프로젝트의 Terraform 버전을 최신버전으로 유지하는것도 어렵습니다.</p>
<p>Terraform에서 프로젝트마다 다른 버전을 사용하는 2가지 방법을 소개합니다.</p>
<h2>첫번째 방법 : direnv 이용</h2>
<p>direnv는 폴더마다 환경변수를 설정하는데 주로 사용하는 툴입니다. 이러한 특징을 이용하면 폴더마다 PATH를 다른곳을 바라보게 변경하여 폴더마다 다른버전의 Terraform을 사용할수 있습니다.</p>
<p>direnv 소개 및 기본 사용법은 <a href="https://www.44bits.io/ko/post/direnv_for_managing_directory_environment">direnv를 사용한 디렉토리(프로젝트) 별 개발환경 구축: 루비, 파이썬, 노드 개발 환경 구축 | 44bits.io</a>를 참고하시기 바랍니다.</p>
<ol>
<li>Terraform 버전의 실행파일을 다운로드 받습니다.</li>
<li>현재 프로젝트 폴더 아래 <code>.direnv/terraform/bin</code> 폴더를 생성하고 1번에서 다운로드 받은 파일을 복사합니다.</li>
<li><code>.envrc</code>파일에 다음 내용을 추가합니다.</li>
</ol>
<pre><code>load_prefix $(direnv_layout_dir)/terraform
</code></pre>
<ol start="4">
<li><code>direnv allow</code> 명령어를 실행하여 환경변수를 새로 로딩합니다.</li>
</ol>
<p>이제 <code>which terraform</code> 명령어를 실행하면 전역으로 설치된 Terraform 이 아닌 현재 폴더에 복사된 Terraform 버전의 실행파일을 바라보고 있음을 알수 있습니다.</p>
<h2>두번째 방법 : brew switch 이용</h2>
<p>이 방법은 Mac에서만 사용가능 합니다.</p>
<p><code>brew install terraform</code> 명령어를 이용하면 항상 최신버전의 terraform이 설치됩니다.</p>
<p>현재 설치된 버전이 0.11.8 이고 구버전이 0.11.7 인경우 두 버전을 동시에 사용하는 방법입니다.</p>
<ol>
<li><code>/usr/local/Cellar/terraform</code> 폴더로 이동</li>
<li>새로 추가하려는 버전의 이름으로 폴더 생성(ex 현재 최신버전은 0.11.8 이고 설치하고 싶은 구버전은 0.11.7인 경우 <code>0.11.7</code> 이름으로 폴더 생성)</li>
<li>생성한 폴더 아래 <code>bin</code> 폴더를 생성하고 해당 버전의 Terraform 실행파일을 홈페이지에서 다운로드후 복사</li>
</ol>
<p>이제 <code>brew switch terraform 0.11.7</code> 명령어를 실행하면 0.11.7 버전으로 변경되고 <code>brew switch terraform 0.11.8</code> 명령어를 실행하면 0.11.8 버전으로 변경됩니다.</p>
<h2>정리</h2>
<p>두가지 방법 각자의 장단점이 있는데요. 저는 현재 두번째 방법을 사용하고 있습니다.</p>
<p>첫번째 방법의 경우 <code>.direnv</code> 폴더 아래 Terraform 실행파일과 <code>.envrc</code> 파일 모두 버전관리에 포함시킨다면 다른 컴퓨터에서도 바로 사용할 수 있는 장점이 있습니다. 다만 프로젝트에서 이런방식으로 사용할것을 서로 약속해야하고 버전 업그레이드할때 마다 실행파일을 복사해야 합니다.</p>
<p>두번째 방법의 경우 일반적으로 많이 사용하는 brew 를 이용해서 편하지만 여러개의 Terraform 프로젝트가 있다면 그때마다 switch 를 수동으로 입력해야 하고 Mac 에서만 가능하다는것이 단점입니다.</p>
<p>각각 장단점이 있는데 각자 상황에 맞는 방법을 선택하면 되겠습니다.</p>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/180/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">180</post-id>	</item>
		<item>
		<title>빅쿼리 테이블 컬럼 삭제하기</title>
		<link>https://code.iamseapy.com/archives/179</link>
		<comments>https://code.iamseapy.com/archives/179#respond</comments>
		<pubDate>Sat, 30 Jun 2018 02:48:35 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[데이터 분석]]></category>
		<category><![CDATA[bigquery]]></category>
		<category><![CDATA[gcp]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=179</guid>
		<description><![CDATA[빅쿼리를 사용하다 보면 불필요해진 컬럼이 있어서 삭제하고 싶은 경우가 있습니다. 컬럼을 삭제하지 않고 그냥 둬도 되겠지만 보기에 별로고 데이터 저장비용도 많이 들어갈테니 깔끔하게 삭제하는것이 좋습니다. 빅쿼리에서 테이블 컬럼을 삭제하는 2가지 방법이 있습니다. 1번 : SQL 쿼리를 이용해서 삭제하고자 하는 컬럼을 제외한 모든 데이터를 조회하고 결과를 기존 테이블에 덮어쓰기 2번 : 데이터를 Export 해서 클라우드 스토리지에 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>빅쿼리를 사용하다 보면 불필요해진 컬럼이 있어서 삭제하고 싶은 경우가 있습니다. 컬럼을 삭제하지 않고 그냥 둬도 되겠지만 보기에 별로고 데이터 저장비용도 많이 들어갈테니 깔끔하게 삭제하는것이 좋습니다.</p>
<p>빅쿼리에서 테이블 컬럼을 삭제하는 2가지 방법이 있습니다.</p>
<ul>
<li>1번 : SQL 쿼리를 이용해서 삭제하고자 하는 컬럼을 제외한 모든 데이터를 조회하고 결과를 기존 테이블에 덮어쓰기</li>
<li>2번 : 데이터를 Export 해서 클라우드 스토리지에 저장하고 데이터에서 컬럼을 삭제후 Load job 이용해서 기존 테이블에 덮어쓰기</li>
</ul>
<p>기존 테이블에 덮어쓰기를 한다는 점에서는 어차피 둘다 동일한 방식입니다.</p>
<p>1번 방법은 데이터 조회에 따른 데이터 스캔 비용이 발생합니다.  2번 방법은 Export, Load job에 대해 비용은 없지만 스토리지 비용이 조금 발생합니다.</p>
<p>현재 저장된 데이터의 크기에 따라 적절한 방법을 선택하면 되겠습니다. 비용을 지불하더라도 편한 방법을 선택하고자 하면 1번을 데이터가 많아서 비용이 부담스럽다면 2번 방법을 선택하면 되겠습니다.</p>
<p>이 글에서는 1번 방법을 이용한 컬럼 삭제를 소개하겠습니다.</p>
<pre><code class="sql">#standardSQL
SELECT
 * EXCEPT(top_results)
FROM
 테이블 이름
</code></pre>
<ol>
<li>위의 쿼리를 입력후 &#8216;Show Options&#8217; 를 클릭하고 &#8216;Destination Table&#8217;에 덮어쓰기할 테이블을 선택합니다.</li>
<li>&#8216;Write Preference&#8217;는 &#8216;Overwrite table&#8217;을 선택합니다.</li>
</ol>
<p>이렇게 선택한후 &#8216;Run Query&#8217; 버튼을 클릭하면 작업이 시작되고 완료되면 기존 테이블에서 컬럼이 삭제됩니다. 이 작업은 데이터 크기에 따라 시간이 오래 걸릴수 있습니다.</p>
<p>생각보다 쉽죠? 하지만 결정적인 단점이 있습니다.</p>
<p>테이블을 생성할때 &#8216;Partitioning Type&#8217;을 지정해서 사용하는 경우 <code>_PARTITIONTIME</code> 필드가 모두 현재시점으로 변경되어 버립니다. 이렇게되면 데이터 스캔 비용 절약을 위해 <code>_PARTITIONTIME</code>를 사용하는 쿼리들에서 잘못된 결과가 나올수 있습니다. 테이블 데이터 크기가 큰경우 <code>_PARTITIONTIME</code>이 한날짜로 리셋되버리는것은 향후 쿼리 비용에 있어 많은 비용을 감당해야되는 상황이 발생할 수 있습니다.</p>
<p>기존 테이블을 계속 유지하고 새로운 테이블에서는 컬럼을 삭제한 상태로 새롭게 데이터를 쌓아가는것도 방법이 될수 있겠습니다.</p>
<h2>참고문서</h2>
<ul>
<li><a href="https://cloud.google.com/bigquery/docs/manually-changing-schemas#deleting_a_column_from_a_table_schema">Manually Changing Table Schemas | BigQuery</a></li>
</ul>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/179/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">179</post-id>	</item>
		<item>
		<title>Xcode 에서 Pod 프로젝트의 경고 표시 없애기</title>
		<link>https://code.iamseapy.com/archives/174</link>
		<comments>https://code.iamseapy.com/archives/174#respond</comments>
		<pubDate>Sun, 06 May 2018 04:18:16 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[iOS]]></category>
		<category><![CDATA[ios]]></category>
		<category><![CDATA[xcode]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=174</guid>
		<description><![CDATA[Xcode를 이용해 개발을 하다보면 cocoapod를 이용해 외부 라이브러리를 사용하게 되는데요. Swift 언어가 계속해서 발전하다보니 새로운 버전에서 deprecated 되는것들이 많아져서 1년만 지나도 꽤 많은수의 경고문구를 보게 됩니다. 내 프로젝트의 경우 소스코드를 직접 수정하면 되지만 외부 라이브러리들은 해당 프로젝트의 상황에 따라서 경고되는 항목들을 고치지 못하는 경우가 많습니다. 이렇게 되면 어느순간부터 내 프로젝트의 빌드 경고창에는 외부 라이브러리들의 경고가 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Xcode를 이용해 개발을 하다보면 cocoapod를 이용해 외부 라이브러리를 사용하게 되는데요. Swift 언어가 계속해서 발전하다보니 새로운 버전에서 deprecated 되는것들이 많아져서 1년만 지나도 꽤 많은수의 경고문구를 보게 됩니다. 내 프로젝트의 경우 소스코드를 직접 수정하면 되지만 외부 라이브러리들은 해당 프로젝트의 상황에 따라서 경고되는 항목들을 고치지 못하는 경우가 많습니다.</p>
<p>이렇게 되면 어느순간부터 내 프로젝트의 빌드 경고창에는 외부 라이브러리들의 경고가 많아져서 내 프로젝트의 경고가 묻히고 수정해야 된다는 사실을 인지하지 못하게됩니다.</p>
<p><img class="alignnone size-full wp-image-173" src="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/5215141F-3ECD-4313-A962-24B7A7DF6DFE.png?resize=540%2C468&#038;ssl=1" width="540" height="468" srcset="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/5215141F-3ECD-4313-A962-24B7A7DF6DFE.png?w=540&amp;ssl=1 540w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/5215141F-3ECD-4313-A962-24B7A7DF6DFE.png?resize=300%2C260&amp;ssl=1 300w" sizes="(max-width: 540px) 100vw, 540px" data-recalc-dims="1" /></p>
<p>위의 경우 총 58개의 경고가 있는데 이중 56개는 외부 라이브러리들의 경고표시입니다. 내 프로젝트의 경고표시는 제일 아래쪽에 2개가 위치합니다. 또한 경고문구는 기본으로 펼쳐져 있어서 스크롤을 아래까지 해야 겨우 볼 수 있습니다. 프로젝트가 커져서 사용하는 외부 라이브러리가 많아지면 경고는 300개를 넘는경우도 있습니다.</p>
<p>다행히도 이 문제를 해결할 방법이 있습니다. cocoapod의 경우 Podfile에 아래 내용을 추가해서 Pod 프로젝트들에 대해 경고가 표시되지 않도록 설정 할 수 있습니다.</p>
<p><code>inhibit_all_warnings!</code></p>
<p>전체 Podfile 의 샘플을 보면 다음과 같은 식입니다.</p>
<pre><code>platform :ios, '9.0'
target 'MyProject' do
  use_frameworks!
  inhibit_all_warnings!
  pod 'Alamofire', '~&gt; 4.5'
end
</code></pre>
<p>전체 Pod이 아닌 특정 Pod의 경고만 표시하지 않으려면 pod 선언할때 옵션으로 선언합니다.</p>
<p><code>pod 'Alamofire', '~&gt; 4.5', :inhibit_warnings =&gt; true</code></p>
<p>Podfile 을 수정하고 pod install 을 다시 실행한후 Xcode 프로젝트에서 빌드를 다시하거나 클린빌드를 하면 기존에 보이던 Pod 프로젝트의 경고표시가 모두 사라진것을 볼 수 있습니다.</p>
<p>이 옵션은 pod init 으로 Podfile을 처음 생성할때 기본으로 들어가면 좋을것 같은데 기본 옵션은 아닙니다.</p>
<h2>유튜브</h2>
<p>달구지 코딩이라는 유튜브 채널을 만들어서 운영중입니다. 이 포스트 내용은 아래 유튜브 영상에서도 확인할 수 있습니다. 유튜브 구독 부탁드려요 ^^</p>
<p><iframe class='youtube-player' type='text/html' width='625' height='352' src='https://www.youtube.com/embed/68r3otWErH8?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></p>
<h2>참고자료</h2>
<ul>
<li><a href="https://github.com/CocoaPods/CocoaPods/issues/4423">inhibit_all_warnings! doesn&#8217;t inhibit all warnings <img src="https://s.w.org/images/core/emoji/11/72x72/1f609.png" alt="😉" class="wp-smiley" style="height: 1em; max-height: 1em;" /> &#8211; GitHub</a></li>
<li><a href="https://stackoverflow.com/questions/13208202/ignore-xcode-warnings-when-using-cocoapods">iphone &#8211; Ignore Xcode warnings when using Cocoapods &#8211; Stack Overflow</a></li>
</ul>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/174/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">174</post-id>	</item>
		<item>
		<title>.bot 도메인 등록하기</title>
		<link>https://code.iamseapy.com/archives/172</link>
		<comments>https://code.iamseapy.com/archives/172#comments</comments>
		<pubDate>Tue, 01 May 2018 15:22:23 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[Server]]></category>
		<category><![CDATA[bot]]></category>
		<category><![CDATA[domain]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=172</guid>
		<description><![CDATA[Amazon에서 .bot 도메인을 등록할 수 있도록 해서 등록 방법을 소개하려고 합니다. .bot 도메인 등록을 대행하는 EnCirca 사이트의 설명을 보면 현재는 Landrush 2 기간으로 .bot 도메인 등록을 아무나 할 수 없고 봇을 운영중인지 확인후 등록할 수 있는 권한을 주는것으로 보입니다. 봇을 운영중인지 확인하는 것은 Amazon Lex, Microsoft Bot Framework, Dialogflow, Pandorabots, Gupshup, Botkit Studio 등 봇 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>Amazon에서 .bot 도메인을 등록할 수 있도록 해서 등록 방법을 소개하려고 합니다.</p>
<p>.bot 도메인 등록을 대행하는 EnCirca 사이트의 <a href="https://www.encirca.com/register-domain-names/bot.shtml">설명</a>을 보면 현재는 Landrush 2 기간으로 .bot 도메인 등록을 아무나 할 수 없고 봇을 운영중인지 확인후 등록할 수 있는 권한을 주는것으로 보입니다. 봇을 운영중인지 확인하는 것은 Amazon Lex, Microsoft Bot Framework, Dialogflow, Pandorabots, Gupshup, Botkit Studio 등 봇 관련 서비스들과의 연동을 통해서만 가능합니다.</p>
<p>아마도 2018년 5월 31일 이후에는 봇을 운영중인지 확인작업 없이 일반 도메인 처럼 등록되지 않을까 싶은데 확실한 정보는 아닙니다.</p>
<p>절차가 좀 길고 복잡한데 영상으로도 촬영 했으니 참고하세요.</p>
<p><iframe class='youtube-player' type='text/html' width='625' height='352' src='https://www.youtube.com/embed/PEfXo5A7LwI?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></p>
<p>.bot 도메인 등록을 위해서 우선 <a href="https://www.amazonregistry.com/bot">amazon registry 사이트</a>에 접속합니다.</p>
<p><img class="alignnone size-full wp-image-169" src="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8.png?resize=625%2C234&#038;ssl=1" width="625" height="234" srcset="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8.png?w=1273&amp;ssl=1 1273w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8.png?resize=300%2C112&amp;ssl=1 300w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8.png?resize=768%2C288&amp;ssl=1 768w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8.png?resize=1024%2C384&amp;ssl=1 1024w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8.png?resize=624%2C234&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>접속후 검색창에 구매하고자 하는 도메인 이름을 입력하고 다음 절차로 이동합니다.</p>
<p><img class="alignnone size-full wp-image-155" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-1.png?resize=625%2C222&#038;ssl=1" width="625" height="222" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-1.png?w=1276&amp;ssl=1 1276w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-1.png?resize=300%2C107&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-1.png?resize=768%2C273&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-1.png?resize=1024%2C364&amp;ssl=1 1024w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-1.png?resize=624%2C222&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>아마존 계정에 로그인 되어 있지 않다면 다음 화면으로 넘어가기전에 아마존 로그인이 필요합니다.</p>
<p><img class="alignnone size-full wp-image-158" src="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-2.png?resize=625%2C313&#038;ssl=1" width="625" height="313" srcset="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-2.png?w=676&amp;ssl=1 676w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-2.png?resize=300%2C150&amp;ssl=1 300w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-2.png?resize=624%2C313&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>봇을 운영중인지 확인하는 작업이 필요합니다. 목록에 나온 서비스중 본인이 운영중인 봇 서비스를 선택하면 확인작업에 대한 절차가 설명됩니다. 봇을 현재 운영하고 있지 않다고 가정하고 Amazon Lex를 이용해 봇을 생성하고 인증하는 절차를 설명하겠습니다.</p>
<p>Amazon Lex를 선택하면 오른쪽에 봇을 확인하기위해 필요한 절차가 표시됩니다.</p>
<p><img class="alignnone size-full wp-image-156" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-3.png?resize=454%2C330&#038;ssl=1" width="454" height="330" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-3.png?w=454&amp;ssl=1 454w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-3.png?resize=300%2C218&amp;ssl=1 300w" sizes="(max-width: 454px) 100vw, 454px" data-recalc-dims="1" /></p>
<h1>준비 작업</h1>
<p>아마존 웹서비스 계정에 로그인해서 Cross Account Role을 생성하고 545643940769 계정에 대해 권한을 추가하는 작업이 필요합니다. 그럼 이제부터 Role 을 생성해보겠습니다.</p>
<p>AWS 콘솔에 로그인후 IAM 메뉴에서 Roles 선택하고 Create Role 버튼을 클릭합니다.</p>
<p><img class="alignnone size-full wp-image-160" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-4.png?resize=625%2C468&#038;ssl=1" width="625" height="468" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-4.png?w=986&amp;ssl=1 986w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-4.png?resize=300%2C225&amp;ssl=1 300w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-4.png?resize=768%2C575&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-4.png?resize=624%2C467&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>Account ID와 External ID 항목에 앞선 .bot 도메인 등록 사이트에서 알려준 정보를 입력합니다.</p>
<p><img class="alignnone size-full wp-image-163" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-5.png?resize=625%2C211&#038;ssl=1" width="625" height="211" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-5.png?w=988&amp;ssl=1 988w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-5.png?resize=300%2C101&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-5.png?resize=768%2C260&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-5.png?resize=624%2C211&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>다음 화면에서는 Role에 부여할 Policy 를 선택해야 되는데요. AmazonLexReadOnly를 선택합니다.</p>
<p><img class="alignnone size-full wp-image-168" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-6.png?resize=625%2C297&#038;ssl=1" width="625" height="297" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-6.png?w=992&amp;ssl=1 992w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-6.png?resize=300%2C143&amp;ssl=1 300w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-6.png?resize=768%2C365&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-6.png?resize=624%2C297&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>Role 이름은 나중에 알 수 있도록 적당히 잘 정하고 설명에도 잘 적어둡니다. 여기까지는 공식사이트에서 설명하는 절차인데요. 제가 해보니 여기서 한가지가 더 필요합니다.</p>
<p>IAM 콘솔에서 Policies 를 선택하고 Create Policy 버튼을 클립합니다.</p>
<p><img class="alignnone size-full wp-image-165" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-7.png?resize=625%2C343&#038;ssl=1" width="625" height="343" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-7.png?w=1111&amp;ssl=1 1111w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-7.png?resize=300%2C164&amp;ssl=1 300w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-7.png?resize=768%2C421&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-7.png?resize=1024%2C561&amp;ssl=1 1024w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-7.png?resize=624%2C342&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>JSON 탭을 선택하고 아래 내용을 추가합니다.</p>
<pre><code>{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "lex:PostText"
      ],
      "Effect": "Allow",
      "Resource": "*"
    }
  ]
}
</code></pre>
<p>Policy 를 생성했다면 앞서 생성했던 Role을 선택하고 Attach policy 버튼을 클릭해서 방금 생성한 Policy를 추가합니다.</p>
<p><img class="alignnone size-full wp-image-170" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8-1.png?resize=625%2C367&#038;ssl=1" width="625" height="367" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8-1.png?w=1075&amp;ssl=1 1075w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8-1.png?resize=300%2C176&amp;ssl=1 300w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8-1.png?resize=768%2C451&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8-1.png?resize=1024%2C601&amp;ssl=1 1024w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-8-1.png?resize=624%2C366&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>최종적으로 위와 같은 Role을 얻게 됩니다. 이제 .bot 도메인 등록 사이트로 돌아갑니다.</p>
<h1>임시로 Lex 봇 만들기</h1>
<p>Amazon에서 제공하는 봇 서비스를 이용해 임시로 봇을 생성하겠습니다.</p>
<p>AWS 콘솔에서 Lex 페이지에 접속해서 새로운 Lex 봇을 생성합니다. Lex 봇을 처음 생성한다면 아마 첫화면에 Get Started 버튼이 보일텐데 해당 버튼을 클릭합니다.</p>
<p><img class="alignnone size-full wp-image-154" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-9.png?resize=625%2C862&#038;ssl=1" width="625" height="862" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-9.png?w=882&amp;ssl=1 882w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-9.png?resize=217%2C300&amp;ssl=1 217w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-9.png?resize=768%2C1060&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-9.png?resize=742%2C1024&amp;ssl=1 742w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-9.png?resize=624%2C861&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>봇 생성을 위한 페이지가 표시되는데 아마존이 제공하는 기본 샘플을 이용하면 코딩을 하지 않아도 됩니다. Try a sample 에서 BookTrip을 선택하고 하단의 COPPA 항목은 No로 선택합니다.</p>
<p>봇 페이지에서 오른쪽 위의 Publish 버튼을 클릭합니다.</p>
<p><img class="alignnone size-full wp-image-167" src="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-10.png?resize=625%2C176&#038;ssl=1" width="625" height="176" srcset="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-10.png?w=1245&amp;ssl=1 1245w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-10.png?resize=300%2C85&amp;ssl=1 300w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-10.png?resize=768%2C217&amp;ssl=1 768w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-10.png?resize=1024%2C289&amp;ssl=1 1024w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-10.png?resize=624%2C176&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p><img class="alignnone size-full wp-image-159" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-11.png?resize=625%2C226&#038;ssl=1" width="625" height="226" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-11.png?w=803&amp;ssl=1 803w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-11.png?resize=300%2C108&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-11.png?resize=768%2C277&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-11.png?resize=624%2C225&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>alias 는 아무이름이나 입력하고 publish 버튼을 클릭합니다. 배포하는데 1분정도 시간이 걸리니 잠깐 쉬다 오세요.</p>
<p><img class="alignnone size-full wp-image-166" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-12.png?resize=625%2C393&#038;ssl=1" width="625" height="393" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-12.png?w=810&amp;ssl=1 810w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-12.png?resize=300%2C189&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-12.png?resize=768%2C483&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-12.png?resize=624%2C392&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>배포가 완료되면 위와 같이 표시되는데요. 여기서 Bot Name과 Alias를 적어두세요.</p>
<h1>도메인 등록하기</h1>
<p>이제 준비 작업은 모두 끝났습니다. .bot 도메인 등록 사이트로 가서 아까 보였던 봇 확인 작업창에 앞서 준비했던 내용들을 입력합니다.</p>
<p><img class="alignnone size-full wp-image-161" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-13.png?resize=625%2C268&#038;ssl=1" width="625" height="268" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-13.png?w=1221&amp;ssl=1 1221w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-13.png?resize=300%2C129&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-13.png?resize=768%2C330&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-13.png?resize=1024%2C439&amp;ssl=1 1024w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-13.png?resize=624%2C268&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>AWS cross account role ARN 항목에는 앞서 생성했던 Role의 Role ARN을 입력합니다.</p>
<p><img class="alignnone size-full wp-image-171" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-14.png?resize=625%2C162&#038;ssl=1" width="625" height="162" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-14.png?w=1206&amp;ssl=1 1206w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-14.png?resize=300%2C78&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-14.png?resize=768%2C199&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-14.png?resize=1024%2C266&amp;ssl=1 1024w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-14.png?resize=624%2C162&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>봇 인증이 성공했습니다! 저 같은 경우 이미 해당 도메인에 대해 봇 인증이 되있는 상태라 메시지가 조금 다르게 나왔지만 페이지는 동일합니다.</p>
<p>Continue to registration 버튼을 클릭하면 도메인 등록을 위한 페이지로 이동합니다.</p>
<p><img class="alignnone size-full wp-image-157" src="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-15.png?resize=625%2C327&#038;ssl=1" width="625" height="327" srcset="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-15.png?w=1200&amp;ssl=1 1200w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-15.png?resize=300%2C157&amp;ssl=1 300w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-15.png?resize=768%2C401&amp;ssl=1 768w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-15.png?resize=1024%2C535&amp;ssl=1 1024w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-15.png?resize=624%2C326&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>가격이 $75 네요!! Site Builder 옵션은 선택하지 않아도 도메인 등록하는데 문제 없습니다.</p>
<p>실제 도메인 등록은 EnRica 사이트를 이용해서 진행되기 때문에 해당 사이트 가입을 위한 주소 정보를 선택하라고 나올텐데요. 기존 아마존 계정에 있는것을 선택하거나 새로 입력해서 다음 단게로 넘어갑니다.</p>
<p><img class="alignnone size-full wp-image-164" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-16.png?resize=625%2C541&#038;ssl=1" width="625" height="541" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-16.png?w=655&amp;ssl=1 655w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-16.png?resize=300%2C260&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-16.png?resize=624%2C540&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>다음 화면에서는 EnRica 사이트 가입 절차가 나옵니다.</p>
<p><img class="alignnone size-full wp-image-162" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-17.png?resize=625%2C844&#038;ssl=1" width="625" height="844" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-17.png?w=840&amp;ssl=1 840w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-17.png?resize=222%2C300&amp;ssl=1 222w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-17.png?resize=768%2C1038&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-17.png?resize=758%2C1024&amp;ssl=1 758w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage-17.png?resize=624%2C843&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>저도 여기 까지만 해봤고 더이상은 진행하지 않았습니다. 하지만 이 다음부터는 일반적인 도메인 등록 절차와 동일할테니 쉽게 할 수 있을겁니다.</p>
<h1>정리</h1>
<p>아마존에 .bot 도메인을 등록할 수 있게 한다고 해서 호기심에 내 아이디를 선점 해볼까라는 생각이었는데 생각보다 절차가 복잡했고 가격도 $75로 비싼편입니다.</p>
<p>.bot 도메인에 대한 확인 작업은 아마도 2018년 5월 31일 이후에는 없어질것으로 보여서 이 글이 큰 도움이 되지 않을수도 있지만 미리 선점하려는 분들에게 도움이 되었으면합니다.</p>
<p>마지막으로 제가 운영중인 개발관련 유튜브 채널인 <a href="https://www.youtube.com/channel/UCK7lI9EjccHY-b8hHf95Rdw">달구지코딩</a> 구독 부탁드립니다 ~ AWS 서비스를 포함한 다양한 소프트웨어 개발관련 내용을 업로드 하고 있습니다.</p>
<h2>참고자료</h2>
<ul>
<li><a href="https://www.amazonregistry.com/bot">Amazon Registry for Bot gTLD</a></li>
<li><a href="https://aws.amazon.com/ko/blogs/korea/new-bot-gtld-from-amazon/">Amazon의 신규 .BOT 도메인 서비스 개시 &#8211; AWS 한국 블로그</a></li>
<li><a href="https://www.encirca.com/register-domain-names/bot.shtml">Landrush 2 Restrictions &#8211; EnCirca</a></li>
</ul>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/172/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">172</post-id>	</item>
		<item>
		<title>Slack 프록시 서버 &#8211; slackboard 소개</title>
		<link>https://code.iamseapy.com/archives/151</link>
		<comments>https://code.iamseapy.com/archives/151#respond</comments>
		<pubDate>Tue, 01 May 2018 06:38:42 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[Server]]></category>
		<category><![CDATA[slack]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=151</guid>
		<description><![CDATA[슬랙(Slack)을 자주 사용하다 보면 여러가지 연동을 하게 됩니다. 서버나 특정 상태에 따라 슬랙에 메시지를 보내는데요. 연동도 쉬워서 사용 할수록 더 많은 연동을 하게 됩니다. 이번에 소개하려는 slackboard는 슬랙에 메시지를 전송할때 아쉬운 부분을 해결해주는 기능을 가지고 있습니다. slackboard의 주요기능은 다음과 같습니다. 커맨드 라인에서 쉽게 메시지 전송 쉘 스크립트가 비정상적으로 종료됬을때 슬랙 메시지 전송 태그 이름만으로 미리 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>슬랙(Slack)을 자주 사용하다 보면 여러가지 연동을 하게 됩니다. 서버나 특정 상태에 따라 슬랙에 메시지를 보내는데요. 연동도 쉬워서 사용 할수록 더 많은 연동을 하게 됩니다.</p>
<p>이번에 소개하려는 <a href="https://github.com/cubicdaiya/slackboard">slackboard</a>는 슬랙에 메시지를 전송할때 아쉬운 부분을 해결해주는 기능을 가지고 있습니다. slackboard의 주요기능은 다음과 같습니다.</p>
<ul>
<li>커맨드 라인에서 쉽게 메시지 전송</li>
<li>쉘 스크립트가 비정상적으로 종료됬을때 슬랙 메시지 전송</li>
<li>태그 이름만으로 미리 지정한 채널이름, 사용자 이름, 이모지 설정</li>
<li>QPS 제어 기능</li>
</ul>
<p>이중 slackboard를 꼭 써야하는 이유중 하나는 마지막의 QPS 제어 기능입니다. 일반적으로 사용하는 슬랙의 <code>Incoming webhooks</code>의 경우 초당 1건의 메시지로 제한되어 있어서 1초에 메시지를 여러개 전송하면 일부 메시지가 유실될 수 있는데 slackboard의 QPS 제어 기능을 이용하면 메시지가 유실되지 않게 분산해서 전송합니다.</p>
<p>유튜브 영상으로도 촬영 했으니 참고하세요.</p>
<p><iframe class='youtube-player' type='text/html' width='625' height='352' src='https://www.youtube.com/embed/ARvczZCdDAE?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></p>
<p>그외 장점 및 사용헤 대해서도 하나씩 알아 보기 전에 설치 방법을 알아 보겠습니다.</p>
<h2>서버 설치</h2>
<p>slackboard는 프록시 서버를 설치해야 하는데요. golang으로 작성되어 있어 사전에 go 언어를 빌드 할 수 있도록 준비해야합니다. go 언어가 설치 됬다면 아래 명령어로 slackboard 를 설치합니다.</p>
<p><code>$ go get -u github.com/cubicdaiya/slackboard/...</code></p>
<p>프록시 서버 설정을 위해 환경설정 파일(<code>config.toml</code>)을 생성하고 수정합니다.</p>
<pre><code>[core]
port = "60000"
slack_url = "https://hooks.slack.com/services/XXX/YYY"
qps = 1
max_delay_duration = 5

[log]
access_log = "stdout"
error_log = "stderr"
level = "error"

[[tags]]
tag = "dalguji"
channel = "#general"
username = "seapy"
icon_emoji = ":smile:"
parse = "full"

[[tags]]
tag = "fail"
channel = "#dalguji"
username = "seapy"
icon_emoji = ":warning:"
parse = "full"
</code></pre>
<p><code>slack_url</code>에는 본인의 슬랙 설정에서 얻은 <code>Incoming webhooks</code> 주소를 입력합니다.</p>
<p><code>[[tag]]</code> 로 시작하는 섹션은 태그를 지정하는 것으로 해당 태그 이름으로 요청이 들어오면 미리 지정된 채널이름, 사용자 이름, 사용자 이모지, 파싱모드를 적용하는것입니다. 태그를 지정해두면 메시지를 보낼때마다 채널과 사용자 이름등을 전달하지 않아도 됩니다.</p>
<h2>서버 시작 및 기본 예제 테스트</h2>
<p>slackboard 서버 시작 명령어는 다음과 같습니다. 간단하죠</p>
<p><code>$ slackboard -c config.toml &amp;</code></p>
<p>실제 운영시에는 systemd 같은 서비스에 등록해두고 사용하면 좋습니다.</p>
<p>테스트 메시지를 보내기 위해 아래 명령어를 사용합니다.</p>
<p><code>$ echo 'Hi dalguji coding' | slackboard-cli -t dalguji -s localhost:60000</code></p>
<p>echo 명령어를 이용해 stdout 으로 메시지를 전송했고 slackboard-cli 명령어는 stdout으로 받은 메시지를 dalguji 태그와 함께 <code>localhost:60000</code> 서버로 전송합니다.</p>
<p>메시지를 전송하기만 하는 클라이언트 입장에서는 슬랙의 Incoming webhooks 주소를 이용해 curl 로 보낼수도 있지만 slackboard 설치하고 서버 주소만 알면 간단하게 전송 할 수 있게됩니다.</p>
<h2>커맨드가 정상적으로 종료되지 않을 경우 알림</h2>
<p>제가 slackboard를 사용하는 이유중 하나인 명령어가 비정상적으로 종료 되었을때 슬랙으로 에러 메시지를 알려주는 기능을 살펴 보겠습니다.</p>
<p>아래 명령어를 실행하면 <code>some-command</code>라는 명령어를 알 수 없다고 하면서 에러가 발생할겁니다.</p>
<p><code>$ slackboard-log -s localhost:60000 -t fail -- some-command</code></p>
<p>하지만 에러가 발생하면 <code>localhost:60000</code> 서버의 fail 태그로 어떤 이유로 명령어가 실패 했는지 전송하고 프록시 서버는 이를 슬랙으로 전송합니다.</p>
<p><img class="alignnone size-full wp-image-150" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage.png?resize=554%2C221&#038;ssl=1" width="554" height="221" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage.png?w=554&amp;ssl=1 554w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/05/DraggedImage.png?resize=300%2C120&amp;ssl=1 300w" sizes="(max-width: 554px) 100vw, 554px" data-recalc-dims="1" /></p>
<p>저는 주로 쉘 스크립트를 정기적으로 실행하는데 실패하면 알림을 받고 싶을때 사용하는데요. 우선 아래와 같은 쉘 스크립트 파일(dalguji.sh)을 하나 만들어 둡니다.</p>
<pre><code>#!/bin/sh
echo "dalguji script"
</code></pre>
<p>에러가 발생하지 않을 정상 스크립트 입니다. 이 스크립트가 정상 실행되는지 보겠습니다.</p>
<p><code>$ slackboard-log -s localhost:60000 -t fail -- dalguji.sh</code></p>
<p>정상 실행될때는 슬랙에 메시지도 안오고 그냥 echo 만 실행됩니다. 스크립트를 조금 변경해서 에러가 발생하도록 해보겠습니다.</p>
<pre><code>#!/bin/sh
eeeeecho dalguji script
</code></pre>
<p><code>$ slackboard-log -s localhost:60000 -t fail -- dalguji.sh</code></p>
<p>다시 실행해보면 에러가 발생하고 에러 내역이 슬랙에 표시됩니다.</p>
<p>이러한 작업은 쉘 스크립트만으로도 할 수 있겠지만 이를 구현하려면 내가 만든 쉘 스크립트나 명령어를 감싸서 실패를 체크하고 슬랙으로 전송하는 스크립트를 직접 만들어야 됩니다. 하지만 slackboard는 간단한 설치와 설정으로 쉽게 사용할 수 있습니다.</p>
<h2>성공했을때도 보내고&#8230; 실패 했을때도 보내고 싶다면?</h2>
<p>마지막으로 쉘 스크립트가 성공이나 실패 했을때 모두 결과를 slack으로 전송하고 싶다면 아래와 같은 방법을 사용합니다.</p>
<pre><code>$ dalguji.sh 2&gt;&amp;1 | slackboard-cli -s localhost:60000 -c dalguji
</code></pre>
<p>스크립트 실행중 발생한 stderr 출력을 stdout으로 리다이렉트 하고 해당 메시지를 슬랙으로 전송하는 방법입니다.</p>
<h2>참고자료</h2>
<ul>
<li><a href="https://github.com/cubicdaiya/slackboard">slackboard &#8211; github</a></li>
</ul>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/151/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">151</post-id>	</item>
		<item>
		<title>Amazon CloudWatch 수집된 지표에 수식계산 Metric Math</title>
		<link>https://code.iamseapy.com/archives/146</link>
		<comments>https://code.iamseapy.com/archives/146#respond</comments>
		<pubDate>Sun, 08 Apr 2018 09:43:59 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[AWS]]></category>
		<category><![CDATA[aws]]></category>
		<category><![CDATA[cloudwatch]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=146</guid>
		<description><![CDATA[아마존 웹서비스를 사용하다보면 사용중인 서비스를 모니터링 하기 위해 CloudWatch 를 한번씩은 사용하게 됩니다. 많은 지표들이 제공되지만 제공되는 지표에 몇가지 더하거나 조합하는 경우 이번에 소개하는 Metric Math 를 이용합니다. RDS Total IOPS 수치 확인하기 RDS의 모니터링을 예로 들어보면 Read IOPS, Write IOPS라는 지표를 별도로 제공하는데 RDS의 IOPS 제한은 Read와 Write IOPS를 더한값으로 적용됩니다. 그래서 Total IOPS를 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>아마존 웹서비스를 사용하다보면 사용중인 서비스를 모니터링 하기 위해 <a href="https://aws.amazon.com/ko/cloudwatch/">CloudWatch</a> 를 한번씩은 사용하게 됩니다. 많은 지표들이 제공되지만 제공되는 지표에 몇가지 더하거나 조합하는 경우 이번에 소개하는 Metric Math 를 이용합니다.</p>
<h2>RDS Total IOPS 수치 확인하기</h2>
<p><a href="https://aws.amazon.com/ko/rds/">RDS</a>의 모니터링을 예로 들어보면 Read IOPS, Write IOPS라는 지표를 별도로 제공하는데 RDS의 IOPS 제한은 Read와 Write IOPS를 더한값으로 적용됩니다. 그래서 Total IOPS를 알고 있는것이 중요한데 CloudWatch 에서는 Total IOPS를 지표 정보로 제공하지 않습니다.</p>
<p>저 같은 경우 기존에는 Total IOPS를 모니터링 하기 위해 1분마다 Read IOPS와 Write IOPS를 조회하고 다시 Total IOPS라는 새로운 지표로 CloudWatch에 저장하는 작업을 하고 있었습니다. 하지만 Metric Math 기능을 이용하면 더이상 이렇게 할 필요가 없습니다.</p>
<p>CloudWatch 대시보드 혹은 Metrics 에서 RDS 를 선택하고 Read IOPS, Write IOPS를 각자 설정후 Graphed metrics 탭을 선택하고 테이블 상단의 Add a math express 버튼을 클릭합니다.</p>
<p><img class="alignnone size-full wp-image-145" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/capture-20180408-184108-1.png?resize=625%2C308&#038;ssl=1" width="625" height="308" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/capture-20180408-184108-1.png?w=978&amp;ssl=1 978w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/capture-20180408-184108-1.png?resize=300%2C148&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/capture-20180408-184108-1.png?resize=768%2C379&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/capture-20180408-184108-1.png?resize=624%2C308&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>클릭하면 테이블 목록 상단에 e1 이라는 id를 가진 행이 추가되고 Details에는 <code>SUM(METRICS())</code> 라고 입력됩니다. 이 수식의 의미는 현재 선택된 지표들을 모두 더한다는 의미입니다. 이 경우 Read IOPS + Write IOPS 인거죠. 수식을 이해하기 쉽게 <code>m1 + m2</code>로 변경해도 동일한 의미가 됩니다. 여기서 m1, m2는 각 행의 id 값입니다.</p>
<p><img class="alignnone size-full wp-image-143" src="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-2.png?resize=625%2C330&#038;ssl=1" width="625" height="330" srcset="https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-2.png?w=970&amp;ssl=1 970w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-2.png?resize=300%2C158&amp;ssl=1 300w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-2.png?resize=768%2C405&amp;ssl=1 768w, https://i0.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-2.png?resize=624%2C329&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>Total IOPS만 그래프에 표시하기 위해 체크 박스에서 e1 을 제외한 m1, m2는 체크를 해제하면 위와 같이 Total IOPS만 그래프에 표시되는것을 확인할 수 있습니다.</p>
<h2>ElastiCache Hit Rate 계산 하기</h2>
<p><a href="https://aws.amazon.com/ko/elasticache/">ElastiCache</a> 의 Hit Rate를 계산하는 것도 Metric Math를 이용하면 유용한 수치입니다. 캐시가 적당하게 잘 되고 있는지 볼 수 있는 유용한 지표가 Hit Rate인데 CloudWatch에서는 제공되지 않습니다.</p>
<p>이제 직접 Hit Rate를 계산해 보겠습니다.</p>
<p><img class="alignnone size-full wp-image-144" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-1-1.png?resize=625%2C326&#038;ssl=1" width="625" height="326" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-1-1.png?w=975&amp;ssl=1 975w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-1-1.png?resize=300%2C156&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-1-1.png?resize=768%2C400&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/04/DraggedImage-1-1.png?resize=624%2C325&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>Metrics 에서 모니터링을 원하는 ElastiCache 인스턴스의 <code>Get Hits</code>, <code>Get Misses</code>를 선택하고 앞서 했던 것처럼 Add a math express 버튼을 클릭합니다. 수식 입력란에 <code>(m1 / (m1 + m2)) * 100</code>를 입력하고 m1, m2의 그래프 체크박스를 해제하면 Hit Rate를 볼 수 있습니다.</p>
<h2>정리</h2>
<p>CloudWatch는 AWS 서비스를 이용하다 보면 한번쯤 접하게 되고 모니터링이나 알림 용도로 자주 사용하게 됩니다. 하지만 제공하지 않는 지표가 있거나 여러 지표를 조합하고자 하는 경우 불편한점이 있었는데 Metric Math 기능으로 인해 사용하기 편해졌습니다.</p>
<p>아쉽게도 현재는 수식이 적용된 지표에 대해서는 알림 기능을 제공하지 않습니다. 알림을 받고 싶다면 기존 방식처럼 별도의 CloudWatch 지표를 매분 마다 생성해야합니다.</p>
<p>이 내용은 제가 운영하는 유튜브 채널인 <a href="https://www.youtube.com/channel/UCK7lI9EjccHY-b8hHf95Rdw">달구지코딩</a>에서도 확인할 수 있습니다. 구독과 좋아요 부탁드립니다 ^^</p>
<p><iframe class='youtube-player' type='text/html' width='625' height='352' src='https://www.youtube.com/embed/qAIGPw8tyCU?version=3&#038;rel=1&#038;fs=1&#038;autohide=2&#038;showsearch=0&#038;showinfo=1&#038;iv_load_policy=1&#038;wmode=transparent' allowfullscreen='true' style='border:0;'></iframe></p>
<h2>참고자료</h2>
<ul>
<li><a href="https://aws.amazon.com/ko/about-aws/whats-new/2018/04/amazon-cloudwatch-adds-metric-math-to-enable-custom-operations-on-metrics/">Amazon CloudWatch, 지표에 대한 사용자 지정 연산을 지원하는 Metric Math 추가</a></li>
<li><a href="https://aws.amazon.com/ko/blogs/mt/amazon-cloudwatch-metric-math-simplifies-near-real-time-monitoring-of-your-amazon-efs-file-systems-and-more/">Amazon CloudWatch Metric Math simplifies near real-time monitoring of your Amazon EFS file systems and more</a></li>
</ul>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/146/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">146</post-id>	</item>
		<item>
		<title>Capistrano 배포시 HostKeyMismatch 발생 오류 해결</title>
		<link>https://code.iamseapy.com/archives/137</link>
		<comments>https://code.iamseapy.com/archives/137#respond</comments>
		<pubDate>Fri, 02 Feb 2018 09:21:37 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[Server]]></category>
		<category><![CDATA[ssh]]></category>
		<category><![CDATA[배포]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=137</guid>
		<description><![CDATA[배포를 하는데 HostKeyMismatch 에러가 발생 하면서 서버에 접속 하지 못해 배포가 실패 했습니다. 에러 메시지를 보니 ~/.ssh/known_hosts 파일에서 ec2에 해당하는 항목을 지워서 해결 했지만 앞으로도 계속해서 발생 가능한 문제였습니다. 웹서버를 운영하다보면 AWS의 스팟 인스턴스를 이용해서 많은 트래픽에도 유연하게 대처하는 경우가 있습니다. 스팟 인스턴스의 특성상 서버가 새로 투입되었다가 필요 없어지면 삭제하기를 반복합니다. 서버의 추가와 삭제를 반복하다보면 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>배포를 하는데 <code>HostKeyMismatch</code> 에러가 발생 하면서 서버에 접속 하지 못해 배포가 실패 했습니다. 에러 메시지를 보니 <code>~/.ssh/known_hosts</code> 파일에서 ec2에 해당하는 항목을 지워서 해결 했지만 앞으로도 계속해서 발생 가능한 문제였습니다.</p>
<p>웹서버를 운영하다보면 AWS의 스팟 인스턴스를 이용해서 많은 트래픽에도 유연하게 대처하는 경우가 있습니다. 스팟 인스턴스의 특성상 서버가 새로 투입되었다가 필요 없어지면 삭제하기를 반복합니다.</p>
<p>서버의 추가와 삭제를 반복하다보면 새로 추가한 서버의 자동 생성된 도메인 이름이나 IP가 예전에 사용했던 서버와 같은 경우가 발생할 수 있습니다. AWS의 자동 생성된 도메인 이름은 다음과 같은 형식입니다.</p>
<p><code>ec2-00-111-222-333.ap-northeast-2.compute.amazonaws.com</code></p>
<p>그래서 좀 찝찝 하지만 ec2의 자동 생성된 호스트 이름에 대해서는 <code>known_hosts</code>에 추가하지 않고 관련 체크도 하지 않도록 capistrano 설정에서 아래와 같이 추가했습니다.</p>
<pre><code>server 'ec2-??.ap-northeast-2.compute.amazonaws.com', 
   roles: %{app web}, 
   ssh_options: { verify_host_key: false }
</code></pre>
<p><code>verify_host_key</code> 옵션을 추가한 서버에 배포 할때는 <code>known_hosts</code> 에 추가하지 않고 체크도 하지 않습니다.(capistrano 예전 버전에서는 <code>verify_host_key</code>대신 <code>paranoid</code> 였습니다.)</p>
<p>이렇게 하더라도 서버에 직접 접속 할때면 여전히 <code>know_hosts</code>에 관련된 내용을 추가하려고 하는데요. 이것이 싫다면 <code>.ssh/config</code>에서 특정 호스트에 대해 체크하지 않도록 할 수 있습니다.</p>
<pre><code>Host ec2-*.ap-northeast-2.compute.amazonaws.com
  StrictHostKeyChecking no
  UserKnownHostsFile /dev/null
</code></pre>
<p>저는 이 옵션을 사용하지 않습니다. 서버 배포는 자주 해서 문제가 발생할 여지가 높고 배포를 급하게 해야될때 이런 문제가 발생하면 당황하게 되지만 서버에 ssh로 접속하는 상황에서는 중복되더라도 <code>known_hosts</code> 파일에서 지워주는게 귀찮지 않았거든요.</p>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/137/feed</wfw:commentRss>
		<slash:comments>0</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">137</post-id>	</item>
		<item>
		<title>Amazon Athena를 이용해 CloudFront 로그 분석하기</title>
		<link>https://code.iamseapy.com/archives/132</link>
		<comments>https://code.iamseapy.com/archives/132#comments</comments>
		<pubDate>Sat, 13 Jan 2018 07:33:12 +0000</pubDate>
		<dc:creator><![CDATA[seapy]]></dc:creator>
				<category><![CDATA[Athena]]></category>
		<category><![CDATA[데이터 분석]]></category>
		<category><![CDATA[athena]]></category>
		<category><![CDATA[aws]]></category>

		<guid isPermaLink="false">https://code.iamseapy.com/?p=132</guid>
		<description><![CDATA[CloudFront(클라우드 프론트)를 이용하다 보면 요청 로그를 직접 분석해야 할 필요가 있습니다. CloudFront에서 제공하는 통계 메뉴에서도 전체 요청수, Hit, Miss, Error, 상태코드, 용량, 인기객체 등 많은 데이터를 볼 수 있지만 각 요청중 오래 걸리는 요청에 대해 분석하고 싶은 경우에는 CloudFront 로그를 직접 확인해야합니다. CloudFront 로그파일 저장 CloudFront 기본 옵션은 요청 로그를 따로 저장하지 않습니다. 로그를 저장하기 [&#8230;]]]></description>
				<content:encoded><![CDATA[<p>CloudFront(클라우드 프론트)를 이용하다 보면 요청 로그를 직접 분석해야 할 필요가 있습니다.</p>
<p>CloudFront에서 제공하는 통계 메뉴에서도 전체 요청수, Hit, Miss, Error, 상태코드, 용량, 인기객체 등 많은 데이터를 볼 수 있지만 각 요청중 오래 걸리는 요청에 대해 분석하고 싶은 경우에는 CloudFront 로그를 직접 확인해야합니다.</p>
<h2>CloudFront 로그파일 저장</h2>
<p>CloudFront 기본 옵션은 요청 로그를 따로 저장하지 않습니다. 로그를 저장하기 위해 Distribution 설정에서 Logging 옵션을 On으로 변경하고 로그가 저장될 S3 버킷 이름과 경로를 지정합니다.</p>
<p><img class="alignnone size-full wp-image-130" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage.png?resize=625%2C151&#038;ssl=1" width="625" height="151" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage.png?w=1208&amp;ssl=1 1208w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage.png?resize=300%2C73&amp;ssl=1 300w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage.png?resize=768%2C186&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage.png?resize=1024%2C248&amp;ssl=1 1024w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage.png?resize=624%2C151&amp;ssl=1 624w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>저장된 로그의 저장 기간을 설정하기 위해 S3 Bucket 설정에 가서 Management &gt; Lifecycle 에서 Lifecycle Rule을 새로 생성후 Prefix에 따른 로그 삭제 기간을 설정합니다.</p>
<p><img class="alignnone size-full wp-image-129" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-1.png?resize=625%2C234&#038;ssl=1" width="625" height="234" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-1.png?w=1896&amp;ssl=1 1896w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-1.png?resize=300%2C112&amp;ssl=1 300w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-1.png?resize=768%2C288&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-1.png?resize=1024%2C383&amp;ssl=1 1024w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-1.png?resize=624%2C234&amp;ssl=1 624w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-1.png?w=1250&amp;ssl=1 1250w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p><img class="alignnone size-full wp-image-131" src="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-2.png?resize=625%2C514&#038;ssl=1" width="625" height="514" srcset="https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-2.png?w=1384&amp;ssl=1 1384w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-2.png?resize=300%2C247&amp;ssl=1 300w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-2.png?resize=768%2C631&amp;ssl=1 768w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-2.png?resize=1024%2C842&amp;ssl=1 1024w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-2.png?resize=624%2C513&amp;ssl=1 624w, https://i2.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-2.png?w=1250&amp;ssl=1 1250w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>삭제에 대한 정책을 생성하지 않으면 용량이 점점 커져서 비용이 비싸지고 로그 분석하는 데도 오래 걸립니다. 문제 해결에 필요한 로그라고 판단되는 3일치 데이터만 놔두고 3일이 지나면 삭제되도록 설정했습니다. 기간은 서비스 특징에 따라서 조정하면 됩니다.</p>
<h2>Athena 테이블 생성하기</h2>
<p>Athena 에서는 데이터를 분석하기 전에 테이블 생성작업을 해야합니다. 생성할 테이블은 앞서 생성했던 S3 데이터를 참고 하도록 설정하는것이고 이 시점에는 논리적인 테이블만 생성되고 실제 S3 데이터를 읽지 않습니다.</p>
<p>Athena의 Query Editor에서 아래 쿼리를 입력후 실행하면 <code>cloudfront_logs</code> 테이블이 생성됩니다.</p>
<pre><code>CREATE EXTERNAL TABLE IF NOT EXISTS cloudfront_logs (
  `date` date,
  `time` string,
  `location` string,
  bytes bigint,
  requestip string,
  method string,
  host string,
  uri string,
  status int,
  referrer string,
  useragent string,
  querystring string,
  cookie string,
  resulttype string,
  requestid string,
  hostheader string,
  requestprotocol int,
  requestbytes bigint,
  timetaken double,
  xforwardedfor string,
  sslprotocol string,
  sslcipher string,
  responseresulttype string,
  httpversion string
)
ROW FORMAT SERDE 'org.apache.hadoop.hive.serde2.RegexSerDe'
WITH SERDEPROPERTIES
 (
 "input.regex" = "^(?!#)([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)\\s+([^ \\t]+)$"
 )
LOCATION 's3://로그가저장된S3버킷이름/cf-logs/';
</code></pre>
<p><img class="alignnone size-full wp-image-127" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-3.png?resize=625%2C404&#038;ssl=1" width="625" height="404" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-3.png?w=2032&amp;ssl=1 2032w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-3.png?resize=300%2C194&amp;ssl=1 300w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-3.png?resize=768%2C496&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-3.png?resize=1024%2C661&amp;ssl=1 1024w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-3.png?resize=624%2C403&amp;ssl=1 624w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-3.png?w=1250&amp;ssl=1 1250w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-3.png?w=1875&amp;ssl=1 1875w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>준비를 위한 작업이 모두 끝났습니다. 복잡하다고 생각할수도 있지만 다른 서비스를 이용하는 경우 여기까지의 준비 작업을 위해 데이터를 파싱하고 다시 저장하는등의 작업을 해야되는것을 생각하면 Athena의 준비 작업은 간단합니다.</p>
<h2>느린 요청 로그만 추출하기</h2>
<p>이미지 요청 속도가 특별히 느린 사용자들의 특징을 찾기 위해 응답시간이 느린 로그만 추출 해보겠습니다.</p>
<pre><code>SELECT 
   date,
   time,
   timetaken,
   location,
   requestip,
   resulttype,
   responseresulttype,
   concat('https://', host, uri)
 FROM "default"."cloudfront_logs" 
 WHERE 
   timetaken &gt; 1
 LIMIT 100;
</code></pre>
<p>위 SQL은 응답시간이 1초 이상 걸린 로그만 보여줍니다. 이를 통해 특정 엣지에서 요청이 느린것인지 아니면 특정 IP만 느린지 확인할 수 있습니다.</p>
<p>엣지 로케이션 별로 1초 이상 걸린 요청의 갯수를 알고 싶다면 아래 SQL을 실행합니다.</p>
<pre><code>SELECT 
   location,
   count(*) as cnt
 FROM "default"."cloudfront_logs" 
 WHERE 
   timetaken &gt; 1
 GROUP BY location
 ORDER BY cnt DESC
</code></pre>
<p><img class="alignnone size-full wp-image-128" src="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-4.png?resize=625%2C397&#038;ssl=1" width="625" height="397" srcset="https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-4.png?w=1704&amp;ssl=1 1704w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-4.png?resize=300%2C190&amp;ssl=1 300w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-4.png?resize=768%2C488&amp;ssl=1 768w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-4.png?resize=1024%2C650&amp;ssl=1 1024w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-4.png?resize=624%2C396&amp;ssl=1 624w, https://i1.wp.com/code.iamseapy.com/wp-content/uploads/2018/01/DraggedImage-4.png?w=1250&amp;ssl=1 1250w" sizes="(max-width: 625px) 100vw, 625px" data-recalc-dims="1" /></p>
<p>결과를 보니 별 의미는 없네요. ICN으로 시작하는건 한국 엣지 로케이션인데 절대적인 요청수가 많다보니 1초 이상 걸린것도 많이 나왔습니다.</p>
<p>이외에도 UserAgent를 분석해 기기나 OS에 따른 구분이나 HTTP 프로토콜 버전에 따른 구분등 할 수 있는것이 많습니다. 본인만의 SQL을 좀더 잘 만들어 본다면 CloudFront를 잘 사용하는데 도움이 될것입니다.</p>
<h2>주의 할점</h2>
<p>Athena는 데이터 분석에 필요한 데이터를 스캔하는 용량 만큼 과금됩니다. SQL을 잘못 작성해서 너무 많은 데이터를 참고 하게 되면 많은 비용이 청구 될 수 있으니 데이터를 적절히 제한해서 SQL 을 작성하는 노력이 필요합니다.</p>
<p>데이터가 많지 않으면 그냥 막 해도 상관 없습니다. 1TB 데이터를 스캔 하는데 $5 정도라서 데이터가 100기가 라면 500원 10 기가라면 50원이니까요 ^^</p>
<h2>참고자료</h2>
<ul>
<li><a href="http://docs.aws.amazon.com/athena/latest/ug/cloudfront-logs.html">Querying Amazon CloudFront Logs &#8211; AWS Document</a></li>
<li><a href="https://aws.amazon.com/ko/athena/">Amazon Athena 공식 페이지</a></li>
</ul>
<p>대표 이미지 : Photo by <a href="https://unsplash.com/photos/Q1p7bh3SHj8?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">NASA</a> on <a href="https://unsplash.com/search/photos/code?utm_source=unsplash&amp;utm_medium=referral&amp;utm_content=creditCopyText">Unsplash</a></p>
<p>게시글의 아마존, iTunes 링크들을 통해 구매를 하시면 제휴(Affiliate) 프로그램에 의해 저에게 일정 금액이 적립될 수 있습니다. ^_____^</p>]]></content:encoded>
			<wfw:commentRss>https://code.iamseapy.com/archives/132/feed</wfw:commentRss>
		<slash:comments>1</slash:comments>
	<post-id xmlns="com-wordpress:feed-additions:1">132</post-id>	</item>
	</channel>
</rss>
