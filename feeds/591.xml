<?xml version="1.0" encoding="UTF-8" ?>








<rss version="2.0"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/"
	xmlns:activity="http://activitystrea.ms/spec/1.0/" >
<channel>
	
		
			<title><![CDATA[alice_k106님의 블로그]]></title>
			<link>https://blog.naver.com/alice_k106</link>
			
				<image>
					<url><![CDATA[https://blogpfthumb-phinf.pstatic.net/MjAxNzA4MDlfMTYg/MDAxNTAyMjYwMzgwMTEx.JVaZgNyEDUfyTmEvnfOEHx-PMqKB-dWZr10l4SmxiPAg.eNMkRoMq0JKLlcwtpqgXYOGKuDAzyPI8_0x9VvsFZDsg.JPEG.alice_k106/ik13.jpg?type=m2]]></url>
					<title><![CDATA[alice_k106님의 블로그]]></title>
					<link>https://blog.naver.com/alice_k106</link>
				</image>
			
			<description><![CDATA[만 24세 초보 개발자입니다. 
전문연구요원 취업 준비중입니다.  

기술적인 토론, 지적은 언제나 환영입니다. *^^*

쪽지는 확인 못해요 :(
댓글/방명록에 써주세요..]]></description>
			<language>ko</language>
			<generator>Naver Blog</generator>
			<pubDate>Mon, 13 May 2019 22:47:33 +0900</pubDate>

			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[4. 새로운 소식]]></category>
					<title><![CDATA[49. [Prometheus] Kubecon 2018 : eBay의 Federated Prometheus 및 쿼리 구조]]></title>
					<link>https://blog.naver.com/alice_k106/221535804289</link>
					<guid>https://blog.naver.com/alice_k106/221535804289</guid>
					<description><![CDATA[https://www.youtube.com/watch?v=YVj_aqUbpYs Aggregation을 위한 Federation을 둬서 데이터를 쿼리한다. Shard는 hashmod를 통해서 한다. (공식 문서에서도 언급하고 있는 방법이다) 프로메테우스는 항상 Active-Stanby로 둔다. (전통적인 RDBMS처럼) 마지막 Q&amp;A에서 발표자가 추후 Thanos를 사용할거라고 이야기했는데, 사용하는데는 크게 문제가 없는 듯 하다. 트위터에서 Thanos를 소개했더니 어느 분께서 사용해보시고 잘 된다고도 말씀해주셨다 :D 근데 Grafana 연동이 될지는 모르겠다. ]]></description>
					<pubDate>Sun, 12 May 2019 21:39:45 +0900</pubDate>
					<tag><![CDATA[kubecon2018,Prometheus,쿠버네티스]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[1. 여러가지 이야기]]></category>
					<title><![CDATA[3. 개발하거나 글을 쓸 때 듣는 노래들]]></title>
					<link>https://blog.naver.com/alice_k106/221535615253</link>
					<guid>https://blog.naver.com/alice_k106/221535615253</guid>
					<description><![CDATA[유튜브 재생 목록에서 동영상이 삭제되는 경우가 있어, 삭제되어도 음악 이름을 보존할 수 있도록 재생 목록을 적어두려 한다. 일일이 노래 제목을 옮겨적는 것이 귀찮아서 간단한 웹크롤링 스크립트를 개발해 사용했다. 12345678910111213from bs4 import BeautifulSoupimport requests urls = ["https://www.youtube.com/playlist?list=PLDYGy7SMBmKTWNdODAd7Rw2801Hl5xf96", # English "https://www.youtube.com/playlist?list=PLDYGy7SMBmKRYGtjOGprmkKlFRrCUtutq"] # Japanese for url in urls: data = requests.get(url).text soup = BeautifulSoup(data, 'html.parser') video_list = soup.find_all(class_="pl-video-title-link") for i .......]]></description>
					<pubDate>Sun, 12 May 2019 16:22:55 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Big Data 및 DB]]></category>
					<title><![CDATA[170. [Prometheus] 2편. PromQL 사용하기, k8s에서 Meta Label과 relabel을 활용한 기본 라벨 설정, 그 외의 이야기]]></title>
					<link>https://blog.naver.com/alice_k106/221535575875</link>
					<guid>https://blog.naver.com/alice_k106/221535575875</guid>
					<description><![CDATA[이번 포스트에서는 프로메테우스에서 PromQL을 사용하는 방법과 기본 라벨 설정 방법에 대해서 다룬다. 이전 포스트에서 이어지는 내용이다. https://blog.naver.com/alice_k106/221535163599 4. PromQL 사용하기 프로메테우스는 데이터를 쿼리하기 위해서 PromQL 이라고 하는 자체 쿼리 언어를 사용한다. PromQL은 사용 방법이 어렵지 않기 때문에 RDBMS의 쿼리문에 익숙한 사람들도 쉽게 사용 방법을 익힐 수 있다. 단, 프로메테우스는 Time-series DB이기 때문에 모든 쿼리는 Select문을 전제로 하며, CRud를 기본 원칙으로 한다. 모두 프로메테우스 공식 문서에 설명되어있는 내용들이지만, 자주 사용되는 것들만 다시 정리해 보았다. 4.1 기.......]]></description>
					<pubDate>Sun, 12 May 2019 15:12:58 +0900</pubDate>
					<tag><![CDATA[프로메테우스,Prometheus,prometheus,모니터링,monitoring,k8s,쿠버네티스,kubernetes,label,meta_label]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Big Data 및 DB]]></category>
					<title><![CDATA[169. [Prometheus] 1편 : Prometheus (프로메테우스) 사용 방법, 기본 개념, 데이터 구조]]></title>
					<link>https://blog.naver.com/alice_k106/221535163599</link>
					<guid>https://blog.naver.com/alice_k106/221535163599</guid>
					<description><![CDATA[이번 포스트에서는 프로메테우스 (Prometheus) 에 대한 전반적인 사용 방법에 대해서 다룬다. k8s와 같은 CNCF의 OSS들은 대부분 프로메테우스를 데이터 백엔드로 사용하기 때문에, 대략적으로라도 사용 방법을 알아두는 것이 좋다. 1. Prometheus 개요 1.1 Prometheus 에 대하여 프로메테우스는 CNCF에 소속된 오픈소스 프로젝트이며, 시계열 데이터를 처리하는 것이 주 목적인 Time-series DB이다. 프로메테우스는 주로 CPU, 메모리 사용량과 같은 Metrics 데이터에 대한 APM 구축을 목적으로 하기 때문에, MSA 형태의 컨테이너 서비스, 대규모 서버 클러스터 모니터링 등에서 사용되는 것이 일반적이다. 예를 들어 HTTP 응답 데이터와 같은 Me.......]]></description>
					<pubDate>Sat, 11 May 2019 21:34:18 +0900</pubDate>
					<tag><![CDATA[데이터베이스,Prometheus,프로메테우스,prometheus,PromQL,CNCF,클라우드]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Linux]]></category>
					<title><![CDATA[168. [Linux] 투명 셀로판지 이론을 통한 Overlay FS 사용 방법과 유니온 마운트 (Union Mount) 이해하기]]></title>
					<link>https://blog.naver.com/alice_k106/221530340759</link>
					<guid>https://blog.naver.com/alice_k106/221530340759</guid>
					<description><![CDATA[이번 포스트에서는 OverlayFS (오버레이 파일 시스템) 에 대해서 다룬다. 참고로, 직접 사용해 보기에는 AUFS가 더 쉽다. 1. Union Mount File System (유니온 마운트 파일 시스템) 유니온 마운트란, 하나의 디렉터리 지점에 여러 개의 디렉터리를 마운트함으로써, 마치 하나의 통합된 디렉터리처럼 보이게 하는 것을 의미한다. 이를 간단하게 설명하자면, 마치 투명한 셀로판지를 여러 개 겹쳐서 위에서 내려다 보는 것과 비슷하다고 할 수 있다. 겹쳐진 여러 개의 셀로판지를 위에서 보게 되면 가장 위쪽에 있는 셀로판지의 그림만이 보일 것이고, 아래의 셀로판지 그림은 위쪽에 위치한 셀로판지에 의해 가려져서 보이지 않기 때문이다. 나는.......]]></description>
					<pubDate>Sun, 05 May 2019 22:37:24 +0900</pubDate>
					<tag><![CDATA[Docker,Overlay,Filesystem,Linux,UnionMount,오버레이,유니온마운트,도커,컨테이너]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[7. 각종 리뷰]]></category>
					<title><![CDATA[[Review] Next '19 Extended GDG Seoul 후기]]></title>
					<link>https://blog.naver.com/alice_k106/221528338714</link>
					<guid>https://blog.naver.com/alice_k106/221528338714</guid>
					<description><![CDATA[이번 포스트에서는 Next &#x27;19 Extended GDG 서울 후기에 대해 다룬다.2019년 5월 1일, Next &#x27;19 Extended가 서울 역삼동 마루 180에서 오후 7시 30분에 진행되었다. 이 행사는 지난 4월 샌프란시스코에서 개최되었던 Google Cloud Next의 연장선상에 있는 소모임인데, 총 4분께서 Google Cloud Next에서 보고 들었던 것 중 인상깊은 내용들을 발표해 주셨다.참가비 5천원을 내긴 했지만, 주최측에서 코르크 컵받침대와 같은 기념품, 피자와 콜라(!) 를 제공해주셨다.총 4분께서 Google Cloud Next와 쿠버네티스에 대해서 좋은 내용을 공유해 주셨기에, 이를 적어보려 한다.1. Next 19&#x27; 경험 나누기 (By 현 지환 님)첫 번.......]]></description>
					<pubDate>Fri, 03 May 2019 00:26:38 +0900</pubDate>
					<tag><![CDATA[GDG,GoogleCloudNext,Cloud,클라우드,쿠버네티스,Kubernetes,VSCode,CloudRun,CloudCode]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[미분류 (Unity 외)]]></category>
					<title><![CDATA[[Tip] 쿠버네티스에서 똑같은 Object를 다른 API Version으로 생성하면?]]></title>
					<link>https://blog.naver.com/alice_k106/221523573018</link>
					<guid>https://blog.naver.com/alice_k106/221523573018</guid>
					<description><![CDATA[동일한 기능을 한다. 어느 친절하신 분이 나의 질문에 답변을 주셨다. https://www.reddit.com/r/kubernetes/comments/bh696h/different_api_version_in_kubernetes/ 예를 들어, 동일한 쿠버네티스 버전에서 Deployment를 apps/v1, extension/v1beta1.. 으로 생성해도, 기능 자체는 동일하다. 그러나 버전 차이에 따라 YAML 파일에서 정의되는 항목은 달라질 수 있기 때문에, 가능하다면 Stable한 API 버전을 사용하는 것이 권장된다 Stable한 API 버전이 존재하는데도 이전 API 버전을 쿠버네티스에서 계속 지원하는 이유는 간단하다. 이전 버전의 API 버전을 사용하는 쿠버네티스 클라이언트 또는 API 서버와의 호환성을 유지하기 위함이라고 한.......]]></description>
					<pubDate>Fri, 26 Apr 2019 23:21:31 +0900</pubDate>
					<tag><![CDATA[쿠버네티스,Kubernetes]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[7. 각종 리뷰]]></category>
					<title><![CDATA[[Review] 쿠버네티스 모니터링 소모임 (1회)]]></title>
					<link>https://blog.naver.com/alice_k106/221523332135</link>
					<guid>https://blog.naver.com/alice_k106/221523332135</guid>
					<description><![CDATA[얼마 전, 쿠버네티스 페이스북에서 우연히 쿠버네티스 모니터링 소모임에 대한 글을 보았고, 늦게나마 신청해 오늘 소모임 발표 자리에 참석할 수 있었습니다. 오늘의 소모임은 2019년 4월 25일 목요일 오후 19:30 부터 21:30까지, 분당역의 SK U타워 8층의 교육장에서 진행되었습니다. 오늘의 발표는 (1) Opencensus + Prometheus, (2) Istio Service Mesh 두 가지 주제로 진행되었는데, 발표를 맡아 주신 두 분께서 재밌는 내용을 상세히 설명해주셔서 부담 없이 들을 수 있었습니다. 무엇보다도, 초보자인 저도 쉽게 이해하고 들을 수 있어 너무 좋았습니다 (!)참고로 쿠버네티스 모니터링 소모임은 누구나 자유롭게 신청해 참석할 수 있.......]]></description>
					<pubDate>Fri, 26 Apr 2019 17:32:28 +0900</pubDate>
					<tag><![CDATA[쿠버네티스,모니터링,Kubernetes,Monitoring,Istio,Opencensus,Prometheus,Envoy,Cloud]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[167. [Kubernetes] 쿠버네티스 모니터링 : Prometheus Adapter와 Opencensus를 이용한 Custom Metrics 수집 및 HPA 적용]]></title>
					<link>https://blog.naver.com/alice_k106/221521978267</link>
					<guid>https://blog.naver.com/alice_k106/221521978267</guid>
					<description><![CDATA[이번 포스트에서는 Prometheus + Prometheus Adapter를 통해 Custom Metrics를 수집하고, 이를 Horizontal Pod Autoscaler (이하 HPA) 에 제공해 Pod를 오토스케일링 하는 방법에 대해서 다룬다. 모든 YAML 파일은 나의 Github에서 내려 받아 사용하면 편하다. 1. 쿠버네티스의 모니터링에 대하여 이 글을 읽고 있다면 적어도 쿠버네티스의 모니터링에 관심이 있는 분일 것 같습니다. 그러나 아쉽게도, 여타 기능들과는 다르게 쿠버네티스 모니터링은 아키텍처가 뚜렷하게 정해져 있지 않습니다. 그러다보니 Kubernetes Monitoring이라는 키워드로 구글링을 해봐도, 모두들 다른 컴포넌트를 제각기의 방법으로 구성하고 있기 때문에, 모니터링 시.......]]></description>
					<pubDate>Thu, 25 Apr 2019 00:30:16 +0900</pubDate>
					<tag><![CDATA[Prometheus,프로메테우스,Opencensus,opencensus,prometheus,monitoring,Kubernetes,쿠버네티스,클라우드,metrics,Metrics]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[3. 논문 리뷰]]></category>
					<title><![CDATA[5. [석사 학위 논문] 컨테이너 간 성능 간섭을 고려한 워크로드 스케줄링 방법에 대한 연구]]></title>
					<link>https://blog.naver.com/alice_k106/221513573407</link>
					<guid>https://blog.naver.com/alice_k106/221513573407</guid>
					<description><![CDATA[얼마 전, 제 학위 논문이 dCollection을 통해 공개되었습니다. http://khu.dcollection.net/srch/srchDetail/2000001725521. 논문 명 : A Study on Workload Scheduling Methods Considering Performance Interference in Container Environment(컨테이너 환경에서 성능 간섭을 고려한 워크로드 스케줄링에 대한 연구) 2. 요약 Cache Pollution은 한 컨테이너에서 L1 ~ LLC cache miss가 너무 많이 발생해 메모리 대역폭을 과도하게 차지하게 되고, 결국 동일 호스트 내의 다른 컨테이너의 성능을 저하시킬 수 있는 현상입니다. cgroup 단계에서는 이를 예방할 방법이 없으며, 이를 해결하기 위해 서울대쪽에서 page coloring, cache isolation.......]]></description>
					<pubDate>Sun, 14 Apr 2019 21:51:37 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Docker]]></category>
					<title><![CDATA[166. [Docker] Docker 네트워크 구조 : userland proxy, iptables 및 hairpining]]></title>
					<link>https://blog.naver.com/alice_k106/221513460725</link>
					<guid>https://blog.naver.com/alice_k106/221513460725</guid>
					<description><![CDATA[이번 포스트에서는 도커 엔진만 사용 할 때 활성화되는 userland proxy, iptables에 대해서 다룬다. 사실 이번 포스트는 쓸 생각이 없었는데, 주위에서 계속 똑같은걸 물어보길래 정리해보려고 한다. 전혀 어렵지 않은 내용이다. 1. Userland Proxy와 iptables 도커 컨테이너에 포트포워딩을 해 생성하면, 기본적으로 docker-proxy 프로세스가 함께 생성된다. docker run -p 옵션으로 컨테이너를 생성할 경우, 컨테이너로 들어오는 트래픽을 처리하기 위해 docker-proxy 프로세스가 생성된다. 그러나 아래와 같이 docker-proxy 프로세스를 죽여도 외부 요청은 컨테이너 내부로 정상적으로 도착한다. 이는 기본적으로 컨테이너가 트래픽을 받아들.......]]></description>
					<pubDate>Sun, 14 Apr 2019 18:55:10 +0900</pubDate>
					<tag><![CDATA[docker,Docker,도커,iptables,userlandproxy]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[165. [Kubernetes] 쿠버네티스 스케줄러 및 스케줄링 동작 방식 (Taints, Toleration, Affinity, 커스텀 스케줄러 등)]]></title>
					<link>https://blog.naver.com/alice_k106/221511412970</link>
					<guid>https://blog.naver.com/alice_k106/221511412970</guid>
					<description><![CDATA[이번 포스트에서는 쿠버네티스의 스케줄링에 대해서 다룬다. 사실 전혀 어렵지 않은 내용인데, 기록하지 않으면 잊을 것 같다. (틀린 내용 있을 수 있음) 가상화 기술이 클라우드 기술의 뿌리라고 한다면, 스케줄링은 클라우드의 꽃이라고 말할 수 있지 않을까. 1. 쿠버네티스의 스케줄링 원리 Pod를 생성할 때 Pod의 spec에 여러 조건을 추가함으로써 원하는 노드에 할당할 수 있으며, 쿠버네티스에서는 kube-scheduler 라는 이름의 컴포넌트가 Pod가 할당 될 노드를 결정합니다. kube-scheduler는 kube-system 네임스페이스에 실행 중인 Pod로서 존재하기 때문에 직접 스케줄러의 존재를 확인할 수도 있습니다. 아래와 같이 kube-scheduler의 p.......]]></description>
					<pubDate>Thu, 11 Apr 2019 21:05:53 +0900</pubDate>
					<tag><![CDATA[쿠버네티스,Kubernetes,Taints,Toleration,스케줄러,Scheduler]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[미분류 (Unity 외)]]></category>
					<title><![CDATA[[Tip] 기억하기 위한 여러 팁들]]></title>
					<link>https://blog.naver.com/alice_k106/221507277530</link>
					<guid>https://blog.naver.com/alice_k106/221507277530</guid>
					<description><![CDATA[Docker - Docker Toolbox에서, Virtualbox with NDIS6은 호스트 전용 어댑터에서 버그가 있다. NDIS5 사용 권장.- Docker Hub에서 네임스페이스가 생략된 이미지들은 기본적으로 library/ 가 생략되어 있는 것. (ex. library/mysql:5.7)- 1 Process per 1 Container (X) 1 Program per 1 Container (O)- 이미지 이름들은 localhost:5000/example/echo:latest 와 같은 형태도 가능한 듯. Kubernetes - minikube는 Bare Metal로도 설치가 가능하다. 굳이 Virtual Box 필요 없다고 함.- Pod에 컨테이너 여러개일 경우, -c 옵션으로 명령어에서 특정 컨테이너 지정 가능.- Deployment를 배포할 경우 무조건 --record를 써서 리비전을 남기자.- ping 테.......]]></description>
					<pubDate>Sat, 06 Apr 2019 23:10:49 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[164. [Kubernetes] Nginx Ingress에서 Proxy Protocol을 통해 Client Source IP를 가져오기 위한 삽질]]></title>
					<link>https://blog.naver.com/alice_k106/221505569455</link>
					<guid>https://blog.naver.com/alice_k106/221505569455</guid>
					<description><![CDATA[이번 포스트에서는 Nginx Ingress에서 Proxy Protocol을 통해 클라이언트의 Source IP를 가져오는 방법에 대해서 다룬다. 자세한 설명은 쿠버네티스 공식 문서를 참고하는게 낫다. 1. 프록시로 인한 Source IP 변경 리버스 프록시를 통해 REST 서비스 요청에 대한 LB를 수행할 경우 NAT에 의해 출발지, 목적지 IP가 변경된다. 그러나 가끔씩은 클라이언트의 IP를 얻을 필요가 있는데, 이 경우 Nginx (LB) 의 Proxy Protocol이라고 하는 기능을 통해 Source IP를 보존할 수 있다. 이는 HTTP 헤더에 X-Real-Ip와 같은 특수한 필드를 정의함으로써 동작한다. 말보다는 직접 해보는 것이 빠를 것 같다. 테스트용 Deployment, Service, Ingress 규칙 및.......]]></description>
					<pubDate>Thu, 04 Apr 2019 18:07:14 +0900</pubDate>
					<tag><![CDATA[Kubernetes,쿠버네티스,로드밸런싱,LoadBalance,LB,Nginx,Ingress]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[4. 새로운 소식]]></category>
					<title><![CDATA[48. [Cloud] DDNS가 문제가 된 경우: 14초의 응답 없음 문제]]></title>
					<link>https://blog.naver.com/alice_k106/221503988231</link>
					<guid>https://blog.naver.com/alice_k106/221503988231</guid>
					<description><![CDATA[NLB DNS &amp; Cross AZ를 검색하다가 어쩌다가 발견하게 된 내용. http://dveamer.github.io/backend/TroubleshootingDNSHAOnAWS.html Apache httpd에서 Worker Process / Master Process 간의 DNS IP 전파가 정적으로 이루어져 있어 발생한 문제. 정적인 환경에선 최고의 솔루션일수도 있어도, 동적인 클라우드 환경에는 적합하지 않은 것들이 존재할 수도 있다.]]></description>
					<pubDate>Tue, 02 Apr 2019 22:36:20 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[163. [Kubernetes] 2편 : 쿠버네티스 Ingress의 ClusterIP Bypass, Annotation, SSL/TLS를 위한 인증서 적용]]></title>
					<link>https://blog.naver.com/alice_k106/221503924911</link>
					<guid>https://blog.naver.com/alice_k106/221503924911</guid>
					<description><![CDATA[이번 포스트에서는 Ingress의 상세한 내용들, 예를 들어 Service의 ClusterIP의 Bypass, Ingress의 Annotation들, Nginx의 인증서 적용을 통한 보안 연결 (https) 방법에 대해서 다룬다. 조금 난잡한 포스트가 될지도 모른다. 1. Service ClusterIP의 Bypass 1.1 사용자의 요청이 Pod에 도착하기까지 4년 전 정도에, 쿠버네티스와 같은 컨테이너 오케스트레이션 툴을 처음 봤을 때 들었던 생각은, '이렇게 프록시가 많고, 트래픽 포워딩이 많은데, NIC 대역폭 낭비 아니에요? ㅎㅎ' 였다. 도커 스웜 모드와 쿠버네티스는 NodePort 등에서의 LB 정책을 kube-proxy (또는 docker-proxy) + iptables를 통해 구현했으며, 그 내부 원리는 대부분 Virtu.......]]></description>
					<pubDate>Tue, 02 Apr 2019 21:13:05 +0900</pubDate>
					<tag><![CDATA[Kubernetes,쿠버네티스,클라우드,인증서,Annotation,ClusterIP,Bypass]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[162. [Kubernetes] 1편 : 쿠버네티스 Ingress 개념 및 사용 방법, 온-프레미스 환경에서 Ingress 구축하기]]></title>
					<link>https://blog.naver.com/alice_k106/221502890249</link>
					<guid>https://blog.naver.com/alice_k106/221502890249</guid>
					<description><![CDATA[이번 포스트에서는 쿠버네티스에서 인그레스 (Ingress) 를 사용하는 방법, 그리고 Public 클라우드를 쓰지 않았을 때 (온-프레미스 환경) 트래픽을 처리하기 위한 구조를 어떻게 설계할 수 있는지를 다룬다. 1. 쿠버네티스 인그레스 (Ingress) 란 일반적으로, 네트워크 트래픽은 Ingress와 egress (잘 사용하지는 않는 단어이긴 하지만) 으로 구분된다. Ingress는 외부로부터 서버 내부로 유입되는 네트워크 트래픽을, egress는 서버 내부에서 외부로 나가는 트래픽을 의미한다. 쿠버네티스에도 Ingress라고 하는 리소스 오브젝트가 존재한다. 쿠버네티스의 Ingress는 외부에서 쿠버네티스 클러스터 내부로 들어오는 네트워크 요청 : 즉, Ingress.......]]></description>
					<pubDate>Mon, 01 Apr 2019 18:26:38 +0900</pubDate>
					<tag><![CDATA[쿠버네티스,클라우드,Kubernetes,Ingress,Nginx,nginx]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[미분류 (Unity 외)]]></category>
					<title><![CDATA[[Tip] MacOS Iterm2에서 Option + 화살표 키 (Arrow) 로 문자열 이동하기]]></title>
					<link>https://blog.naver.com/alice_k106/221501080798</link>
					<guid>https://blog.naver.com/alice_k106/221501080798</guid>
					<description><![CDATA[터미널 (Bash) 에서는 Alt + 화살표 키를 누르면 문자열 앞 뒤로 이동하는 기능을 제공한다. 클라우드를 공부하는 특성 상, 어쩔수 없이 Ubuntu / CentOS를 번갈아 쓰는데, 이상하게 CentOS에 SSH로 붙어 사용할 때만 동작하지 않는다. 알고 보니 Ubuntu 에서는 zsh에 호환되는 keybind가 /etc/inputrc에 정의되어 있었다. 아래는 Key Hit Event를 조합한 Input 명령 조합이다. 사실, 어느 keybind가 zsh를 위한 것인지 몰라서, Ubuntu의 inputrc를 CentOS로 옮겨서 하나씩 다 테스트했다. zsh를 사용하는 iTerm2에서도 bash_profile에 아래와 같이 추가하니 잘 동작한다. 근데 구글링해보니 좋은 설명 글이 있어서 여기에 남긴다.]]></description>
					<pubDate>Sat, 30 Mar 2019 11:06:05 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[161. [Kubernetes] AWS에서 EKS를 사용해 쿠버네티스 클러스터 생성하기]]></title>
					<link>https://blog.naver.com/alice_k106/221500778260</link>
					<guid>https://blog.naver.com/alice_k106/221500778260</guid>
					<description><![CDATA[티스토리에서 글을 작성하고 있으며, 작성되는 내용은 네이버 블로그에 링크로 대체할 계획입니다. 이번에는 AWS를 이용해 EKS에서 쿠버네티스 클러스터를 생성하는 방법에 대해서 다뤄보았습니다. https://alicek106.tistory.com/24 어쨌든, EKS의 기본적인 구성도는 아래와 같습니다. Ingress를 붙이면 NLB와 함께 Controller가 하나 더 추가됩니다.]]></description>
					<pubDate>Fri, 29 Mar 2019 21:52:24 +0900</pubDate>
					<tag><![CDATA[AWS,EKS,Kubernetes,쿠버네티스,클라우드]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[160. [Kubernetes] Terraform + Kubespray + AWS 조합으로 쿠버네티스 클러스터 배포하기]]></title>
					<link>https://blog.naver.com/alice_k106/221497196321</link>
					<guid>https://blog.naver.com/alice_k106/221497196321</guid>
					<description><![CDATA[이번 포스트에서는 Terraform (이하 테라폼) + kubespray + AWS 을 이용해 쿠버네티스 클러스터를 띄우는 방법에 대해서 알아본다. 1. Terraform + Kubespray + AWS = Kubernetes Kubespray는 쿠버네티스를 쉽게 설치해줄 수 있는 자동화 도구 중 하나이며 쿠버네티스 자동 설치 동종업계인 Kops와 종종 비교되곤 한다. 두 설치 도구 모두 GCP, AWS, Azure 등의 클라우드 플랫폼을 지원한다는 점은 동일하나 Kubespray는 베어메탈 (일반 서버, 가상 머신 등) 환경에서의 설치도 지원한다는 점이 다르다. Kubespray와 비교했을 때, Kops는 각 클라우드 환경에 적합한 오브젝트들의 프로비저닝도 자동화해준다는 점이 다른 듯 하다. 예를 들면 AWS에.......]]></description>
					<pubDate>Mon, 25 Mar 2019 21:13:06 +0900</pubDate>
					<tag><![CDATA[클라우드,쿠버네티스,kubespray,kubernetes]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[159. [Kubernetes] Pause 컨테이너의 역할과 원리 (원문: The Almighty Pause Container)]]></title>
					<link>https://blog.naver.com/alice_k106/221495126401</link>
					<guid>https://blog.naver.com/alice_k106/221495126401</guid>
					<description><![CDATA[이 포스트는 Ian Lewis의 'The Almighty Pause Container' 를 허락 하에 번역한 것입니다. 상업적 용도로 사용될 수 없으며, 본 포스트의 내용을 사용할 때는 반드시 출처를 명시해야 합니다. 쉬운 이해, 재밌는 이해를 위해 매우 많이 의역했습니다. 오역은 이해해주시면 감사하겠습니다. 지적 환영! This post is translation of 'The Almighty Pause Container' written by Ian Lewis. It cannot be used for commercial purpose.원문 링크 (Original Link) : https://www.ianlewis.org/en/almighty-pause-container ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ절취선 ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ.......]]></description>
					<pubDate>Sat, 23 Mar 2019 01:32:50 +0900</pubDate>
					<tag><![CDATA[kubernetes,쿠버네티스,컨테이너]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[미분류 (Unity 외)]]></category>
					<title><![CDATA[[Toy Project] 쿠버네티스에서 MNIST 분산 머신러닝하기]]></title>
					<link>https://blog.naver.com/alice_k106/221494910895</link>
					<guid>https://blog.naver.com/alice_k106/221494910895</guid>
					<description><![CDATA[쿠버네티스에서 MNIST 분산 머신러닝하기. 요즘 전문연구요원 준비, 책 개정판 준비 하면서 짬짬이 하고 있는 것. horovod나 kubeflow와 같은 분산 머신 러닝 프레임워크를 따라해서 직접 쿠버네티스에서 구현을 해보고 있다. 사실 이런거 하지 말고 백준에서 알고리즘을 풀어야 전문연구요원에 들어가는데.. 그래도 이미 다 구축해버린걸 어떡해.. https://github.com/ml-kubernetes/MNIST 왜 시작했니? 사실 kubeflow를 사용해보려했는데 ksonnet이 deprecated (정확히는 해체?) 되면서 kubeflow도 업데이트가 안될수도 있어서.. 쿠버네티스에서 분산 머신러닝을 한 번 직접 만들어보았다. 성능은 좋아지니? 당연히.. 학습을 병렬로 처리하니 성.......]]></description>
					<pubDate>Fri, 22 Mar 2019 19:49:08 +0900</pubDate>
					<tag><![CDATA[장난감,토이프로젝트,머신러닝,MNIST,쿠버네티스]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Cloud, 분산시스템]]></category>
					<title><![CDATA[158. [Cloud] boto를 이용한 EC2 인스턴스의 Ansible Inventory 자동 작성 (Dynamic Discovery)]]></title>
					<link>https://blog.naver.com/alice_k106/221494698585</link>
					<guid>https://blog.naver.com/alice_k106/221494698585</guid>
					<description><![CDATA[이번 포스트에서는 boto를 이용해 앤서블의 인벤터리를 EC2 인스턴스로 Discovery하는 방법에 대해 다룬다. 사실 이번에도 크게 어렵지는 않은 내용인데, 기록해두지 않으면 잊어버릴것 같다. 1. boto 설치 및 Discovery 스크립트 준비 앤서블로 EC2 인스턴스를 관리하려면 인스턴스의 Public IP를 일일이 인벤터리에 적어줘야 하는데, EIP를 모든 인스턴스에 부여할 것이 아니라면 사실 추천하고 싶지 않은 방법이다. 서비스 부하가 증가할 때 인스턴스를 Auto Scale 할 경우도 고려해서 인벤터리가 작성되어 있어야 하기 때문에, 결국은 Dynamic Discovery 기능을 앤서블에 추가해 사용해야 한다. boto 패키지 및 앤서블에서 제공되는 소스코드.......]]></description>
					<pubDate>Fri, 22 Mar 2019 15:32:17 +0900</pubDate>
					<tag><![CDATA[클라우드,자동화,앤서블,ansible,AWS]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[157. [Kubernetes] 쿠버네티스 인증서 (CA) 및 인증 (auth) 에 관련된 공부]]></title>
					<link>https://blog.naver.com/alice_k106/221492934710</link>
					<guid>https://blog.naver.com/alice_k106/221492934710</guid>
					<description><![CDATA[이번 포스트에서는 예전에 했었던 쿠버네티스 인증서 및 인증에 대한 내용을 적어보려고 한다. 대단한 내용은 아니지만, 안적어두면 나중에 분명 까먹을듯 싶어서.. 이번 포스트는 내용이 다소 난잡할 수 있다.2019. 03 25 추가 : 이 링크를 보면 참 좋을듯. 나중에 봐야겠다. https://twitter.com/learnk8s/status/1109571846272372737 쿠버네티스와 root CA kubeadm이나 kubespray로 쿠버네티스를 설치했다면 일반적으로 단일 root CA가 존재한다. 이 인증서는 kubelet, api-server, controller 등과 같은 컴포넌트 간의 통신에 사용되는 하위 SSL 인증서를 생성할 때 쓰인다. 별도의 디렉터리를 설정하지 않았다면 /etc/kubernetes/ssl 디렉터.......]]></description>
					<pubDate>Wed, 20 Mar 2019 16:02:38 +0900</pubDate>
					<tag><![CDATA[쿠버네티스,Kubernetes,CA,인증서]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Cloud, 분산시스템]]></category>
					<title><![CDATA[156. [Terraform] 테라폼 (Terraform) 개념 설명 및 AWS 인스턴스 생성하기]]></title>
					<link>https://blog.naver.com/alice_k106/221489260596</link>
					<guid>https://blog.naver.com/alice_k106/221489260596</guid>
					<description><![CDATA[이번 포스트에서는 테라폼(Terraform)을 이용해 AWS에서 인스턴스를 생성하고 접속하는 방법에 대해서 다룬다. 나도 깊게 사용해본건 아니라서, 대충 개념과 사용법정도만 정리해보았다. 1. 테라폼이란 테라폼 (Terraform) 은 하시코프에서 제공하는 클라우드 인프라 환경 배포 툴이다. Ansible이나 Chef와 비슷하다고 생각할 수 있으나, 테라폼은 '특정 클라우드 환경' 을 배포하는 것에 좀 더 초점이 맞춰져 있다는 것이 다르다. Ansible은 일반 서버,가상 머신, 심지어 라즈베리파이에서도 SSH를 통해 동일한 환경을 배포할 수 있는 반면, 테라폼은 AWS, GCP 등의 클라우드 플랫폼 위에서 환경을 배포할 때 주로 사용한다. 그러나 코드로서 인.......]]></description>
					<pubDate>Fri, 15 Mar 2019 20:50:31 +0900</pubDate>
					<tag><![CDATA[terraform,테라폼,클라우드]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[4. 새로운 소식]]></category>
					<title><![CDATA[9999. [Network] 500 마일 밖으로는 전송이 되지 않는 메일 서버 ]]></title>
					<link>https://blog.naver.com/alice_k106/221482282492</link>
					<guid>https://blog.naver.com/alice_k106/221482282492</guid>
					<description><![CDATA[https://www.ibiblio.org/harris/500milemail.html 1. 대학 이메일 서버가 500마일보다 멀리 있는 곳으로는 이메일이 전송되지 않는다고 기술팀에 문의. 2. Timeout이 0으로 셋팅되어 3밀리세컨드 이상이 걸리는 지역에는 메일이 전송되지 않는 것. 3. 작성자가 대략 계산을 해보니 3밀리세컨드가 미치는 범위는 대략 500마일이였다고. 번역본 : https://edykim.com/ko/post/500-mile-email-problem/논리적으로 말이 안되는 것 같아도, 때로는 그런 것들도 있다는 것을 ^^..]]></description>
					<pubDate>Thu, 07 Mar 2019 10:55:38 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[5. 강좌]]></category>
					<title><![CDATA[[강좌] VirtualBox에서 Docker MacVLAN 사용을 위한 설정]]></title>
					<link>https://blog.naver.com/alice_k106/221480200046</link>
					<guid>https://blog.naver.com/alice_k106/221480200046</guid>
					<description><![CDATA[책 본문의 '2.2.7.2 도커 네트워크 기능' 장 중, MacVLAN 항목의 부가 설명입니다. Virtual Box를 통해 MacVLAN을 테스트하려는 경우, 아래의 설정을 수행해야만 정상적으로 네트워크가 동작합니다. 1. 각 가상 머신에서 아래의 명령어를 입력합니다. 아래의 예시는 enp0s8을 입력했지만, 운영 체제에 따라 호스트 전용 브릿지를 사용하는 인터페이스의 이름이 다를 수 있으니 적절한 이름을 입력해야 합니다. 1ip link set enp0s8 promisc on # 적절한 NIC의 이름 입력 필요 (호스트 전용 어댑터)cs 2. VirtualBox에서 각 가상 머신의 설정 탭에 들어간 뒤, 호스트 전용 어댑터 네트워크에서 무작위모드를 허용합니다. 이후, 컨테이너 -&gt; 가.......]]></description>
					<pubDate>Mon, 04 Mar 2019 21:34:30 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[5. 강좌]]></category>
					<title><![CDATA[[강좌] overlay2에서 도커 컨테이너 사용 공간 제한을 위한 설정]]></title>
					<link>https://blog.naver.com/alice_k106/221475695116</link>
					<guid>https://blog.naver.com/alice_k106/221475695116</guid>
					<description><![CDATA[이번 포스트에서는 책 2.2.9.4장의 부가 설명으로서, overlay2 스토리지 드라이버에서 디스크를 설정하는 방법에 대해서 설명합니다. 도커 엔진이 기본적으로 사용하는 디렉터리인 /var/lib/docker가 위치한 디스크의 파일 포맷을 xfs로 변경하는 작업을 수행합니다. 그러나 일반적으로는 /var/lib/docker가 루트 파일 시스템 마운트에 포함되어있기 때문에, 새롭게 파일 시스템을 포맷할 경우 루트 파일 시스템에 저장하고 있던 정보를 손실할 수 있습니다. 따라서, 본 포스트는 Virtual Box의 VM에서 새로운 디스크를 연결한 뒤 이를 도커 스토리지로 사용하는 예시를 설명합니다. 실제로는 새로운 디스크를 서버에 핫플러그로 꽂은 경우 (USB,.......]]></description>
					<pubDate>Wed, 27 Feb 2019 01:17:21 +0900</pubDate>
					<tag><![CDATA[시작하세요도커,컨테이너,도커,docker]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Docker]]></category>
					<title><![CDATA[155. [Docker] Docker for Mac 에서 Linuxkit 내부로 들어가 /var/lib/docker 디렉터리 확인하기]]></title>
					<link>https://blog.naver.com/alice_k106/221471626184</link>
					<guid>https://blog.naver.com/alice_k106/221471626184</guid>
					<description><![CDATA[이번 포스트에서는 Docker for Mac에서 실행되는 가상 머신에 들어가는 방법에 대해서 다른다. 1. Docker for Mac과 Linuxkit 보통 Docker for Mac을 사용하면 로컬 Mac에 /var/run/docker.sock 파일이 생성되기 때문에 Mac 터미널에서도 docker 명령어 클라이언트를 사용할 수 있다. 그러나 컨테이너, 이미지 레이어 파일 등 실제 도커에 관련된 파일은 로컬 Mac의 /var/lib/docker (기본 --data-root 경로) 에 존재하지 않는데, 이는 도커 엔진이 맥북 자체가 아닌 Linuxkit 위에서 실행되기 때문이다. 1 Linuxkit을 이용한 Docker for Mac 구조 Linuxkit은 2017년 DockerCon에서 소개되었던 기술로, 최소화된 리눅스 커널로 리눅스 환경을 구.......]]></description>
					<pubDate>Thu, 21 Feb 2019 20:51:47 +0900</pubDate>
					<tag><![CDATA[Docker,DockerForMac,Hyperkit,Linuxkit]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[4. 새로운 소식]]></category>
					<title><![CDATA[47. [Kubernetes] KubeCon 2018 동영상 모음]]></title>
					<link>https://blog.naver.com/alice_k106/221469138026</link>
					<guid>https://blog.naver.com/alice_k106/221469138026</guid>
					<description><![CDATA[예전에는 KubeCon이나 DockerCon 가고 싶다는 생각을 많이 했는데.. 요즘은 웬만하면 모든 세션을 유튜브 동영상으로 제공하고 있어 굳이 현장에 가지 않더라도 KubeCon 발표를 들을 수 있다. ^^.. 영어 리스닝이 잘 안된다면 자동 생성되는 영어 자막을 틀어 놓는 것도 좋은 방법이다. https://www.youtube.com/playlist?list=PLxlCI-LN9VxplkBOovMMUvBMTB3PJu7K0 + 추가. 발표 슬라이드도 따로 볼 수 있다. '노고단' 님 감사합니다 ^^.. https://github.com/cloudyuga/kubecon18-NA]]></description>
					<pubDate>Tue, 19 Feb 2019 00:14:28 +0900</pubDate>
					<tag><![CDATA[KubeCon2018]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Security]]></category>
					<title><![CDATA[154. [Security] SSL과 인증서 구조 이해하기 : CA (Certificate Authority) 를 중심으로]]></title>
					<link>https://blog.naver.com/alice_k106/221468341565</link>
					<guid>https://blog.naver.com/alice_k106/221468341565</guid>
					<description><![CDATA[이번 포스트에서는 인증서의 구조와 동작 원리에 대해 알아보고, 이것이 실제 SSL 기반의 보안 연결에서 어떻게 사용되는지에 대해 알아본다. 사실은, 쿠버네티스에서 User (SA가 아님) 사용하다가 인증서 관리를 다시 하게 되어서...... 다 아는 내용이지만 정리해보았다. 0. 들어가기 전 본 포스트는 독자가 기초적인 네트워크 및 암호화 기술 지식을 알고 있다는 가정 하에 작성되었다. 그 중 필수적으로 알아야 하는 기술은 '비대칭 키' 방식으로, 흔히 말하는 PKI (Public Key Infrastructure : 공개 키 기반의 암호화 시스템) 의 작동 원리를 반드시 이해해야만 한다. 비대칭 키의 동작 원리는 크게 어렵지 않기 때문에 본 포스트에서 별도.......]]></description>
					<pubDate>Mon, 18 Feb 2019 04:46:02 +0900</pubDate>
					<tag><![CDATA[네트워크,보안,인증서,security,비대칭키,대칭키,SSL,TLS]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Docker]]></category>
					<title><![CDATA[153. [Docker] vxlan를 이용한 overlay 네트워크 구성 및 discovery를 위한 consul 연동 (2편)]]></title>
					<link>https://blog.naver.com/alice_k106/221465311757</link>
					<guid>https://blog.naver.com/alice_k106/221465311757</guid>
					<description><![CDATA[저번 포스트에 이어서, 이번에는 consul에 컨테이너의 정보를 등록하고 이를 가져와 자동으로 오버레이 네트워크에 등록하는 작업을 파이썬으로 코딩해본다. 처음부터 끝까지 다 이해하고 나니, 확실히 좋은 네트워크 공부가 된 듯 하다. -- 절취선 -- 이 글은 D2SI의 블로그 중 Laurent Bernaille가 작성한 Deep Dive into Docker Overlay Network 포스트를 번역한 것이며, 이 글의 모든 권리는 D2SI에게 있으므로 상업적 용도로 사용될 수 없습니다. 독자의 이해를 돕기 위하여, 원문에 주석 및 부연 설명을 추가하였습니다. All right reserved not to me, but to Laurent Bernaille, writter of original post in D2SI blog. For only non-co.......]]></description>
					<pubDate>Thu, 14 Feb 2019 01:38:17 +0900</pubDate>
					<tag><![CDATA[오버레이,Overlay,네트워크,도커,Docker,컨테이너,Consul]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Docker]]></category>
					<title><![CDATA[152. [Docker] vxlan를 이용한 overlay 네트워크 구성 및 discovery를 위한 consul 연동 (1편)]]></title>
					<link>https://blog.naver.com/alice_k106/221464946026</link>
					<guid>https://blog.naver.com/alice_k106/221464946026</guid>
					<description><![CDATA[이번 포스트에서는 ip 커맨드를 이용해 컨테이너 vxlan 및 오버레이 네트워크를 구성하는 방법에 대해서 다룬다. 더 나아가, consul에 컨테이너의 정보를 저장함으로써 각 호스트가 어떻게 자동적으로 컨테이너를 discovery할 수 있을지도 알아본다. 1. 들어가기 전에 이 글은 D2SI의 블로그 중 Laurent Bernaille가 작성한 Deep Dive into Docker Overlay Network 포스트를 번역한 것이며, 이 글의 모든 권리는 D2SI에게 있으므로 상업적 용도로 사용될 수 없습니다. 독자의 이해를 돕기 위하여, 원문에 주석 및 부연 설명을 추가하였습니다. All right reserved not to me, but to Laurent Bernaille, writter of original post in D2SI blog. .......]]></description>
					<pubDate>Wed, 13 Feb 2019 16:58:05 +0900</pubDate>
					<tag><![CDATA[네트워크,오버레이,overlay,docker,도커,vxlan]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[4. 새로운 소식]]></category>
					<title><![CDATA[46. [Network] 5G 환경에서 네트워크 슬라이싱, 그리고 엣지 클라우드]]></title>
					<link>https://blog.naver.com/alice_k106/221457811252</link>
					<guid>https://blog.naver.com/alice_k106/221457811252</guid>
					<description><![CDATA[얼마 전, 페이스북이 SKT 브로드밴드에 망 사용료를 제공한다는 기사를 본 적이 있었다. 이로서 SKT를 통해 페이스북을 이용하는 사용자들은 더욱 원활한 (?) 서비스를 제공받을 수 있을지도 모른다는 이야기가 나오기도 했는데, 여기서 가장 먼저 떠오른 단어는 다름아닌 '망 중립성' 과 '5G 네트워크' 였다. 국내 기업들처럼 외국 기업 또한 망 사용료를 지불한다는 것은, 추후 5G 네트워크가 일반인에게 상용화가 된 다음에도 네트워크 망 벤더에게 금액을 지불하고 더 나은 5G 환경을 제공받을 수 있음을 암시하기 때문이다. 이를 통해 서비스 사업자는 5G 환경에서도 차별화된 QoS 및 SLA를 제공받을 수 있을텐데, 이를 위해서 반드시 요구.......]]></description>
					<pubDate>Sun, 03 Feb 2019 16:39:08 +0900</pubDate>
					<tag><![CDATA[엣지컴퓨팅,5G,엣지클라우드]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[1. 여러가지 이야기]]></category>
					<title><![CDATA[2. 컴퓨터공학과 대학원에 입학하기 전에 알았더라면 좋았을 것들 (석사)]]></title>
					<link>https://blog.naver.com/alice_k106/221447654146</link>
					<guid>https://blog.naver.com/alice_k106/221447654146</guid>
					<description><![CDATA[최근 몇 달 간 석사 학위 논문 주제를 연구하고 논문을 작성하느라 블로그에 전혀 신경을 쓰지 못했다. 누군가 말했듯이, 대학원 생활은 선택과 집중의 연속이며, 한정된 시간을 효율적으로 투자해 최대한의 연구 결과물을 내놓을 수 있어야 한다. 한동안 오픈소스 공부와 블로그 글 작성을 포기한 결과, 나름대로 만족할 만한 졸업 논문을 작성할 수 있었다. 비록 완벽한 연구는 아니었지만 나름대로 스스로가 만족할 수 있는 주제로 연구를 마쳤기에 석사 학위 심사도 무사히 통과할 수 있었다고 생각한다. (물론 석사 학위는 큰 문제가 없는 한, 대부분의 대학에서는 무난하게 통과시키긴 한다) 이젠 전문연구요원 취직 준비중에 있다. 제발 어.......]]></description>
					<pubDate>Mon, 21 Jan 2019 21:21:33 +0900</pubDate>
					<tag><![CDATA[대학원,석사,학위]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[4. 새로운 소식]]></category>
					<title><![CDATA[45. [Netwotk] DNS의 쿼리 레코드 종류들 (service discovery와 클라우드 구성의 관점에서)]]></title>
					<link>https://blog.naver.com/alice_k106/221379323592</link>
					<guid>https://blog.naver.com/alice_k106/221379323592</guid>
					<description><![CDATA[클라우드 서버 클러스터를 운영하다 보면 service discovery를 어떻게 구성해야 할지 고민하게 된다. swarmkit이나 kubernetes에 내장된 discovery 기능을 사용할 수도 있지만, 정말 가끔씩은 consul 이나 etcd 등을 연동해 srv 레코드 등을 기반으로 하는 별도의 dns를 구성해야 할 때도 있다. 이를 위해선 dns, ddns 및 요청에 대한 resolve 응답 레코드 종류를 상세히 알고 이해할 필요가 있다. http://forum.centos-webpanel.com/dns/bind-dns-record-examples/ 참고 :물론 LB 등을 고려하지 않는 정적인 환경이라면 A 레코드와 같이 매우 간단한 형식으로도 쉽게 구성할 수 있을 듯 하다 (dns를 직접 configure할 수 있다는 가정 하에). 또.......]]></description>
					<pubDate>Wed, 17 Oct 2018 12:35:58 +0900</pubDate>
					<tag><![CDATA[클라우드,dns,network]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Front/Back-end]]></category>
					<title><![CDATA[151. [Flask] Flask MVC 모델로 웹 페이지 개발하기 (기본) ]]></title>
					<link>https://blog.naver.com/alice_k106/221375101934</link>
					<guid>https://blog.naver.com/alice_k106/221375101934</guid>
					<description><![CDATA[이번 포스트에서는 Flask를 사용해 웹 개발을 하는 방법에 대해서 알아본다. 연구실에서 쓰일 쿠버네티스 클라우드를 개발하다보니 프론트엔드/백엔드 둘 다 개발하게 됬는데, Flask도 Spring 처럼 MVC로 개발할 수 있다는 사실을 알게되어 이를 테스트해보았다. 단, 이 포스트는 Flask MVC의 정석적인 개발 방법을 설명하지 않으며, 구글링하면서 알게 된 간단한 MVC 사용 방법만을 설명하므로 유의하기 바란다. 1. 개발 환경 세팅 파이참, 파이썬 3에서 테스트하였다. 프로젝트 생성 시, 'Pure Python' 이 아닌 'Flask' 를 선택하면 좀 더 쉽게 프로젝트를 설정할 수 있다. 적당한 이름으로 프로젝트를 생성하면 아래와 같은 디렉터리 구조를 확.......]]></description>
					<pubDate>Thu, 11 Oct 2018 01:06:43 +0900</pubDate>
					<tag><![CDATA[웹,Web,Flask,MVC,frontend]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Network]]></category>
					<title><![CDATA[150. [SSH, Network] SSH 포트 포워딩(SSH 터널링)의 개념 및 사용 방법]]></title>
					<link>https://blog.naver.com/alice_k106/221364560794</link>
					<guid>https://blog.naver.com/alice_k106/221364560794</guid>
					<description><![CDATA[이번 포스트에서는 'SSH 포트 포워딩' 또는 'SSH 터널링' 이라고 불리는 것에 대해서 설명한다. 1. SSH 포트 포워딩이란? 많은 개발자들이 SSH를 단순히 원격 터미널 접속 용도로만 사용한다. 그렇지만 SSH는 기본적인 접속 기능 외에도 'SSH 포트 포워딩' 또는 'SSH 터널링 기능' 이라고 불리는 것을 제공한다 (두 용어는 같은 것을 의미한다). 터널링이라는 단어는 보통 VXLAN의 Overlay Network에서 물리적 토폴로지를 논리적으로 나눌 때에나 등장하는 단어일 터인데, 신기하게도 SSH 에서도 그와 비슷한 기능을 사용할 수 있다. 단적으로 말하자면, SSH 터널링은 '프록시' 와 비슷한 역할을 하며, SSH의 특징 상 SSH 터널링을 통해 전달되.......]]></description>
					<pubDate>Sun, 23 Sep 2018 19:14:23 +0900</pubDate>
					<tag><![CDATA[SSH,보안,네트워크]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[149. [Kubernetes] 쿠버네티스에서 Persistent Volume 사용하기 (라이프사이클과 Access Mode 등)]]></title>
					<link>https://blog.naver.com/alice_k106/221360324682</link>
					<guid>https://blog.naver.com/alice_k106/221360324682</guid>
					<description><![CDATA[이번 포스트에서는 PV와 PVC의 라이프사이클, Access Mode를 비롯한 각종 잡다한 내용에 대해서 다룬다. 1. PV와 PVC의 라이프사이클 (Reclaim Policy) 쿠버네티스의 PV와 PVC는 일반적인 볼륨과는 조금 다른 라이프사이클을 가진다. 이 이야기를 하기 이전에, PV와 PVC가 어떠한 경로를 통해 바인딩되며 그 상태는 어떤 것이 있는지를 알 필요가 있다. PV에는 Available, Bound, Released, Fail 총 4가지 상태가 존재한다. 기본적으로 PV가 생성되고 나면 Available 상태가 되며, PVC에 의해 바인딩되면 Bound 상태로 바뀐다. Released는 바인딩되었던 PVC가 삭제되었을 경우이고, Fail은 모종의 이유로 문제가 생겼을 경우이다. 여기서 다루.......]]></description>
					<pubDate>Mon, 17 Sep 2018 01:16:26 +0900</pubDate>
					<tag><![CDATA[쿠버네테스,Kubernetes,스토리지,Storage]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[148. [Kubernetes] 쿠버네티스에서 Persistent Volume 사용하기 (NFS, Google PD, StorageClass, Dynamic Provisiong)]]></title>
					<link>https://blog.naver.com/alice_k106/221360005336</link>
					<guid>https://blog.naver.com/alice_k106/221360005336</guid>
					<description><![CDATA[이번 포스트에서는 쿠버네티스에서 Persistent Volume을 사용하는 방법에 대해서 다룬다. NFS를 먼저 설명한 후, GKE의 GPD(GCE Persistent Disk)를 Dynamic Provisioning + Storage Class로 사용하는 방법을 설명한다. PV와 PVC의 라이프사이클, AccessMode는 다음 포스트에서 설명할 예정이다. 사실 AWS에서 kops로 구성한 쿠버네티스에서도 써보려고 했지만 글이 너무 길어져 생략했다. 지난 포스트의 내용에서 이어진다. 2.2 NFS 블록 스토리지인 iSCSI는 로컬 시스템에 마운트하고 포맷해 로컬 OS에 호환되는 파일 시스템으로 포맷해 사용하는것과 달리, NFS는 이미 존재하는 파일 시스템을 로컬에 마운트해 사용할 수 있는 Network Attac.......]]></description>
					<pubDate>Sun, 16 Sep 2018 14:41:58 +0900</pubDate>
					<tag><![CDATA[쿠버네테스,Kubernetes,스토리지,Storage]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[147. [Kubernetes] 쿠버네티스에서 Persistent Volume 사용하기 (Local, iSCSI)]]></title>
					<link>https://blog.naver.com/alice_k106/221348788068</link>
					<guid>https://blog.naver.com/alice_k106/221348788068</guid>
					<description><![CDATA[이번 포스트에서는 쿠버네티스에서 Persistent Volume을 사용하는 방법에 대해서 다룬다. 쿠버네티스도 도커 스웜과 비슷하게 여러 호스트에 걸쳐 Stateless한 컨테이너를 마이크로서비스로서 배포하는 것을 목표로 하기 때문에, 실제 운영 단계에서는 어쩔 수 없이 Persistent Volume의 도입을 고려해야만 한다. 쿠버네티스는 다양한 스토리지 디스크에 대한 마운트 인터페이스를 지원하기 때문에 현재 환경에 적합한 스토리지를 선택해 사용하면 된다. 나의 주관적인 견해로서는, 쿠버네티스의 Persistent Volume은 아래와 같이 구분될 수 있다, 쿠버네티스가 지원하는 모든 스토리지에 대해서는 여기에서 확인할 수 있다. 임시 볼륨로컬 볼륨.......]]></description>
					<pubDate>Thu, 30 Aug 2018 04:25:03 +0900</pubDate>
					<tag><![CDATA[kubernetes,쿠버네테스]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[4. 새로운 소식]]></category>
					<title><![CDATA[44. [Kubernetes] 쿠버네티스에서의 권한 관리]]></title>
					<link>https://blog.naver.com/alice_k106/221342007797</link>
					<guid>https://blog.naver.com/alice_k106/221342007797</guid>
					<description><![CDATA[최근 쿠버네티스의 권한 관리에 대한 글을 많이 찾지 못해 아쉬웠었는데, 아래 링크는 이를 다루고 있다. 나중에 꼭 읽어봐야겠다. https://twitter.com/devsfarm/status/1030266400164573185 http://arisu1000.tistory.com/27848]]></description>
					<pubDate>Mon, 20 Aug 2018 00:43:38 +0900</pubDate>
					<tag><![CDATA[쿠버네테스,Kubernetes]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[5. 강좌]]></category>
					<title><![CDATA[[강좌] AWS에서 Role을 포함한 IAM 사용자 추가하기]]></title>
					<link>https://blog.naver.com/alice_k106/221342005691</link>
					<guid>https://blog.naver.com/alice_k106/221342005691</guid>
					<description><![CDATA[AWS에 로그인한 뒤 우측 상단의 '내 보안 자격 증명' 을 클릭한 뒤, 좌측의 '사용자' 를 클릭하면 아래와 같은 화면을 볼 수 있다. 상단의 '사용자 추가' 를 클릭한다. '사용자 이름' 에 적절한 IAM 사용자 이름을 입력한다. AWS 액세스 유형은 필요에 따라 체크한다. 프로그래밍 방식 액세스의 경우 API나 awscli 등에서 접근해야 할 때 체크하며, AWS Management Console 액세스는 콘솔 사이트에 액세스 해야할 때 체크한다. 나의 경우, 두 가지를 모두 체크해 사용한다. 다음은 IAM Role을 설정한다. 해당 IAM 사용자가 어떠한 역할(권한)을 수행할 수 있는지를 그룹에 정의하고, 해당 그룹에 IAM 사용자를 추가하는 방식으로 진행된다. 그룹.......]]></description>
					<pubDate>Mon, 20 Aug 2018 00:38:30 +0900</pubDate>
					<tag><![CDATA[aws,강좌]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[146. [Kubernetes] kops를 이용해 AWS에서 쿠버네티스 설치하기 (gossip 이용)]]></title>
					<link>https://blog.naver.com/alice_k106/221341984607</link>
					<guid>https://blog.naver.com/alice_k106/221341984607</guid>
					<description><![CDATA[이번 포스트에서는 AWS에서 쿠버네티스를 사용할 수 있는 방법 중 하나인 kops를 설명한다. 1. kops (Kubernetes Operations) 에 대하여 쿠버네티스 설치를 자동화해주는 툴은 이전 포스트에서 간단히 설명했던 kubespray나 kubeadm 등이 있으며, 이와 함께 종종 언급되곤 하는 툴로서 kops가 있다. kops 또한 kubespray처럼 쿠버네티스 설치를 자동화해주는 것은 동일하지만 AWS나 Digital Ocean 등의 클라우드에서만 사용할 수 있고, 각 클라우드의 고유한 특징(AWS의 Route53 등..) 이 반영되어있다는 점이 다른 것으로 보인다. 현재 kops AWS를 공식적으로 지원하고 있으며, Digital Ocean, GCE, vSphere를 베타 버전으로 제공하고 있다. kop.......]]></description>
					<pubDate>Sun, 19 Aug 2018 23:55:17 +0900</pubDate>
					<tag><![CDATA[Kubernetes,쿠버네테스,kops]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Kubernetes]]></category>
					<title><![CDATA[145. [Kubernetes] 파이참(pycharm)에서 쿠버네티스 개발을 하기 위한 삽질의 기록]]></title>
					<link>https://blog.naver.com/alice_k106/221341757624</link>
					<guid>https://blog.naver.com/alice_k106/221341757624</guid>
					<description><![CDATA[이번 포스트에서는 파이참에서 쿠버네티스 개발을 하려고 노력했던 삽질을 기록해보려고 한다. 자세한 사용법은 https://github.com/alicek106/pycharm-remote-builder 에서 확인할 수 있다. 연구실에서 맡은 프로젝트인 "내가 졸업연구때 개발한 클라우드 플랫폼을 쿠버네티스 기반으로 리팩토링" 을 시작하기에 앞서 개발 환경을 어떻게 해야할지 고민이었다. 쿠버네티스가 공식적으로 제공하는 라이브러리는 Go, Python 두 개이며 나머지 언어들은 커뮤니티 지원(Community Support) 인데, Go는 내가 할줄 모르니 선택지는 파이썬밖에 없었다. 파이썬을 쓰니 자연스레 파이참을 쓰게 되었고, 파이참을 쿠버네티스 개발 환경과 연동하기 위해 삽.......]]></description>
					<pubDate>Sun, 19 Aug 2018 16:20:27 +0900</pubDate>
					<tag><![CDATA[파이썬,Python,Kubernetes,쿠버네테스,컨테이너]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[8. 문예]]></category>
					<title><![CDATA[문예 1. 와사비망고 42인치 모니터가 배송되지 않아 슬픈 배송 문의]]></title>
					<link>https://blog.naver.com/alice_k106/221338029866</link>
					<guid>https://blog.naver.com/alice_k106/221338029866</guid>
					<description><![CDATA["민수야, 티브이는 아직이가?" 어머니는 오늘도 나를 보채신다. 채 열 평도 되지 않는 작은 단칸방에서 앉아있는 나는, 어머니의 목소리가 조금씩 힘이 없어져 가는 것을 어렴풋이나마 눈치챌 수 있었다. "조금만 더 기다리시면 올지도 모릅니더, 조금만 더 기다려 보소." 아버지는 TV에 자주 출연하던 유명한 기자셨지만, TV에서 아버지의 얼굴을 못 본 지는 꽤 오래 되었다. 이제는 녹화된 뉴스 동영상 파일 에서만 볼 수 있는 아버지를, 어머니는 수없이 돌려 보시곤 했다. 20인치 안팎의 크기의 모니터에서 하루에 한 두번씩 아버지가 나오는 뉴스를 반복해서 보시던 어머니는 어딘가 쓸쓸해보이기도 했지만, 이내 반가운 표정을 지으시기도.......]]></description>
					<pubDate>Mon, 13 Aug 2018 15:42:40 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[1. 여러가지 이야기]]></category>
					<title><![CDATA[1. 나의 능력과 취업에 대한 걱정]]></title>
					<link>https://blog.naver.com/alice_k106/221337685273</link>
					<guid>https://blog.naver.com/alice_k106/221337685273</guid>
					<description><![CDATA[-- 1. 나는 항상 최선을 다하려고 노력하지만, 이것이 항상 최고의 결과물을 보장하지는 않는다. 만약 학생에게 있어 결과물이 "얼마나 좋은 회사에 취업이 되느냐" 를 의미한다면 현재 상황은 언제나 막연한 불안감으로 가득찰 수밖에 없다. 내가 아무리 지금 열심히 공부하고 최선을 다해 노력한다 한들, 그것이 좋은 근무 환경을 가진 회사로 이어지는 길이라는 보장이 없기 때문이다. 학생에게 있어 취업이란 불확정성을 의미하기도 하지만, 반대로 면접 현장과 자기소개서, 코딩 면접에서는 자신감을 가지고 확신하는 자세가 아니면 합격하기 힘들다는 아이러니함이 동시에 존재한다. 이 블로그를 시작한 날짜 (처음 포스트를 작성한 날짜) .......]]></description>
					<pubDate>Mon, 13 Aug 2018 01:56:14 +0900</pubDate>
					<tag><![CDATA[회고]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Programming]]></category>
					<title><![CDATA[144. [Python] 파이참(pycharm) 에서 원격 인터프리터로 파이썬 빌드(실행) 하기]]></title>
					<link>https://blog.naver.com/alice_k106/221337670333</link>
					<guid>https://blog.naver.com/alice_k106/221337670333</guid>
					<description><![CDATA[이번 포스트에서는 파이참에서 원격 인터프리터를 이용해 로컬이 아닌 서버에서 파이썬 소스코드를 실행하는 방법에 대해서 다룬다 1. 파이참으로 원격 인터프리터를 사용하는 이유. 파이썬으로 코딩을 하다보면 가장 짜증나는 것이 버전 관리 및 의존성 패키지 관리인데, 윈도우에서는 그 불편함이 더욱 강조된다. 그래서 웬만하면 리눅스 서버에서 컨테이너 등과 같은 가상 환경에서 파이썬 버전을 맞추고 패키지 관리도 해왔는데, 이러다 보니 2차적인 문제로서 '리눅스에서 코딩하기 어렵다' 라는 단점이 생겨났다. vim 편집기나 emacs 등을 사용한다고 한들 IntelliJ의 파이참을 따라갈 수가 없는 것이 현실이다. 그래서 예전부터 생각해 오.......]]></description>
					<pubDate>Mon, 13 Aug 2018 01:04:38 +0900</pubDate>
					<tag><![CDATA[파이썬,Python,파이참,Pycharm]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[Cloud, 분산시스템]]></category>
					<title><![CDATA[143. [Ansible] Ansible (앤서블) 개념, 사용 환경 구성, 기초 사용법 정리]]></title>
					<link>https://blog.naver.com/alice_k106/221333208746</link>
					<guid>https://blog.naver.com/alice_k106/221333208746</guid>
					<description><![CDATA[이번 포스트에서는 Ansible(이하 앤서블)의 환경 구성, 기초 사용법에 대해서 다룬다. 1. 들어가기 전. 앤서블은 여러 개의 서버를 효율적으로 관리하기 위해 고안된 환경 구성 자동화 도구이다. 앤서블은 2012년에 출시되었으며, 2013년에 버전 1이 출시된 이후, 레드햇에 인수되어 개발되고 있다. 앤서블은 셰프(chef), 퍼펫(Puppet) 등과 같은 구성 관리 도구의 일종이라고 볼 수 있으나, 사용성 또는 확장성 측면에서 셰프 또는 퍼펫에 비해 더욱 많은 사람들에게 사랑받고 있는걸로 보인다. (적어도 내 주변에 앤서블을 사용한다는 사람은 봤어도, 셰프나 퍼펫을 쓰는 사람은 본 적이 없다) 실제로, 최근에 개발되고 있는 환경 자동화 툴 (e.......]]></description>
					<pubDate>Sun, 05 Aug 2018 23:27:05 +0900</pubDate>
					<tag><![CDATA[앤서블,ansible]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>alice_k106</author>
					<category><![CDATA[7. 각종 리뷰]]></category>
					<title><![CDATA[[Review] 하시코프 밋업 (Hashicorp Meetup) 1회]]></title>
					<link>https://blog.naver.com/alice_k106/221328792531</link>
					<guid>https://blog.naver.com/alice_k106/221328792531</guid>
					<description><![CDATA[이번 포스트에서는 하시코프 밋업 1회에 대한 내용 및 리뷰를 매우 주관적으로 포스팅한다. 한 달 전 쯤, OpenContainer 슬랙에서 하시코프 밋업 광고를 보았다. 하시코프 하면 Consul, Vagrant로 유명한 회사이기 때문에 내심 가고싶은 욕심이 생겨 신청하게 되었고, 어제(2018년 7월 28일 토요일) 공개SW 개발자센터에서 밋업에 참석하였다. 정확한 장소는 선릉역 근처의 "공개SW개발자Lab" 이고, 오후 1시부터 진행되었다. 사실 하시코프라는 상표가 개발자들에게 그다지 익숙하지 않기 때문에 차마 주위 사람들에게 같이 가자고는 말하지 못하고 혼자서 들으러 갔다. 내 나이 또래(23~24살)은 대부분 하시코프를 들어본 적도 없을 것이고, Co.......]]></description>
					<pubDate>Sun, 29 Jul 2018 15:32:40 +0900</pubDate>
					<tag><![CDATA[밋업,Meetup,Hashicorp,하시코프,vagrant,vault,consul]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
		
		
	
</channel>
</rss>
