<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0" xmlns:cc="http://cyber.law.harvard.edu/rss/creativeCommonsRssModule.html">
    <channel>
        <title><![CDATA[Stories by Sona Lee on Medium]]></title>
        <description><![CDATA[Stories by Sona Lee on Medium]]></description>
        <link>https://medium.com/@soeunlee?source=rss-2a9af50b4ecc------2</link>
        <image>
            <url>https://cdn-images-1.medium.com/fit/c/150/150/1*ldoOs2GQbgvVA4XonkFV-Q@2x.jpeg</url>
            <title>Stories by Sona Lee on Medium</title>
            <link>https://medium.com/@soeunlee?source=rss-2a9af50b4ecc------2</link>
        </image>
        <generator>Medium</generator>
        <lastBuildDate>Tue, 14 May 2019 07:03:21 GMT</lastBuildDate>
        <atom:link href="https://medium.com/feed/@soeunlee" rel="self" type="application/rss+xml"/>
        <webMaster><![CDATA[yourfriends@medium.com]]></webMaster>
        <atom:link href="http://medium.superfeedr.com" rel="hub"/>
        <item>
            <title><![CDATA[My experience at CSSConf & JSConf EU 2018]]></title>
            <link>https://medium.com/@soeunlee/my-experience-at-cssconf-jsconf-eu-2018-c213b86561ad?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/c213b86561ad</guid>
            <category><![CDATA[jsconf]]></category>
            <category><![CDATA[css]]></category>
            <category><![CDATA[cssconf]]></category>
            <category><![CDATA[jsconf-eu]]></category>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Thu, 14 Jun 2018 13:58:37 GMT</pubDate>
            <atom:updated>2018-06-15T01:47:54.545Z</atom:updated>
            <content:encoded><![CDATA[<p>*You can check <a href="https://blog.naver.com/sonasoeun/221298762851">this link</a> for the Korean version</p><p>*한국어 버전은 <a href="https://blog.naver.com/sonasoeun/221298762851">다음링크</a>에서 확인해 주세요 :)</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*rN7CUyIFZpA2nfNc" /><figcaption>JSConfEU</figcaption></figure><p>From June 1st to June 3rd , I attended CSSConf &amp; JSConf EU. I was looking forward to this conference and I wanted to write about my feelings at that time.</p><h3>Preparations</h3><p>I decided to participate in a few networking events related to the conference and started preparing. First, I made personal business cards although I usually don’t use them. Second, I contacted some people that I wanted to meet and talk to and prepared small gifts for them. Third, I made a list of questions to ask during the conference.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*BakmDM10oiIrS2MO8z-kxA.png" /><figcaption>Doodle by <a href="https://twitter.com/soshinyoung"><strong>makeshinyoung</strong></a></figcaption></figure><h3>Opening</h3><p>One of the main reasons why I wanted to attend CSSConf &amp; JSConf EU was to see <a href="https://mobile.twitter.com/livejs_network">{ Live:js }</a> and <a href="https://mobile.twitter.com/nested_loops">nested_loops</a>’s performance. They usually do projects related to making music using midi controllers and visualizations using javascript. Since I’m also interested in audio visualization, I wanted to experience the show and see it at the conference. As soon as I started watching the opening, i was so surprised that I even said “WOW”. Their performance was so awesome and inspiring to me.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FdPWRaN2PXZw%3Ffeature%3Doembed&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DdPWRaN2PXZw&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FdPWRaN2PXZw%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/8441df9d40a5c2383be680a9b0a7cf73/href">https://medium.com/media/8441df9d40a5c2383be680a9b0a7cf73/href</a></iframe><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FGF_VDnCcK6Q%3Ffeature%3Doembed&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DGF_VDnCcK6Q&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FGF_VDnCcK6Q%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/361d40331b0425a423147092d94b24d9/href">https://medium.com/media/361d40331b0425a423147092d94b24d9/href</a></iframe><h3>People</h3><p>Another reason why I was looking forward to this conference was so I could meet <a href="https://twitter.com/aganaplocha">Aga</a>. I hung out with her in Seoul before the conference and now she was an emcee of JSConfEU 2018. It was so nice to meet her in an overseas conference. She also introduced us to some nice friends. During meals, listening sessions, or at parties, I met friends who had various experiences and talked about many topics such as work, culture, personal projects and technology. During our conversations, I got lot of positive energy from them. Also I had many chances to meet and talk to other developers. It was a great experience to ask questions and share my thoughts. Although I can’t speak english fluently, they listened carefully. I was so thankful. Thank you so much.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*oM_qrja0J6-UysQ-" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*uKM94nEJ-CCot3bF" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*d5ePMAx9ukuAPtfM" /></figure><h3>Contents</h3><p>There were many interesting presentations. In CSSConf, Razvan Caliman’s “We have DevTools. What about DesignTools?” was my favorite. I didn’t know there were so many good design tools in the browser. I especially liked the Shape Path Editor in Firefox.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2Fw8pksaGhjfA%3Ffeature%3Doembed&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3Dw8pksaGhjfA&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2Fw8pksaGhjfA%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/b862b0bf2c99aa0993287e75dc2a386a/href">https://medium.com/media/b862b0bf2c99aa0993287e75dc2a386a/href</a></iframe><p>In JSConf, The topics (“Native BigInts in JavaScript: A Case Study in TC39” and “ TC39 Panel Talk” ) related to ECMAScript Specification were interesting because I had read and studied the spec with my colleagues. Before the presentation, I asked about private method using twitter and one of the members of TC39 answered it!</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FHj5q8uyqGYc%3Fstart%3D389%26feature%3Doembed%26start%3D389&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DHj5q8uyqGYc&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FHj5q8uyqGYc%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/2d87f4be90435679375604e814dbb394/href">https://medium.com/media/2d87f4be90435679375604e814dbb394/href</a></iframe><p>Also <a href="https://twitter.com/devdevcharlie">Charlie Gerard</a>’s “<a href="https://www.youtube.com/watch?v=7KhFO-qCVyg&amp;t=253s">Look mum, no hands! — Brain controlled JavaScript</a>” was also great. Using <a href="https://www.emotiv.com/">Emotiv epoc</a>, she did a cool experimental project and watching the demo was so interesting. From Ryan Dahl’s “<a href="https://www.youtube.com/watch?v=M3BM9TB-8yA">10 Things I Regret About Node.js</a> and <a href="https://twitter.com/linclark">Lin Clark</a>’s Webassembly to javascript experimental projects, the presentations were not focused on one field. There were so many various contents that reflected the diversity of the javascript ecosystem. I was very inspired from the contents.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*2IVs-BO9yzZHlihA" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*Cd6kbJXKy4OpUMGy" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*zLgR_TETA0EJN5hV" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*OsuUg1B7CnPXs8bb" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*5Arf-jCS2OzL1fPV" /></figure><h3>Venue and Food</h3><p>This conference was held in <a href="https://goo.gl/maps/5VuCHf6aKZP2">Arena Berlin</a>, I think this place was best place to have performances and exhibitions, and it was a welcoming area for many people and it had a positive atmosphere.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*h9zM-eyXUEx4TwfB" /></figure><p>Also, during the conference, they gave breakfast, lunch, dinner, coffee, and frozen yogurt. I was so satisfied.👍</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*omDWjWHtF-3Yf0Gz" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*2Zuiw2gUQ1nz7sh3" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*NFD5OObKbsdZz5Yl" /></figure><h3>Berlin</h3><p>Although I stayed in berlin only for a week, I felt that Berlin was an artistic city. graffiti on the wall, hipster cafe, dj on the bridge. Everything seemed like art.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*N4_2k_j67Yr7Lww2" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/0*sp0guOSKSuhByzdT" /></figure><h3>And Seoul</h3><p>This conference was more of a festival rather than a tech conference. Watching nice presentations and meeting nice people, I got a bunch of ideas and energy.</p><p>I have a lot of things I want to do in seoul now having attended CSSConf and JSConf in Berlin.</p><p>Thank you CSSConf &amp; JSConf.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=c213b86561ad" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Why I held a Art & Tech exhibition ]]></title>
            <link>https://medium.com/@soeunlee/why-i-held-a-art-tech-exhibition-5ecc663fe7a4?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/5ecc663fe7a4</guid>
            <category><![CDATA[p5js]]></category>
            <category><![CDATA[creative-coding]]></category>
            <category><![CDATA[art-and-technology]]></category>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Tue, 17 Apr 2018 14:37:19 GMT</pubDate>
            <atom:updated>2018-04-17T14:49:05.932Z</atom:updated>
            <content:encoded><![CDATA[<p>*From now on, I will use this blog to practice writing in english.</p><p>Our lives are surrounded by art. In fact, art encompasses many fields. Art is music, literature, architecture, and much more. We listen to music while exercising, read literature and go to art museums with friends. If we look inside of these activities, we are using technology. From these activities, we can heal ourselves and get inspired.</p><h3>Art &amp; Technology?</h3><p>The act combining art and technology started a long time ago. I discovered that by the 1960s, the Second Machine Age, technology provided not only the inspiration for art but also its tools. Desmond Paul Henry experimented with machine-generated visual effects by using a modified analogue bombsight computer that was employed in a World War Two bomber aircraft that was used to determine the exact moment bombs were to be released to hit their targets. In 1980s, as home computer usage increased, interactive computer graphics were developed as a result of this. In the 1990s, the rise of the world wide web inspired the creation of art through HTML and browsers. Now we can generate art using smartphones, iPads and notebooks.</p><h3>Try</h3><p>Whenever I experience art, I want to do projects that combine art and technology. As I know how to code, I decided that I would make a fun project and conducted some experiments. The first try was to make a sound visualizer on the web. I love music and got inspired by that. Using web audio api, canvas, I made the following project.</p><p><a href="https://music.sonalee.me/">sound-visualizer</a></p><p>After that, I met other people that were interested in art and technology like myself. Together with them, I studied “<em>The Nature of Code”</em>, a book that contains information on how we can write code from the unpredictable evolutionary and emergent properties of nature in software. Its focus moves from elementary concepts in mathematics and physics to more advanced algorithms. The writer of this book, Daniel Shiffman, manages a Youtube channel called “<a href="https://www.youtube.com/user/shiffman">The Coding Train</a>”, whose videos are such fun and very helpful. By using only the early chapters of the book, which cover topics such as random, vector, force and particle, I can create various simple projects.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2F3o6ZtjzD9JrHNgGl3y%2Ftwitter%2Fiframe&amp;url=https%3A%2F%2Fgiphy.com%2Fgifs%2Fcoding-rainbows-animishmish-3o6ZtjzD9JrHNgGl3y&amp;image=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2F3o6ZtjzD9JrHNgGl3y%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy" width="435" height="244" frameborder="0" scrolling="no"><a href="https://medium.com/media/6322d64e08257fa65f8f101bb3ae2934/href">https://medium.com/media/6322d64e08257fa65f8f101bb3ae2934/href</a></iframe><p>The following project was made using p5.js while studying <em>The Nature of Code</em>.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*klD9xXJ6Ugoad2NVWY3kMA.gif" /><figcaption>using random, particle 🎨</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*g649kfbBT8UUIDom7oKyFA.gif" /></figure><p>In the case of this project, I used a projector. The project was displayed on a wall and I enjoyed it while drinking a beer 🍺</p><h3>Exhibition</h3><p>As part of an on-going project with friends, we wanted to hold an exhibition. In February 2018, we organized a small event at the Seoul Art Space.</p><iframe src="https://cdn.embedly.com/widgets/media.html?type=text%2Fhtml&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;schema=facebook&amp;url=https%3A//www.facebook.com/405691116533670/photos/a.412934695809312.1073741828.405691116533670/413009415801840/%3Ftype%3D3%26theater&amp;image=https%3A//i.embed.ly/1/image%3Furl%3Dhttps%253A%252F%252Fscontent.xx.fbcdn.net%252Fv%252Ft1.0-0%252Fp130x130%252F27657935_413009415801840_7764356098782438165_n.jpg%253F_nc_cat%253D0%2526oh%253D18ee22e58f37a34c421e85eb44b67311%2526oe%253D5B646C30%26key%3Da19fcc184b9711e1b4764040d3dc5c07" width="600" height="600" frameborder="0" scrolling="no"><a href="https://medium.com/media/1c3820ade09e446df6fb037f26062603/href">https://medium.com/media/1c3820ade09e446df6fb037f26062603/href</a></iframe><p>Using p5.js, three.js, Max, leap motion, touch pads and other technologies, we made art. Through our art, I hope that people who visit this exhibition will enjoy our artistic endeavours.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FeWSxNJKlnrA%3Ffeature%3Doembed&amp;url=http%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DeWSxNJKlnrA&amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FeWSxNJKlnrA%2Fhqdefault.jpg&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=youtube" width="854" height="480" frameborder="0" scrolling="no"><a href="https://medium.com/media/fec25ab6456869fae0bdfbedef2faf27/href">https://medium.com/media/fec25ab6456869fae0bdfbedef2faf27/href</a></iframe><h3>And..</h3><p>I want to make art that people can enjoy. Although I never formally learned about art, everything around me inspires me to create art. By combining art and technology, we can create awesome things. This is only the first step.</p><h4>Reference</h4><pre>Kadenze: <a href="https://www.kadenze.com/">https://www.kadenze.com/</a><br>The coding train: <a href="https://www.youtube.com/user/shiffman">https://www.youtube.com/user/shiffman</a><br>History of Computer Art: <a href="http://iasl.uni-muenchen.de/links/GCA-VI.3e.html">http://iasl.uni-muenchen.de/links/GCA-VI.3e.html</a></pre><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=5ecc663fe7a4" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[찾아보니 일급 객체요건이 꼭 3개만 있는 것이 아니라 다음과 같은 의미들이 있을 수 있더라구요 :)]]></title>
            <link>https://medium.com/@soeunlee/%EC%B0%BE%EC%95%84%EB%B3%B4%EB%8B%88-%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4%EC%9A%94%EA%B1%B4%EC%9D%B4-%EA%BC%AD-3%EA%B0%9C%EB%A7%8C-%EC%9E%88%EB%8A%94-%EA%B2%83%EC%9D%B4-%EC%95%84%EB%8B%88%EB%9D%BC-%EB%8B%A4%EC%9D%8C%EA%B3%BC-%EA%B0%99%EC%9D%80-%EC%9D%98%EB%AF%B8%EB%93%A4%EC%9D%B4-%EC%9E%88%EC%9D%84-%EC%88%98-%EC%9E%88%EB%8D%94%EB%9D%BC%EA%B5%AC%EC%9A%94-%EC%96%B8%EC%96%B4%EC%97%90-%EB%94%B0%EB%9D%BC-%EB%8B%A4%EB%A5%B4%EC%A7%80%EB%A7%8C-ad2ab6937eb3?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/ad2ab6937eb3</guid>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Sat, 03 Mar 2018 03:27:12 GMT</pubDate>
            <atom:updated>2018-03-03T03:35:54.305Z</atom:updated>
            <content:encoded><![CDATA[<p>찾아보니 일급 객체요건이 꼭 3개만 있는 것이 아니라 다음과 같은 의미들이 있을 수 있더라구요 :)</p><p>언어에 따라 다르지만 ..</p><ul><li>being expressible as an anonymous literal value</li><li>being storable in variables</li><li>being storable in data structures</li><li>having an intrinsic identity (independent of any given name)</li><li>being comparable for equality with other entities</li><li>being passable as a parameter to a procedure/function</li><li>being returnable as the result of a procedure/function</li><li>being constructible at runtime</li><li>being printable</li><li>being readable</li><li>being transmissible among distributed processes</li><li>being storable outside running processes</li></ul><p>그리고 Structure and Interpretation of Computer Programs이라는 책에도 언급이 되었더라구요:) 링크(<a href="https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-12.html#call_footnote_Temp_121">https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-12.html#call_footnote_Temp_121</a>)</p><p>In general, programming languages impose restrictions on the ways in which computational elements can be manipulated. Elements with the fewest restrictions are said to have <em>first-class</em> status. Some of the ``rights and privileges’’ of first-class elements are:<a href="https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-12.html#footnote_Temp_121">64</a></p><ul><li>They may be named by variables.</li><li>They may be passed as arguments to procedures.</li><li>They may be returned as the results of procedures.</li><li>They may be included in data structures.<a href="https://mitpress.mit.edu/sicp/full-text/book/book-Z-H-12.html#footnote_Temp_122">65</a></li></ul><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=ad2ab6937eb3" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Living in Seoul as a developer]]></title>
            <link>https://medium.com/@soeunlee/living-in-seoul-as-a-developer-6c5fe3b0911b?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/6c5fe3b0911b</guid>
            <category><![CDATA[developer]]></category>
            <category><![CDATA[software-developer]]></category>
            <category><![CDATA[seoul]]></category>
            <category><![CDATA[south-korea]]></category>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Sun, 31 Dec 2017 13:23:17 GMT</pubDate>
            <atom:updated>2018-01-03T06:01:11.721Z</atom:updated>
            <content:encoded><![CDATA[<p>*이제 부터 medium 블로그는 영작 연습도 할 겸, 영문으로 쓸 예정입니다. 한국어 버전은 <a href="https://blog.naver.com/sonasoeun/221174818777">다음링크</a>에서 확인해 주세요 :)</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*YxMSnQHnKw_2GoLn14q0RQ.jpeg" /><figcaption>CCL: <a href="https://www.flickr.com/photos/56218409@N03/">Matthias Ripp</a></figcaption></figure><p>I have lived in Seoul for 4 years. Seoul is a demanding city because of the high cost of living and rent, changing trends, crowded subways, and microdust, but even so, the city gave me so many opportunities. When I started working as a software developer at Seoul, it was hard to survive. Since I was independent of my parents, I had to be self-sufficient. It was so hard for me at the beginning but now its second nature. As 2017 comes to a close, I want to take a review of my life. So, I’m writing my story about living in Seoul as a developer.</p><h3>Living in Seoul</h3><p>Humans need three things to live, clothes, food, and housing. When I first arrived at Seoul, it was really hard to find housing. Although rent is cheaper than San Francisco or New York, rent is expensive for junior developers since salaries have stayed constant for over 10 years. Since I was unable to get my own place at that time, I had to live in a 고시텔 (gositel) for 6 months. A gositel is a temporary living space, usually just enough space to lie down. There were no windows, and it was depressing living there. As a result, I really wanted to leave. <br>In Korea, to rent an apartment of any size, you must put down a sizable deposit, usually about a year’s rent. If you don’t already have enough savings, it is very difficult to find a place to live.<br>It was really hard to get enough money for a deposit, so I looked for a loan. I was mostly denied because I didn’t have any credit ratings and my pay was low. I was so depressed. But thanks to a sympathetic co-worker, I was able to find a loan and get a nice, quiet place near a subway station. I was able to figure out my goals at my new place. These days, I’m preparing to move to another place, even now, it is hard to find housing. <br>The links below are sites that I wish I knew about when I first moved to Seoul.</p><pre>셰어 하우스: <a href="https://www.woozoo.kr/houses">https://www.woozoo.kr/houses</a><br>2030 청년 주택 사업: <a href="https://www.facebook.com/2030.house">https://www.facebook.com/2030.house</a><br>희망 두 배 청년 통장: <a href="http://www.welfare.seoul.kr/youth/index.action">http://www.welfare.seoul.kr/youth/index.action</a><br>중소기업 청년 소득세 감면 제도</pre><h3>Self Development</h3><p>Seoul has so many conferences and interesting meetups. My college was in a smaller city at the time, so I made many trips to Seoul to try to learn from professional developers that I looked up to. Whenever I talked to other developers, I figured what I was missing and tried to learn from them as much as I can. The slides below (How To Be A Better Developer) really inspired me.</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.slideshare.net%2Fslideshow%2Fembed_code%2Fkey%2FLN7flFekfqptof&amp;url=https%3A%2F%2Fwww.slideshare.net%2Frockdoli%2Fss-63333165&amp;image=https%3A%2F%2Fcdn.slidesharecdn.com%2Fss_thumbnails%2Fksug-20160619-160622115512-thumbnail-4.jpg%3Fcb%3D1466596755&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=slideshare" width="600" height="500" frameborder="0" scrolling="no"><a href="https://medium.com/media/5af1d503cef94328428755a475b644fd/href">https://medium.com/media/5af1d503cef94328428755a475b644fd/href</a></iframe><pre>1. Contribute to open source<br>2. Blog more<br>3. Finish a side project</pre><p>During my first and second jobs, I was attending school and working at the same time. Even though I was tired, I tried to do as many things as possible, such as contributing to open source, working on personal projects, and blog. I even graduated college. By doing so many things, it made it easier when I talked to other developers or went through interviews. They were able to see my code online due to open source, and even learn a bit more about me through my blog. To help me achieve my goals, I try to make myself accountable by telling my friends what my plans are.</p><h3>Community</h3><p>I didn’t have many friends in Seoul so I looked for a good developer community to find other developers who work in different fields. Finally, I found Django Girls Seoul. This community was full of opportunities. No one there cared about my age, college or where I worked. They just wanted to talk about interesting technologies. With my Django Girls Seoul friends, I was able to discuss different ideas, work on side projects and was able to work at a great company due to a coach at Django Girls. Also, I was able to attend PyCon US 2017 in Portland. Working with Django Girls really helped my growth as a developer. Thank you, Django Girls!</p><h3>And..</h3><p>Previously, I was telling another developer my goals when he said, since you didn’t come from a good school and you’re not a good developer, you should just marry someone. This was enraging to me but I ignored him. I believed in my goals and if I keep working towards my goals, I’ll achieve something big.</p><p>I watched a variety show called <a href="https://en.wikipedia.org/wiki/Infinite_Challenge">‘무한도전(Infinite Challenge)’</a> which had the writer of ‘<a href="https://en.wikipedia.org/wiki/Signal_(TV_series)">시그널(Signal)</a>’, a famous TV Drama, and her husband, a famous producer was on as guests. Her husband said, when my wife was a starting out as a writer, her goal was to get 0.001% better than yesterday, and as time went on, she got better and better and was able to write an internationally famous TV show.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*F-bDqL0B_OBu2aEs1mBZAQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/958/1*-QlOAu2oykEGRJgBqvbwDQ.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/994/1*W0l41M516Z7xONi_blXnWg.png" /></figure><p>It is not easy to live in Seoul. As time passes, I want to study more and improve my skills. I am always thinking about how to be a better, more productive developer and how to make software development more fun.</p><p>As 2018 approaches, I want to grow. Tomorrow, I will grow 0.001%.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=6c5fe3b0911b" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[감사합니다 :)]]></title>
            <link>https://medium.com/@soeunlee/%EA%B0%90%EC%82%AC%ED%95%A9%EB%8B%88%EB%8B%A4-aea05f48f088?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/aea05f48f088</guid>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Thu, 26 Oct 2017 00:35:19 GMT</pubDate>
            <atom:updated>2017-10-26T00:35:19.038Z</atom:updated>
            <content:encoded><![CDATA[<p>감사합니다 :)</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=aea05f48f088" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Chuseok and Udacity]]></title>
            <link>https://medium.com/@soeunlee/chuseok-and-udacity-a5a4702f15ee?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/a5a4702f15ee</guid>
            <category><![CDATA[thanksgiving-day]]></category>
            <category><![CDATA[udacity]]></category>
            <category><![CDATA[chuseok]]></category>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Tue, 10 Oct 2017 09:15:39 GMT</pubDate>
            <atom:updated>2017-10-10T09:17:43.375Z</atom:updated>
            <content:encoded><![CDATA[<p>*이제 부터 medium 블로그는 영작 연습도 할 겸, 영문으로 쓸 예정입니다. 한국어 버전은 <a href="http://blog.naver.com/sonasoeun/221113078297">다음링크</a>에서 확인해 주세요 :)</p><p>*From now on, I will use this blog to practice writing in english. You can check <a href="http://blog.naver.com/sonasoeun/221113078297">this link</a> for the Korean version</p><p>Korea’s biggest holiday (Chuseok — Thanksgiving Day) is ending. This time is for making Songpyeon (a type of rice cake) using new crop rice, eating freshly picked fruits, making wishes and spending happy times with family</p><iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FSCbXNJ7ljNUk0%2Ftwitter%2Fiframe&amp;url=https%3A%2F%2Fgiphy.com%2Fgifs%2Fdog-snoopy-charlie-brown-thanksgiving-SCbXNJ7ljNUk0&amp;image=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FSCbXNJ7ljNUk0%2Fgiphy.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy" width="435" height="322" frameborder="0" scrolling="no"><a href="https://medium.com/media/22d4c8cf8b88645d6ce484cd7a5d3034/href">https://medium.com/media/22d4c8cf8b88645d6ce484cd7a5d3034/href</a></iframe><p>Since this break included other holidays like Hangul Day, I had 10 days off. Because I didn’t have any special travel plans, I wanted to spend this time being productive. I thought about work and projects I put off that I could work on during the holiday. I came up with three things I wanted to work on above all.</p><p>Firstly, submit the initial project for Udacity React Nanodegree.</p><p>Secondly, write on my blog</p><p>Thirdly, work on side projects that I have to finish by December.</p><p>The highest priority work is submitting the first project for the Udacity React Nanodegree. Since they are using React at my new company, I want to quickly learn. I registered for the Udacity React Nanodegree course because they held a promotion for DiscoveryWeek</p><style>body[data-twttr-rendered="true"] {background-color: transparent;}.twitter-tweet {margin: auto !important;}</style><blockquote class="twitter-tweet" data-conversation="none" data-align="center" data-dnt="true"><p>Join students like <a href="http://twitter.com/mojosoeun" target="_blank" title="Twitter profile for @mojosoeun">@mojosoeun</a> &amp;amp; <a href="http://twitter.com/concentratdHamm" target="_blank" title="Twitter profile for @concentratdHamm">@concentratdHamm</a> to save big in the last hours of #DiscoveryWeek! <a rel="nofollow" href="https://t.co/21neSx1Vsf">https://t.co/21neSx1Vsf</a></p><p>&#x200a;&mdash;&#x200a;<a href="https://twitter.com/udacity/status/890612823969021953">@udacity</a></p></blockquote><script src="//platform.twitter.com/widgets.js" charset="utf-8"></script><script>function notifyResize(height) {height = height ? height : document.documentElement.offsetHeight; var resized = false; if (window.donkey && donkey.resize) {donkey.resize(height); resized = true;}if (parent && parent._resizeIframe) {var obj = {iframe: window.frameElement, height: height}; parent._resizeIframe(obj); resized = true;}if (window.location && window.location.hash === "#amp=1" && window.parent && window.parent.postMessage) {window.parent.postMessage({sentinel: "amp", type: "embed-size", height: height}, "*");}if (window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.resize) {window.webkit.messageHandlers.resize.postMessage(height); resized = true;}return resized;}twttr.events.bind('rendered', function (event) {notifyResize();}); twttr.events.bind('resize', function (event) {notifyResize();});</script><script>if (parent && parent._resizeIframe) {var maxWidth = parseInt(window.frameElement.getAttribute("width")); if ( 500  < maxWidth) {window.frameElement.setAttribute("width", "500");}}</script><p>The course consists of React, Redux and React Native. I also have to submit a React related project. I delayed working on this project because I was busy but that was just an excuse. So during the holiday, I decided to spend time working on Udacity. I have to make a bookshelf app that can move books between shelves and add books after searching for books</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/640/1*UtURgw4lQMtM-aV1fLninw.gif" /></figure><p>The first time I worked on this project, I didn’t architect my code, so the structure became stranger and stranger. So I deleted all of my code and restarted the project. I wondered if even this structure was correct, so I discussed this structure with friends.</p><p>While eating Songpyeon and fruits, watching the full moon and sometimes doing side projects, I submitted this project</p><p>l was really looking forward to getting my project code reviewed.</p><h4>First review</h4><p>The first review let me know that I had good parts and bad parts. There were 12 specifications and I had bugs on two of them.</p><pre>Requires Changes<br>2 SPECIFICATIONS REQUIRE CHANGES</pre><pre>Well done on your first try!<br>You did a really good job with your components, they look extremely well written and your code architecture is well structured.<br>Anyone can see how much of React you are grasping.</pre><pre>There are a few bugs in your code, but from what you have shown so far you’ll fix them in no time (I hope my comments are helpful.).<br>Keep up the good work!</pre><p>The detail reviews are shown below.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/936/1*Ic5hF3qTg_sY6ioFPHymSA.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*QQ43ndPdzIcMlJLfseULNg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*Dpgnwve63hXyeZMr6d5u4w.png" /></figure><p>Also there were suggestions on how to improve my code. I didn’t pass the first project because I didn’t fulfill the specifications.</p><p>After the review, I fixed the code, refactored and submitted again as soon as possible.</p><h4>Second review</h4><p>The second review is shown below.</p><pre>Meets Specifications</pre><pre>Congratulations, your project looks great and you have met all the specifications!<br>There are no longer issues with your search functionality and you have handled the components’ states perfectly. You have been making a great use prop-types, as well, it will come handy when dealing with redux.</pre><pre>Good luck on your next projects!</pre><p>Also, they let me know about parts I did well and suggestions on how to improve my code.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/936/1*V-CbE7Sgkzhz2nQohvqFRg.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/936/1*AL58asCO06tXzKOOoajlfA.png" /></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/936/1*nobrzXeHj6W0YDLaExU0nA.png" /></figure><p>Finally. I completed and passed the project. Now I’m preparing for the second project which includes Redux.</p><p>Because of Udacity, I avoided being lazy and spent this holiday coding and learning. I’m proud of myself since I started an online course, had my code reviewed, and successfully passed my first project. I hope I get my Nanodegree soon!</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a5a4702f15ee" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[앗 댓글을 이제야 봤네용!]]></title>
            <link>https://medium.com/@soeunlee/%EC%95%97-%EB%8C%93%EA%B8%80%EC%9D%84-%EC%9D%B4%EC%A0%9C%EC%95%BC-%EB%B4%A4%EB%84%A4%EC%9A%A9-a1909803b70e?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/a1909803b70e</guid>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Fri, 14 Jul 2017 01:02:32 GMT</pubDate>
            <atom:updated>2017-07-14T01:02:32.797Z</atom:updated>
            <content:encoded><![CDATA[<p>앗 댓글을 이제야 봤네용! 음 제 생각엔 3번에서 제가 제시한 예제는 함수를 반환하는 것 외에도 런타임시 함수를 생성할 수 있는 조건을 충족하는 것 같습니다. 좀 더 찾아보니 first-class citizen의 조건을 만족하면서 더 나아가 함수를 런타임에 생성할 수 있는것은 first-class function의 조건을 만족한다고 해요 :)</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a1909803b70e" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Javascript에서 왜 함수가 1급 객체일까요?]]></title>
            <link>https://medium.com/@soeunlee/javascript%EC%97%90%EC%84%9C-%EC%99%9C-%ED%95%A8%EC%88%98%EA%B0%80-1%EA%B8%89-%EA%B0%9D%EC%B2%B4%EC%9D%BC%EA%B9%8C%EC%9A%94-cc6bd2a9ecac?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/cc6bd2a9ecac</guid>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Wed, 05 Jul 2017 13:00:46 GMT</pubDate>
            <atom:updated>2017-07-06T23:47:45.525Z</atom:updated>
            <content:encoded><![CDATA[<iframe src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fgiphy.com%2Fembed%2FCGEDrmlMv1lqU%2Ftwitter%2Fiframe&amp;url=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FCGEDrmlMv1lqU%2Fgiphy.gif&amp;image=https%3A%2F%2Fmedia.giphy.com%2Fmedia%2FCGEDrmlMv1lqU%2F200.gif&amp;key=a19fcc184b9711e1b4764040d3dc5c07&amp;type=text%2Fhtml&amp;schema=giphy" width="435" height="235" frameborder="0" scrolling="no"><a href="https://medium.com/media/656acf253b04559e194f68ea69728bb1/href">https://medium.com/media/656acf253b04559e194f68ea69728bb1/href</a></iframe><p>최근 Javascript에서 함수가 왜 1급 객체(first class citizen)인지 의논해 보는 자리가 있었는데 잘 알지 못하는 것 같아 공부한 내용을 정리합니다.</p><p>일단 말 그대로 first class citizen, second class citizen 이란 무엇일까요? first class citizen이란 자유롭게 거주하고 일 할 수 있고, 출입국의 자유를 가지며, 투표의 자유를 가지는 시민을 의미한다면, second class citizen이란 시민 또는 합법적 거주자이지만 시민권 및 사회 경제적 기회가 제한되어있는 시민을 의미합니다. 예를 들면, 19세기 초 참정권을 가진 남성이 first class citizen이라면, 참정권을 가지지 못했던 여성은 second class citizen이라고 할 수 있는 것이죠.</p><p>프로그래밍 세계에서도 비슷한 개념이 존재합니다.</p><p>프로그래밍 언어 디자인에서, 특정 언어의 first-class citizens(first-class type, 또는 first-class object, 또는 first-class value라고도 할수 있는데)이란 보통 다른 객체들에게 적용 가능한 연산을 모두 지원하는 객체를 말합니다. 이러한 연산에는 보통 매개변수로 전달되고, 함수에서 반환되고 수정되고 변수에 할당되는 작업이 포함되는데요.</p><p>1급 객체, 2급 객체에 대한 개념은 1960년대에 <a href="https://en.wikipedia.org/wiki/Christopher_Strachey">Christopher Strachey</a>에 의해 소개 되었고, 사실상 그 용어를 명시적으로 정의한 것은 아니지만 <a href="https://en.wikipedia.org/wiki/ALGOL">Algol</a> 라는 프로그래밍 언어의 <em>실수</em>(Real number)와 프로시저를 비교함으로써 1급 객체의 개념에 대해 처음으로 언급하였다고 합니다. 1990년대에는 미국의 컴퓨터 과학자 <a href="https://en.wikipedia.org/wiki/Raphael_Finkel">Raphael Finkel</a> 이 2급, 3급 객체에 대한 정의를 제안했는데, 널리 받아 들여지고 있지 않은 상황이라고 해요.</p><p>그러니까 즉! 프로그래밍 언어에서 type을 전달, 반환 및 할당 할 수 있는 경우 해당 type을 1급 객체로 간주됩니다. Javascript에서 함수를 반환할 수 있을 뿐만 아니라 함수를 받을 수 있는 함수를 만들수 있으니 함수형 프로그래밍으로 Javascript가 인기가 있어지는 이유이도 합니다. 그래서 하나 이상의 함수를 인수로 받거나 함수를 반환하는 고차 함수를 만들 수 있어요.</p><p>first-class citizen의 조건은 다음과 같아요.</p><ul><li>변수나 데이터 구조안에 담을 수 있다.</li><li>파라미터로 전달 할 수 있다.</li><li>리턴 값으로 사용할 수 있다.</li></ul><p>그럼 몇가지 예를 하나씩 살펴 볼까요?</p><h3>1.함수 할당</h3><p>Javascript에서는 여러 가지 방법으로 변수에 함수를 할당 할 수 있습니다.</p><h4>1) var 키워드 이용하기</h4><pre>var a = function() {<br>    //function body...<br>};</pre><p>일반적인 패턴은 변수에 함수를 저장하기 위해 var 키워드를 사용하여 함수를 정의하는 것입니다. 여기서 익명 함수를 사용하지만 원하는 경우 아래 예처럼 명명 함수를 사용할 수도 있습니다.</p><pre>var a = function b() {<br>    //function body...<br>};</pre><h4>2) method 이용하기</h4><p>Javascript에서 method를 할당하는 것은 매우 쉬운데요. 함수에 변수를 할당하는 것과 마찬가지로 함수를 객체의 키값으로 할당 할 수 있습니다.</p><pre>var movie = {<br>    name: &#39;옥자&#39;,<br>    director: &#39;봉준호&#39;,<br>    show: function() {<br>        console.log(this.name + &#39; &#39; + this.director);<br>    }<br>}</pre><p>다음과 같은 함수를 만들 때는</p><pre>var add = function(a,b) {<br>    return a + b;<br>}</pre><p>add 변수 안에 저장된 값은 함수이므로, 함수를 호출하지 않고 그 값을 아래처럼 전달할 수 있어요.</p><pre>var newAdd = add;<br>newAdd(2,3) //5</pre><h3>2.함수 전달하기</h3><p>함수는 Javascript의 1급 객체이기 때문에 전달할 수 있습니다. 아래의 예가 있다고 가정해 보죠. 각각의 이벤트가 발생할때 똑같은 기능을 수행하고 있는데요.</p><pre>$(&#39;form&#39;).on(&#39;submit&#39;,function() {<br>    //show specific text<br>});</pre><pre>$(&#39;a&#39;).on(&#39;click&#39;, function() {<br>    //show specific text<br>});</pre><p>반복적인 부분이 있고 개선하고 싶을때 반복을 줄이고 사용자가 해당 요소와 상호 작용할 때 하나의 함수가 실행되도록 전달할 수 있습니다. 아래의 예 처럼요!</p><pre>function showText(e) {<br>    //show specific text<br>}</pre><pre>$(&#39;form&#39;).on(&#39;submit&#39;,showText);</pre><pre>$(&#39;a&#39;).on(&#39;click&#39;,showText);</pre><h3>3. 함수 반환하기</h3><p>마지막으로 함수에서 함수를 반환하는 것입니다. 이 개념이 익숙해지면 무척 강력한 개념이 될 수 있는데요. 함수형 프로그래밍과 관련하여 중요한 개념입니다. Node.js의 require 문을 사용하여 스크립트를 불러올수 있는데, <a href="https://github.com/helmetjs/helmet">helmet</a>을 예로 들어보겠습니다.</p><pre>var helmet = require(&#39;helmet&#39;)</pre><p>Node.js에서 모듈을 작성할 때 여러가지를 반환 할 수 있지만 단순히 함수를 반환하는 것이 일반적입니다. 위의 예제에서 require 호출에서 반환 된 값은 함수입니다.</p><p>다음은 helmet의 index.js 에서 가져온 부분입니다.</p><pre>function helmet (options) {<br>  options = options || {}<br><br>  if (options.constructor.name === &#39;IncomingMessage&#39;) {<br>    throw new Error(&#39;It appears you have done something like `app.use(helmet)`, but it should be `app.use(helmet())`.&#39;)<br>  }<br><br>  var chain = connect()<br><br>  middlewares.forEach(function (middlewareName) {<br>    var middleware = helmet[middlewareName]<br>    var middlewareOptions = options[middlewareName]<br>    var isDefault = DEFAULT_MIDDLEWARE.indexOf(middlewareName) !== -1<br><br>    if (middlewareOptions === false) {<br>      return<br>    } else if (middlewareOptions === true) {<br>      middlewareOptions = {}<br>    }<br><br>    if (middlewareOptions != null) {<br>      chain.use(middleware(middlewareOptions))<br>    } else if (isDefault) {<br>      chain.use(middleware({}))<br>    }<br>  })<br><br>  return chain<br>}</pre><pre>module.exports = helmet</pre><p>이 예제는 module.exports를 사용하여 함수를 반환하는데, 그 자체가 함수 호출의 결과를 반환합니다. 이렇게 하면 아래와 같이 사용할 수 있어요 :)</p><pre>app.use(helmet())</pre><h4>Partial application</h4><p>함수를 반환하는 또 다른 일반적인 용도는 partial application입니다. partial application은 “함수를 반환하는 함수”를 만드는 데 사용됩니다. 첫 번째 함수를 호출하면 전달 된 첫 번째 매개변수가 저장되는데, 간단한 예제를 살펴볼까요?</p><pre>function add(a) {<br>    return function(b) {<br>        return a + b;<br>    }   <br>}</pre><p>이 함수는 a 매개 변수를 가지고 있다가 두 번째 매개 변수 b를 취하는 함수를 반환합니다. a는 반환 된 함수가 생성 된 클로저 때문에 두 번째 내부 함수에서 그 값을 기억하는데 어떻게 사용하는 지 살펴 볼게요:)</p><pre>var add5 = add(5);</pre><p>add5에 저장된 값은 함수입니다. 그 함수 안에는 a가 참조되며 생성 될 때 a가 사용 가능하기 때문에 기억을 하는데요. a는 5가 되겠죠!</p><pre>function(b) {<br>    return a + b;<br>}</pre><p>그리고 add5를 호출하면서 새로운 value에 5를 더해서 아래와 같은 결과가 나오게 됩니다.</p><pre>add5(5); // 10<br>add5(8); // 13</pre><h3>마지막으로 정리해 보자면..</h3><p>Javascript에서 함수는 아래 3 가지조건을 충족하니 1급 객체라고 할수 있는 것입니다!</p><ol><li>함수를 변수나 데이타에 할당 할 수 있다.</li><li>함수를 인자로 전달 할 수 있다.</li><li>함수를 리턴 할수 있다.</li></ol><p>일단 제가 이해한 방식으로 정리를 해 보았는데요! 잘못된 부분이 있거나, 개선해야 되는 점이 있으면 피드백 주세요! :)</p><p>reference: <a href="https://en.wikipedia.org/wiki/First-class_citizen">https://en.wikipedia.org/wiki/First-class_citizen</a></p><p><a href="http://ryanchristiani.com/functions-as-first-class-citizens-in-javascript/">http://ryanchristiani.com/functions-as-first-class-citizens-in-javascript/</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=cc6bd2a9ecac" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Pycon US 2017]]></title>
            <link>https://medium.com/@soeunlee/pycon-us-2017-1baad83219a6?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/1baad83219a6</guid>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Sat, 17 Jun 2017 17:17:03 GMT</pubDate>
            <atom:updated>2017-06-19T09:18:36.826Z</atom:updated>
            <content:encoded><![CDATA[<p>작년 11월, 포틀랜드에서 Pycon US가 열린다는 소식을 들었습니다. 2016년에 서울에서 열린 Pycon APAC을 참가한 경험이 너무 좋았고, 해외에서 열리는 파이콘은 어떤 모습인지 궁금하기도 해서 장고걸스서울 운영진인 다우니님과 미희님과 함께 얼리버드 티켓을 구매하고 준비를 하게 되었는데요. 정말 감사하게도 PSF(Python Software Foundation)에서 재정적인 지원을 해 주셔서 금전적인 부담을 덜 가지고 포틀랜드로 가는 비행기에 오를 수 있었습니다.</p><p>우린 미국을 가니까 ESTA만 발급 받으면 끝날 줄 알았는데 캐나다 벤쿠버를 경유하기 때문에 eTA 또한 발급받아야 한다는 소식을 듣고 허겁지겁 신청해 비행기 발권 마감시간 10분전에 발급받아 가까스로 비행기를 타는 일도 있었고, 경유지에서는 다우니님의 홍삼이 스틸당해 찾다가 비행기를 놓치는 등 포틀랜드에 가기까지 시행착오가 많았지만 설렘반 기대반으로 포틀랜드에 땅을 밟았을 때 저희를 환영해 주는 것은 장고걸스서울 Co-founder인 레이첼과 다영님, 너무나도 맑은 날씨였습니다. 그리고 부푼 마음으로 Pycon이 열리는 오레곤 컨벤션 센터로 향했습니다.</p><style>body[data-twttr-rendered="true"] {background-color: transparent;}.twitter-tweet {margin: auto !important;}</style><blockquote class="twitter-tweet" data-conversation="none" data-align="center" data-dnt="true"><p>Mission completed. #djangogirlsseoul here for #PyCon2017 <a href="http://twitter.com/mojosoeun" target="_blank" title="Twitter profile for @mojosoeun">@mojosoeun</a> <a href="http://twitter.com/DYPark_Dayoung" target="_blank" title="Twitter profile for @DYPark_Dayoung">@DYPark_Dayoung</a></p><p>&#x200a;&mdash;&#x200a;<a href="https://twitter.com/Rachell_Calhoun/status/865329816114835456">@Rachell_Calhoun</a></p></blockquote><script src="//platform.twitter.com/widgets.js" charset="utf-8"></script><script>function notifyResize(height) {height = height ? height : document.documentElement.offsetHeight; var resized = false; if (window.donkey && donkey.resize) {donkey.resize(height); resized = true;}if (parent && parent._resizeIframe) {var obj = {iframe: window.frameElement, height: height}; parent._resizeIframe(obj); resized = true;}if (window.location && window.location.hash === "#amp=1" && window.parent && window.parent.postMessage) {window.parent.postMessage({sentinel: "amp", type: "embed-size", height: height}, "*");}if (window.webkit && window.webkit.messageHandlers && window.webkit.messageHandlers.resize) {window.webkit.messageHandlers.resize.postMessage(height); resized = true;}return resized;}twttr.events.bind('rendered', function (event) {notifyResize();}); twttr.events.bind('resize', function (event) {notifyResize();});</script><script>if (parent && parent._resizeIframe) {var maxWidth = parseInt(window.frameElement.getAttribute("width")); if ( 500  < maxWidth) {window.frameElement.setAttribute("width", "500");}}</script><h4>#Opening Reception</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*3BjGdMNMcoGKQGqTPHE6VQ.jpeg" /></figure><p>저희가 도착한 18일에는 Opening Reception이 열렸습니다. 전시 홀에서는 다양한 기업과 단체의 부스들이 있었는데요. 관심있는 부스에 가서 말도 걸어보고, 구경하면서 스티커와 기념품도 챙기고, DjangoGirls Portland 운영진, Pyladies 운영진도 만나고, 한국에서 오신 분들과 만나 이야기도 나누면서 시간을 보냈습니다. Pycon을 여러번 참석해 보신 Python Korea 관계자 분의 말에 따르면 메인행사보다 Opening Reception, 스프린트가 훨씬 재밌다고 해요:)</p><h4>#Session</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*L29gqZ2X0le3UlR6qQKMcg.jpeg" /></figure><p>3일동안 Pycon에 참여하면서 들었던 여러가지 세션 중에 흥미롭게 들었던 세션은 다음과 같아요.</p><p>첫번째, 코드리뷰를 하면서 피해야 할 안티패턴과 좋은 코드리뷰는 무엇인가에 대한 이야기를 다룬 Eric Rose의 Constructive Code Review.</p><p>두번째,인스타그램에서 파이썬 2.7을 사용하다 파이썬 3.6으로 마이그레이션 하기로 하기로 결정해던 동기와,전략, 도전, 해결에 대한 이야기.</p><p>세번째, 파이썬 시각화 라이브러리를 이용하여 기후 변화와 관련된 프로젝트를 시각한 이야기도 들려주면서 Matplotlib 부터 Seaborn 까지 다양한 시각화 라이브러리를 소개하고, 장단점을 이야기 하는 자리인 Jake VanderPlas의 The Python Visualization Landscape</p><p>더 많은 내용은 유튜브에서 찾아보실 수 있습니다 .</p><h4>#Open Space</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*JZR2kWLSK-dOgAeyVCTGWw.jpeg" /></figure><p>Open Space에는 파이썬과 관련된 주제부터 요가, 댄스, 초콜렛까지 다양한 곳들이 많았는데요. 재미난 Open Space가 없을까 찾아보다 들어간 곳의 주제는 다음과 같았습니다.</p><ol><li>오픈소스 참여하기: 오픈 소스에 참여하는 방법에 대한 이야기를 나누고, 자신은 어떤 프로젝트에 기여 해봤는지 이야기를 나누는 자리였습니다. 한참 문서를 수정하고 PR을 날리는 것에 대한 이야기가 나왔었는데 단순히 철자가 틀린 것을 발견하고 PR을 날렸더니 Merge가 되어서 운이 좋게 큰 프로젝트의 컨트리뷰터가 되었다는 이야기 부터, 난 이프로젝트의 컨트리뷰터다 자랑도 하고, 커미터가 되기까지 어떤 노력을 했는지에 대한 이야기도 나누고 재밌는 시간이었습니다.</li><li>초콜릿: 말 그대로 초콜릿을 먹고 이야기 해보는 Open Space이었습니다.처음에 이 Open Space를 발견했을 때 초콜릿을 사가야 되나? 어떤걸 하는것이지? 라고 궁금했었는데 호스트가 직접사온 초콜릿을 먹으면서, 이 초콜릿은 맛이있네, 저건 별로네 등의 이야기를 하는 시간이었습니다. (호스트로부터 포틀랜드에 괜찮은 초콜릿 가게를 소개받아 가서 구경하는 시간을 가졌어요!)</li></ol><h4>#After Party</h4><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*T_kF7b6_rU0Z_rugVpE_Iw.jpeg" /><figcaption>Newrelic에서</figcaption></figure><p><a href="https://www.eventbrite.com/">Eventbrite</a> 라는 사이트에서 우연히 발견한 Survay Monkey 사무실과 Newrelic 사무실에서 진행된 Pycon after party에 참여했는데요. 포틀랜드를 한눈에 내려다 볼 수 있을 정도로 멋진 뷰를 가지고 있는 곳이었습니다. 맥주를 마시면서 네트워킹을 했는데, 자기를 Gopher라 밝힌 싱가포르 개발자, Heroku 개발자, 톰슨 로이터에서 매니저로 일하시는 분 등 다양한 분야의 분들과 이야기를 나눠볼 수 있는 재미난 시간이었습니다.</p><h4>#Pyladies Auction/ Pyladies Lunch</h4><p>Pyladies Lunch와 Auction 두개 다 참가해보았는데요. 특히 Auction은 신선한 경험이었습니다. 매년 파이콘에서는 Pyladies 기금 모금을 위한 옥션이 열립니다. 작년에는 파이콘이라는 행사를 모르시는 분이 디즈니 회화를 사려고 옥션에 들어와서 2000달러에 사갔다는 일화가 있었다고 해요.</p><p>Pyladies Auction현장은 아래 링크에서 보실 수 있습니다 :)</p><p><a href="https://goo.gl/photos/VVahQKxMR7Ecv3Tp6">New video by soeun Lee</a></p><p>옥션현장을 참여하면서 느낀 것은 단순히 그 물건을 사기 위해 모인 자리가 아니라 기분 좋은 마음으로 Pyladies에 기부를 하기위해 모인 자리라는 것이 느껴졌습니다. 저도 기회가 되면 기부를 하고 싶었는데 금액에 놀랐고(아 이건 내가 낼수 있을 정도의 금액이 아니구라 라는 생각이;;) 기분좋게 그리고 거침없이 기부를 하는 분위기를 경험해 보지 않은 저로써는 적잔히 놀랐습니다.</p><h4>그리고..</h4><p>해외 컨퍼런스 참여는 이번이 처음이었습니다. 머무는 기간동안 보고 느낀 것이 많다 보니 시야가 더 넓어지고, 파이썬이라는 언어 하나로 다양한 사람들과 이야기 해볼 수 있는 것은 정말로 멋진 경험이었습니다. `아 나도 저 사람처럼 되고싶다. 저 사람이 일하는 곳에서 일해보고 싶다` 라는생각이 들고 동기부여도 많이 되어 한국으로 돌아오는 내내 내가 하는 방향에 대해 진지하게 스스로 고민하는 시간을 가졌습니다.</p><p>보통 포틀랜드 날씨는 흐리고, 비가 온다고 하는데, 행사 참여일 내내 맑은 날씨에 매번 감탄 했어요. lyft를 타면서 현지 사람들한테 맛집도 추천받고, 맛있는 맥주도 마시고, 포틀랜드 힙스터처럼 힙해지겠다고 스케이트보드도 사들고 왔네요.(비행기에 가지고 타면서 불편했지만;; 하하)</p><p>컨퍼런스에 참여하면 언제나 자극이 됩니다. 내가 부족한 점을 깨닫는데 도움이 되고, 동기부여가 되기 때문이에요. Pycon 튜토리얼데이와 스프린트를 참여하지 못하고 온게 무척 아쉽지만, 다음에 또 가게 된다면 꼭 참여해보려고 합니다.</p><p>일주일동안의 시간. 정말 행복하고 즐거운 시간이었습니다.</p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=1baad83219a6" width="1" height="1">]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Webpack을 서비스에 적용해 보기위한 시도]]></title>
            <link>https://medium.com/@soeunlee/webpack%EC%9D%84-%EC%84%9C%EB%B9%84%EC%8A%A4%EC%97%90-%EC%A0%81%EC%9A%A9%ED%95%B4-%EB%B3%B4%EA%B8%B0-a5ccfec070f3?source=rss-2a9af50b4ecc------2</link>
            <guid isPermaLink="false">https://medium.com/p/a5ccfec070f3</guid>
            <category><![CDATA[webpack]]></category>
            <dc:creator><![CDATA[Sona Lee]]></dc:creator>
            <pubDate>Sat, 29 Apr 2017 10:04:54 GMT</pubDate>
            <atom:updated>2017-05-03T13:46:17.638Z</atom:updated>
            <content:encoded><![CDATA[<p>이전에 <a href="https://medium.com/@soeunlee/%ED%95%9C%EA%B5%AD-%EA%B7%BC%ED%98%84%EB%8C%80%EC%82%AC-%EA%B4%80%EC%A0%90%EC%9C%BC%EB%A1%9C-%EB%B0%94%EB%9D%BC%EB%B3%B8-webpack-%EC%82%BD%EC%A7%88%EA%B8%B0-8d9c22eb1523">Webpack과 관련된 글</a>을 쓴것 처럼 패기를 가지고 시니어 개발자님을 설득해 보았으나 설득하지 못했습니다. 제가 생각해도 미흡한 점들이 많았고 설득할 만한 요소를 가지고 주장했다고 볼 수 없었기 때문입니다. 하지만 일부 소규모 서비스에 webpack을 적용해 봐도 괜찮다는 의견을 듣게 되었어요! Yay!</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/250/1*BQS_11_rjXDLMBE2ernK0A.gif" /><figcaption>Yay!</figcaption></figure><p>제가 바꾸고자 하는 서비스에서 CSS Preprocessor를 컴파일 할 때는 gulp, Javascript 파일을 minify 할 때는 grunt 등 상황에 따라 실행해야 하는 task runner가 달라서 헷갈리기도 했고 webpack을 공부한 김에 하나로 통합하고 정리하는 작업을 하게 되었습니다. 서비스에 맞게 사용해야 했기 때문에 <a href="https://webpack.js.org/guides/">webpack 가이드</a>를 전체적으로 다 훑어 보았어요.</p><p>처음 <a href="https://webpack.js.org/guides/get-started/">webpack 기본 튜토리얼</a>을 접하면서 낯선 사람을 만난 것 처럼 어색했는데 서비스에 어떻게 적용시켜 볼까 고민을 하고 해결해 나가는 과정을 겪다 보니 예전보다는 친해진 기분이 들었습니다(아직 더 친해져야 하지만;;). 진행을 하면서 제가 고민했던 대표적인 두가지 요소는 다음과 같아요.</p><ol><li>CSS코드도 함께 번들링하는 것은 좋은데 javascript파일을 실행하는 것에 따라서 스타일 시트를 적용하는것은 과연 좋은 것일까? 렌더링도 지연 될수 있고, 심하면 FOUC문제도 일어날 수 있을텐데…</li><li>어플리케이션 코드에 비해 라이브러리 코드는 자주 바뀌지 않는데 함께 다 묶어서 번들러로 만드는 작업은 불필요하지 않을까?</li></ol><p>그리고 각각 고민을 어떤식으로 해결해나갔는지 설명해보도록 하겠습니다.</p><h4>1. CSS코드도 함께 번들링하는 것은 좋은데 javascript파일을 실행하는 것에 따라서 스타일 시트를 적용하는것은 과연 좋은 것일까? 렌더링도 지연 될수 있고, 심하면 FOUC문제도 일어날 수 있을텐데…</h4><p>→ 이 고민은 Code Splitting-CSS 로 해결하였어요.</p><pre>module.exports = {<br>    module: {<br>        rules: [{<br>            test: /\.css$/,<br>            use: [ &#39;style-loader&#39;, &#39;css-loader&#39; ]<br>        }]<br>    }<br>}</pre><p>위와 같이 css-loader와 style-loader를 이용해서 설정을 하면 javascript와 함께 번들러로 만들어 지는데, 스타일을 위해 자바스크립트 번들이 모두 로드될때까지 대기하는 방식이 과연 좋은 방법일까라는 생각이 들었습니다. 실제로 webpack 문서를 찾아보니 이 방식은 비동기식 및 병렬적으로 CSS를 로드를 할 수 없는 단점이 있다고 해요. 그럴 경우 렌더링이 지연되거나 심하면 FOUC 문제가 생길 수 있다고 합니다. 이럴 경우 ExtractTextPlugin을 사용하여 css 코드를 따로 분리해서 번들링 하면 된다고 가이드라인에 명시되어 있었습니다. 아래와 같이 코드를 수정하게 되었어요.</p><pre>const ExtractTextPlugin <strong>= </strong>require(&#39;extract-text-webpack-plugin&#39;);</pre><pre>module<strong>: </strong>{<br>    rules<strong>: </strong>[<br>      {<br>        test<strong>: </strong>/\.less$/,<br>        use<strong>: </strong>ExtractTextPlugin.extract({<br>          fallback<strong>: </strong>&#39;style-loader&#39;,<br>          use<strong>: </strong>[ &#39;css-loader&#39;, &#39;less-loader&#39; ]<br>        })<br>      },<br>    ]<br>  },</pre><pre>new ExtractTextPlugin(&#39;../css/index.css&#39;),</pre><p>webpack을 실행하면 아래와 같은 메시지를 볼 수 있었습니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/1024/1*xudlzneA5P4oNTSj_F7BLg.png" /></figure><h4>2. 어플리케이션 코드에 비해 라이브러리 코드는 자주 바뀌지 않는데 함께 다 묶어서 번들러로 만드는 작업은 불필요하지 않을까?</h4><p>→ 이 고민은 Code Splitting-Library으로 해결하였어요.</p><pre>var path = require(&#39;path&#39;);<br><br>module.exports = {<br>  entry: &#39;./app/index.js&#39;,<br>  output: {<br>    filename: &#39;bundle.js&#39;,<br>    path: path.resolve(__dirname, &#39;dist&#39;)<br>  }<br>};</pre><p>이런식으로 코드를 적다 보니 이런 의문점이 들었습니다. 라이브러리 코드는 자주 바뀌지 않는데 매번 이렇게 빌드해서 번들러로 만들어 줘야 하나?</p><p>보통 어플리케이션은 서드파티 라이브러리를 사용하게 되는데, 특정 버전의 라이브러리를 쓸경우 코드가 자주 바뀌지 않지만 어플리케이션 코드는 자주 바뀌게 되는데요. 서드파티 코드와 함께 어플리케이션 코드를 번들링하는것은 비효율적인 작업입니다. 브라우저는 캐시 헤더에 기반하여 asset file를 캐시할 수 있고, 파일들은 해당 콘텐츠가 변경되지 않았다면 cdn을 다시 호출할 필요 없이 캐시가 가능해요. 이러한 이점때문에, 어플리케이션 코드의 변경에 상관없이 vendor file의 hash를 일정하게 유지 해야 합니다. 이러한 고민을 해결하기 위해 일단 webpack가이드에 나온 것 처럼 어플리케이션코드를 위한 번들과 라이브러리코드를 위한 번들을 아래와 같이 나누는 작업을 했어요!</p><pre>entry<strong>: </strong>{<br>    js_custom<strong>: </strong>&#39;./entry.js&#39;,<br>    js_lib<strong>: </strong>[&quot;jquery&quot;,&quot;bootstrap&quot;, &quot;underscore&quot;],<br>  },</pre><p>위에 코드로만 돌리면 js_custom.js 와 js_lib.js 이렇게 두개의 번들 파일이 만들어 지는 것을 볼 수 있지만 entry.js에서 underscore를 require한다면 번들링된 js_custom파일에도 js_lib파일에도 라이브러리 코드가 모두 보입니다.아래와 같이요!</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/878/1*z5WKOX9uwhLM1y1TVpRMKA.png" /><figcaption>js_lib.js</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/828/1*-edl2GGhKlQf65bn0p3-Eg.png" /><figcaption>js_cusom.js</figcaption></figure><p>각 entry point는 의존성을 가지고 있는 것들도 함께 묶어버리기 때문입니다. 이러한 문제를 해결해기 위해 아래와 같이 CommonsChunkPlugin 을 사용하게 되었어요.</p><pre>new webpack.optimize.CommonsChunkPlugin({<br>      name<strong>: </strong>&#39;js_lib&#39;, // Specify the common bundle&#39;s name.<br>      minChunks<strong>: </strong>function (module) {<br>        return module.context <strong>&amp;&amp; </strong>module.context.indexOf(&#39;node_modules&#39;) <strong>!== -</strong>1;<br>      }<br>    }),</pre><p>CommonsChunkPlugin는 이름처럼 공통(common)으로 사용되는 모듈을 빼내어서 공통(common) 번들에 추가하고, 공통 번들이 존재하지 않으면 새로운 번들을 만들어 줍니다. 이렇게 하면 위에 코드에서 name에 js_lib라고 명시해 준것 처럼 js_lib 파일에만 라이브러리 코드가 존재하는 것을 볼 수 있습니다. 여기까지 하면 고민을 해결할수 있다고 생각했는데! 또 살펴 봐야 할 것이 있더군요!</p><p>파일을 분리 시켰는데도 불구하고 js_custom 코드를 즉 어플리케이션 코드를 변경하고 webpack을 다시 돌리면 js_lib file의 hash값이 바뀌어 있는 것을 볼 수 있었습니다. 이렇게 js_lib 파일의 해시가 매번 빌드 할 때마다 바뀌게 되면, 브라우저가 그 파일을 재로딩 해야 하기 때문에 브라우저 캐시의 이점을 얻지 못하게 됩니다.</p><figure><img alt="" src="https://cdn-images-1.medium.com/max/934/1*S0oij2_g_I7INXukUkRA2Q.png" /><figcaption>1차</figcaption></figure><figure><img alt="" src="https://cdn-images-1.medium.com/max/940/1*N3EPlPg-LuDndOH2Zm2sZQ.png" /><figcaption>custom 코드를 변경 한 후 lib코드의 hash 값이 바뀌어 있음.</figcaption></figure><p>매번 build 할 때마다, webpack이 제대로 일할수 있도록 runtime code가 만들어 지는데 번들 파일이 하나일때는 그 안에 생기지만, 여러개의 번들 파일이 있는 경우 공통 모듈이 있는 js_lib 파일에 runtime code가 들어가게 됩니다.그런이유로 매번 hash값이 바뀌게 된다고 합니다.</p><p>이러한 문제를 해결하기 위해 아래와 같이 manifest파일을 따로 하나 더 만들었어요! 그렇게 되면 runtime code는 manifest.js 파일로 따로 분리가 되고 브라우저 캐시의 이점을 얻을 수 있습니다.</p><pre>new webpack.optimize.CommonsChunkPlugin({<br>      name<strong>: </strong>&#39;js_lib&#39;, // Specify the common bundle&#39;s name.<br>      minChunks<strong>: </strong>function (module) {<br>        return module.context <strong>&amp;&amp; </strong>module.context.indexOf(&#39;node_modules&#39;) <strong>!== -</strong>1;<br>      }<br>    }),<br>new webpack.optimize.CommonsChunkPlugin({<br>  name<strong>: </strong>&#39;manifest&#39;<br>})</pre><p>앗 그리고 앞에 설명을 안했는데 webapck에서는 아래와 같이 간단한 설정 만으로 각각의 번들 파일에 유니크한 hash값을 만들어 낼 수 있어요.</p><pre>output<strong>: </strong>{<br>    filename<strong>: </strong>&#39;[name].[chunkhash].min.js&#39;,<br>    path<strong>: </strong>path.join(__dirname, &#39;../public/business/js/&#39;)<br>  },</pre><p>또한 코드가 수정되었을 경우 hash값이 바뀌게 되는데 이런식으로 html에 매번 적어주기 불편합니다. 아래와 같이 말이죠.</p><pre>&lt;script src=&quot;js_lib.50cfb8f89ce2262e5325.js&quot;&gt;&lt;/script&gt;<br>&lt;script src=&quot;js_custom.70b594fe8b07bcedaa98.js&quot;&gt;&lt;/script&gt;</pre><p>그래서 이 문제를 해결하기 위해 <a href="https://www.npmjs.com/package/webpack-manifest-plugin">webpack-manifest-plugin</a> 을 사용했습니다.</p><pre>const ManifestPlugin <strong>= </strong>require(&#39;webpack-manifest-plugin&#39;);</pre><pre>module<strong>: </strong>{<br>    rules<strong>: </strong>[<br>      {<br>        test<strong>: </strong>/\.less$/,<br>        use<strong>: </strong>ExtractTextPlugin.extract({<br>          fallback<strong>: </strong>&#39;style-loader&#39;,<br>          use<strong>: </strong>[ &#39;css-loader&#39;, &#39;less-loader&#39; ]<br>        })<br>      },<br>    ]<br>  }</pre><pre>plugins<strong>: </strong>[<br>    new ManifestPlugin(),<br>  ]</pre><p>webpack을 실행하면 ManifestPlugin으로 인해 아래와 같이 manifest.json파일이 생성되고 최신 번들링된 파일의 이름으로 업데이트가 됩니다. 단 서버에서 조금 설정을 해줘야 해요.</p><pre>{<br>  &quot;js_custom.css&quot;: &quot;../css/index.css&quot;,<br>  &quot;js_custom.js&quot;: &quot;js_custom.75fc747f21fcc02dd6c7.min.js&quot;,<br>  &quot;js_lib.js&quot;: &quot;js_lib.c1580831b39d59615228.min.js&quot;,<br>  &quot;manifest.js&quot;: &quot;manifest.5bbdaa6efdd3e9b39722.min.js&quot;<br>}</pre><p>두번째 고민은 이렇게 해결했던 것 같아요.</p><h3>마지막으로..</h3><p>제가 작업한 부분의 최종본 일부는 아래와 같아요.</p><pre>const webpack <strong>= </strong>require(&#39;webpack&#39;);<br>const path <strong>= </strong>require(&#39;path&#39;);<br>const UglifyJSPlugin <strong>= </strong>require(&#39;uglifyjs-webpack-plugin&#39;);<br>const ExtractTextPlugin <strong>= </strong>require(&#39;extract-text-webpack-plugin&#39;);<br>const ManifestPlugin <strong>= </strong>require(&#39;webpack-manifest-plugin&#39;);<br><br>module.exports <strong>= </strong>{<br>  entry<strong>: </strong>{<br>    js_custom<strong>: </strong>&#39;./entry.js&#39;,<br>    js_lib<strong>: </strong>[&quot;jquery&quot;, &quot;bootstrap&quot;, &quot;underscore&quot;],<br>  },<br>  output<strong>: </strong>{<br>    filename<strong>: </strong>&#39;[name].[chunkhash].min.js&#39;,<br>    path<strong>: </strong>path.join(__dirname, &#39;../public/b/js/&#39;)<br>  },<br>  devtool<strong>: </strong>&quot;cheap-module-eval-source-map&quot;,<br>  resolve<strong>: </strong>{<br>    modules<strong>: </strong>[&quot;./app/node_modules&quot;]<br>  },<br>  module<strong>: </strong>{<br>    rules<strong>: </strong>[<br>      {<br>        test<strong>: </strong>/\.less$/,<br>        use<strong>: </strong>ExtractTextPlugin.extract({<br>          fallback<strong>: </strong>&#39;style-loader&#39;,<br>          use<strong>: </strong>[ &#39;css-loader&#39;, &#39;less-loader&#39; ]<br>        })<br>      },<br>    ]<br>  },<br>  plugins<strong>: </strong>[</pre><pre>    new webpack.ProvidePlugin({<br>     $<strong>: </strong>&quot;jquery&quot;,<br>     jQuery<strong>: </strong>&quot;jquery&quot;<br>    }),    <br>    new ManifestPlugin(),<br>    new UglifyJSPlugin({<br>      comments<strong>: </strong>false<br>    }),<br>    new webpack.optimize.CommonsChunkPlugin({<br>      name<strong>: </strong>&#39;js_lib&#39;,<br>      minChunks<strong>: </strong>function (module) {<br>        return module.context <strong>&amp;&amp; </strong>module.context.indexOf(&#39;node_modules&#39;) <strong>!== -</strong>1;<br>      }<br>    }),<br><br>    new ExtractTextPlugin(&#39;../css/index.css&#39;),<br>    new webpack.optimize.CommonsChunkPlugin({<br>      name<strong>: </strong>&#39;manifest&#39;<br>    })<br>  ]<br>}</pre><p>적다 보니 제가 고민했던 부분이 code splitting과 관련된 내용이었던 것 같습니다. 현재 실제 코드는 코드리뷰를 받는 중이에요. 고민했던 부분은 저의 방식으로 해결해 보았지만 아직 webpack에 대해 제대로 한다고 할 수 있는 수준이 아니라서 좀더 친해 졌으면 좋겠네요. ㅠㅠ</p><p>이후 글은 dev환경과 prod환경일 경우의 webpack config 파일을 어떻게 구성할 것인지에 고민을 했던 내용과 해결했던 방법을 글을 쓰려고 합니다.</p><p>그럼 뿅!</p><p>reference : <a href="https://webpack.js.org/guides/">https://webpack.js.org/guides/</a></p><img src="https://medium.com/_/stat?event=post.clientViewed&referrerSource=full_rss&postId=a5ccfec070f3" width="1" height="1">]]></content:encoded>
        </item>
    </channel>
</rss>