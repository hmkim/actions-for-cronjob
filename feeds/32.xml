<?xml version="1.0" encoding="UTF-8" ?>








<rss version="2.0"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:taxo="http://purl.org/rss/1.0/modules/taxonomy/"
	xmlns:activity="http://activitystrea.ms/spec/1.0/" >
<channel>
	
		
			<title><![CDATA[나른한 하루]]></title>
			<link>https://blog.naver.com/kbs4674</link>
			
				<image>
					<url><![CDATA[https://blogpfthumb-phinf.pstatic.net/MjAxODA0MjNfMTgw/MDAxNTI0NDE5NTU2ODM5.WxxM9vSlHyOQEn-VuZjEaJBQCYdUQtZN-Cu3IezeFu8g.07dEpZhph2rdNuoPV-1qyJHxdwOUsHZFi4sSt8cHT-Eg.PNG.kbs4674/wbb.png?type=m2]]></url>
					<title><![CDATA[나른한 하루]]></title>
					<link>https://blog.naver.com/kbs4674</link>
				</image>
			
			<description><![CDATA[Try Challenge Catch Revive]]></description>
			<language>ko</language>
			<generator>Naver Blog</generator>
			<pubDate>Mon, 13 May 2019 09:06:48 +0900</pubDate>

			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[나른한 하루]]></category>
					<title><![CDATA[서울 통합이동서비스(MaaS) 해커톤 행사 안내]]></title>
					<link>https://blog.naver.com/kbs4674/221525616339</link>
					<guid>https://blog.naver.com/kbs4674/221525616339</guid>
					<description><![CDATA[다가오는 5월, 서울시와 한국스마트카드에서 해커톤이 개최될 예정입니다!해커톤 주제는 아무래도 &#x27;통합이동서비스&#x27;, &#x27;한국스마트카드&#x27; 하면은 역시 교통이 떠오르는 만큼 교통에 관련된 주제입니다!공모 주제교통/생활정보 등을 활용하여 스마트 교통서비스(App) 개발- 대중교통 활성화- 교통약자 이동 편의 증진- 대중교통 편익 증진행사 일정 안내- 기획서 제출(04.09~05.03)- 서류심사 및 발표(05.13)- 사전교육 및 멘토링(05.18 / 06.01) - 1차 예선(06.22)- 해커톤 본선(07.20~21)참가 대상교통정보에 관심 있는 기획자, 개발자, 디자이너 누구나 팀 구성(2~5인 내)※ 팀 내 개발이 가능한 인원이 1명 이상 포함총 상.......]]></description>
					<pubDate>Mon, 29 Apr 2019 20:51:27 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[NDC 2019 서포터즈]]></category>
					<title><![CDATA[NDC 서포터즈 후기 (3일차)]]></title>
					<link>https://blog.naver.com/kbs4674/221524920724</link>
					<guid>https://blog.naver.com/kbs4674/221524920724</guid>
					<description><![CDATA[마지막 서포터즈 3일차가 다가왔습니다..이제 벌써 마지막이란게 믿겨지지 않네요.. 서포터즈 아침 OT 후, 방장님께서 음료수와 함께 저희를 맞이해주셨습니다! 이젠 3일차라 그런지 어떻게 관리를 해야할지 숙련도가 쌓여서 과거에 비해 쉽게 업무관리가 진행되었습니다.아침에 맨 첫 강연이 마침 제가 보고싶어하는 강연이 있어서 저도 함께 강연 청강을 하고.. 점심도 먹으면서 더 힘내고..(참고로 이 때 두 그릇 먹음..ㅋㅋ) 3층 사옥 정원에서 공연을 관람하게 되었습니다! 오늘은 넥슨 임직원분들이 동아리로 만든 '더놀자 밴드' 팀에서 공연이 진행되었습니다.제가갔을 땐 마비노기 OST - 어릴 적 할머니가 들려주신 옛 전설 BGM을 연주하.......]]></description>
					<pubDate>Mon, 29 Apr 2019 02:07:25 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[NDC 2019 서포터즈]]></category>
					<title><![CDATA[NDC 서포터즈 후기 (2일차)]]></title>
					<link>https://blog.naver.com/kbs4674/221523857052</link>
					<guid>https://blog.naver.com/kbs4674/221523857052</guid>
					<description><![CDATA[서포터즈 2일차의 아침이 밝았습니다!오늘도 역시 서포터즈를 위해 새벽에 기상하고 넥슨을 향합니다. 문뜩 떠오른 Tip 밥 해결출근을 하는데 문득 떠오르는 팁이 있더라고요..의외로 많은 분들이 몰라하시던데 넥슨 주변에서 밥 먹는 팁을 알려드릴까 합니다. 사실 넥슨 주변에서 가까우면서도 밥 먹을만한 곳은 대체로 GB1타워 지하1층에 위치한 GS25 편의점을 생각하시거나, 아예 이 곳 조차도 떠오르지 않는 분이 계실겁니다. 그런데 제가 아는 곳은 주변에 많은 밥집도 있고, 심지어 아침도 드실 수 있는 곳(서브웨이, 맥도날드, 버거킹) 입니다. 넥슨과 NHN 사이에 이렇게 큰 육교가 있는데요, 이 육교를 끝까지 건너면 위와같은 사진 장소.......]]></description>
					<pubDate>Sat, 27 Apr 2019 12:42:07 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[NDC 2019 서포터즈]]></category>
					<title><![CDATA[NDC 서포터즈 후기 (1일차)]]></title>
					<link>https://blog.naver.com/kbs4674/221521948881</link>
					<guid>https://blog.naver.com/kbs4674/221521948881</guid>
					<description><![CDATA[서포터즈로서의 첫 날 입니다!이 때 새벽 6시에에 기상을 하고, 대충 씻고, 하니 아침 7시가 되어있더라고요.. =_=보통 아침에 일찍 일어나는걸 귀찮아 하는 타입인데.. 이 날 만큼은 정말 상쾌한 아침이었습니다! 2층 광역버스.. 보기 힘든 녀석인데 아침 출근 때 보게되네요.. ㄲㄲ 원래는 집 근처 편의점에서 아침을 해결할려 했는데.. 도시락이 다 떨여져가지고 아침 대용으로 먹게 된 맥모닝 셋트입니다 ㅎㅎ 아침 9시까지 약속장소에 가서 출석 체크 후, 이제 서포터즈들 마다 일반 청강자와 같은 명찰을 받게 됩니다!이 명찰을 보고나서야 이제 서포터즈라는게 실감이 가네요.. 명찰을 받고, 이제 본격적으로 자기 구역에 가서 구역 방장.......]]></description>
					<pubDate>Wed, 24 Apr 2019 23:46:09 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[NDC 2019 서포터즈]]></category>
					<title><![CDATA[NDC 서포터즈 0일차 (OT)]]></title>
					<link>https://blog.naver.com/kbs4674/221521923405</link>
					<guid>https://blog.naver.com/kbs4674/221521923405</guid>
					<description><![CDATA[해당 게시판에서 처음 인사드리겠습니다!! 해당 본문에서는 NDC 서포터즈로서 활동했던 썰을 풀어보는 시간을 가져보게 될 겁니다!앞으로 있을 NDC 서포터즈의 이야기 많이 봐주세요!^^ 서포터즈 면접 붙게된 후, 이제 약 3일동안 서포터즈 자격으로 넥슨에서 활동을 하게 됩니다!참 이게 기분이 묘하더라고요.. 2-3년 전 만 해도 청강자 자격으로 발표장을 도라다녔다가, 이젠 서포터즈 입장으로서 활동을 하니까 느낌이 확 다른거 있죠.. 본격적인 서포터즈 출근에 앞서, NDC 시작 하루 전 날에는 서포터즈 활동 전에 있어 알아둬야할 부분에 대해 배워보는 시간을 가졌습니다. ▲ 넥슨 코리아 본사※ 이미지 클릭 시 커집니다. 면접 이후로 오.......]]></description>
					<pubDate>Wed, 24 Apr 2019 23:12:51 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[나른한 하루]]></category>
					<title><![CDATA[아침은 든든하게, 천원 학식]]></title>
					<link>https://blog.naver.com/kbs4674/221520447280</link>
					<guid>https://blog.naver.com/kbs4674/221520447280</guid>
					<description><![CDATA[새 아침이 밝았습니다!..지금 대학생 분들은 시험기간 때문에 바쁜 철일겁니다..ㅠ요즘 대학가에서는 천원 학식이 핫한데.. 저도 드디어 그 천원 학식을 먹어볼 기회가 생겼습니다 ㅠ저희 대학 같은 경우에는 모든 날에 천원 학식을 파는 것은 아니고, 시험기간 때에만 판매를 합니다.매번 저 공지를 보면서 &#x27;먹어야지&#x27; 하는데.. 아침에 일찍 일어나는게 쉽지 않다보니 그간 못 먹다가 오늘에서야 드디어 먹어보게 되네요..키오스크에서 식권을 구매하는데 보통 식단메뉴 참고사진으로는 해당 메뉴에 대한 사진이 있는데 천원 식단은 임팩트 있게 &#x27;천원 지폐&#x27;를 보여주는 위엄을 보여줬습니다..아침에는 사람이 없을 줄.......]]></description>
					<pubDate>Tue, 23 Apr 2019 10:47:55 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Github]]></category>
					<title><![CDATA[Github : Github 커밋 캐시 이슈 (커밋 기록을 지워도 접근이 가능한 과거 커밋 기록)]]></title>
					<link>https://blog.naver.com/kbs4674/221516168217</link>
					<guid>https://blog.naver.com/kbs4674/221516168217</guid>
					<description><![CDATA[원래 이 이슈를 19년도 2월에 겪었는데.. 이제서야 글을 남기게 됩니다.과거에 Github을 다루면서 발생했던 이슈를 소개하고, 해결과정을 애기나누고자 합니다! 상황 설명 : 커밋 기록을 지워도 접근이 가능한 과거 커밋 기록 ▲ 커밋 기록을 지우기 전의 Github 자료 개발을 하면서 하루는 중간에 커밋 기록을 지워야 할 일이 있어서 프로젝트 파일 내에 있던 .git 파일을 지우고,다시 .git 환경을 설정 후 재 배포를 하는 과정을 거쳤었습니다. 12345rm -rf .gitgit initgit add .git commit -m "(어쩌고저쩌고)"git push origin +master ▲ 커밋 기록을 지운 후의 Github 저장소 공간 그렇게 커밋기록을 다 지우고, 완전히 과거의 기록물은 사.......]]></description>
					<pubDate>Wed, 17 Apr 2019 20:28:50 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[나른한 하루]]></category>
					<title><![CDATA[오랜만의 이야기와 NDC 서포터즈 재 도전]]></title>
					<link>https://blog.naver.com/kbs4674/221510720757</link>
					<guid>https://blog.naver.com/kbs4674/221510720757</guid>
					<description><![CDATA[다시 학교생활을 시작 한 이후로 요즘 마이 바쁘게 보내고 있습니다.개인 개발 프로젝트도 다시 시작되었고, 6개월만에 공부를 해서 그런지 학교 공부가 낯서네요 히히.. 2019년 4월 24일 ~ 2019년 4월 26일에 넥슨에서 개발자 컨퍼런스가 또 다시 개최됩니다.저도 3년전 부터 꾸준히 소식도 들어가며 많이 참여를 했었습니다. 하지만 그동안 NDC에 참여를 하면서 강연을 통해 많은 도움을 받곤 했는데, 과거에 강연의 도움을 받았다면 올 해 2019년에는모두가 저처럼 만족을 할 수 있는 성공적인 행사가 될 수 있도록 NDC 서포터즈에 지원을 넣었습니다! 자소서 문항은 크게 3개로서,지원동기 (NDC를 알게 된 계기, 서포터즈에 기여하고 싶은 점.......]]></description>
					<pubDate>Thu, 11 Apr 2019 01:28:42 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[나른한 하루]]></category>
					<title><![CDATA[윈도우 10 Edu 시리얼키 부터 PC에 OS 설치까지의 모든 설치법]]></title>
					<link>https://blog.naver.com/kbs4674/221484370165</link>
					<guid>https://blog.naver.com/kbs4674/221484370165</guid>
					<description><![CDATA[안녕하세요, MS와 협약 맺은 대학이라면 어디든 다운받을 수 있는 Windows 10 Edu 설치법에 대해 소개드리고자 합니다!보통 글을 보면 시리얼 키를 받고 끝내는 글들이 많이 보이곤 하던데 저는 시리얼키 적용부터 컴퓨터 적용까지의 모든 방법을 담아 설치법을 소개드리고자 합니다! Chapter 1 Windows10 EDU 시리얼키 다운로드 1. 윈10 에듀 시리얼키를 발급을 해주는 다음 사이트로 방문해주세요https://event.eventservice.co.kr/microsoft/2017/00/web/0223_win10.html 2. 자신이 소속된 대학에 가신 후, 등록 버튼을 클릭해서 회원가입 및 웹메일 인증을 통해 소속대학 인증을 합니다. 3. 회원가입을 마치셨다면 로그인을 해주세요. 4. 로.......]]></description>
					<pubDate>Sat, 09 Mar 2019 23:44:50 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[개발 포트폴리오]]></category>
					<title><![CDATA[대학 웹메일 혜택을 : 담다]]></title>
					<link>https://blog.naver.com/kbs4674/221469890676</link>
					<guid>https://blog.naver.com/kbs4674/221469890676</guid>
					<description><![CDATA[사이트 정보1. 사용 언어 / 웹프레임워크 : Ruby 2.4 / Ruby on Rails 5.1.62. Github : https://github.com/kbs4674/univ_promotion-public-3. DEMO : http://www.damda.info UNIST × 멋쟁이사자처럼 × NAVER D2SF 에서 주최한 해커톤 대회입니다.아무래도 학교가 UNIST이다 보니 제가 사는 곳에서 UNIST 까지 약 3시간 반을 거쳐 도착했습니다. '교통비 본전은 뽑자' 라는 마음으로 개발을 진행했다가... 결국 다른 팀들의 작품들의 기술에 미치지 못해서 상금을 타지 못했습니다 ㅠ하지만 이 작품만큼은 그냥 버리기 아까워서 약 1개월의 보수기간을 거친 끝에 최종적으로 완성된게 지금의 담다 입니다! 아이디어를 실현시킨 계기는, 대학 웹.......]]></description>
					<pubDate>Tue, 19 Feb 2019 21:10:33 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[개발 포트폴리오]]></category>
					<title><![CDATA[에브리타임 자동 크롤링 / 봇 시스템]]></title>
					<link>https://blog.naver.com/kbs4674/221460241196</link>
					<guid>https://blog.naver.com/kbs4674/221460241196</guid>
					<description><![CDATA[사이트 정보1. 사용 언어 / 웹프레임워크 : Ruby 2.4 / Ruby on Rails 5.1.62. Github : https://github.com/kbs4674/everytime_crawlbot3. DEMO : (사실 에타 봇은 서버 내에서 돌아가는 프로그래밍이다보니 DEMO가 따로 없습니다.) " 핑프 "핑거 프린세스(finger princess), 또는 핑거 프린스(finger prince)의 준말이다. 핑거 프린세스/프린스는 간단한 정보조차 스스로 조사하는 것을 귀찮아하는 사람들으로, 이들은 사이트 게시판에 수시로 질문을 올려 타인이 달아준 댓글을 통해 정보를 습득하고자 한다. 새 학기가 시작되기 전 많은 신입생들은 에타 게시판에 자신이 궁금해하는 질문을 올려가며 묻습니다. 다만, 질문은 좋으나 답변을 해.......]]></description>
					<pubDate>Thu, 07 Feb 2019 18:44:53 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[나른한 하루]]></category>
					<title><![CDATA[에브리타임 자동 크롤링 / 봇 시스템 개발 비하인드 이야기]]></title>
					<link>https://blog.naver.com/kbs4674/221460186269</link>
					<guid>https://blog.naver.com/kbs4674/221460186269</guid>
					<description><![CDATA[사이트 정보1. 사용 언어 / 웹프레임워크 : Ruby 2.4 / Ruby on Rails 5.1.62. Github : https://github.com/kbs4674/everytime_crawlbot3. DEMO : (사실 에타 봇은 서버 내에서 돌아가는 프로그래밍이다보니 DEMO가 따로 없습니다.) " 핑프 "핑거 프린세스(finger princess), 또는 핑거 프린스(finger prince)의 준말이다. 핑거 프린세스/프린스는 간단한 정보조차 스스로 조사하는 것을 귀찮아하는 사람들로, 이들은 사이트 게시판에 수시로 질문을 올려 타인이 달아준 댓글을 통해 정보를 습득하고자 한다. 새 학기가 시작되기 전 많은 신입생들은 에타 게시판에 자신이 궁금해하는 질문을 올려가며 묻습니다. 다만, 질문은 좋으나 답변을 해.......]]></description>
					<pubDate>Thu, 07 Feb 2019 17:37:34 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[개발 포트폴리오]]></category>
					<title><![CDATA[이더리움 기반 투표시스템]]></title>
					<link>https://blog.naver.com/kbs4674/221458943088</link>
					<guid>https://blog.naver.com/kbs4674/221458943088</guid>
					<description><![CDATA[사이트 정보1. 사용 언어 / 웹프레임워크 : Ruby 2.4 / Ruby on Rails 5.1.62. Github : https://github.com/kbs4674/blockchain_hackathon_public 사실 이 대회가 있었던 것은 알고 있었고, 더군다나 블록체인 기술은 원래 제가 다루지 않았다보니 민폐만 끼칠 것 같아서 이 대회는 참여를 하지 않으려 했었습니다. 그런데 우리학교 참가자 팀에서 웹 개발자를 구하고 있었고.. 얼마 후 아는형님의 소개를 통해 같이 팀원으로서 출전을 하게 되었습니다. (알고보니 저희 과 후배들이더군요..ㅎㅎ) 다행히 해당 해커톤은 1일 차에 블록체인에 대한 교육이 진행된 뒤, 이루어지는 해커톤이다 보니 교육일 차를 통해 블록체인의 개념, 프로그래밍으.......]]></description>
					<pubDate>Tue, 05 Feb 2019 20:42:03 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[개발 포트폴리오]]></category>
					<title><![CDATA[취미 월드컵 (Hobby Cup)]]></title>
					<link>https://blog.naver.com/kbs4674/221458920460</link>
					<guid>https://blog.naver.com/kbs4674/221458920460</guid>
					<description><![CDATA[사이트 정보 1. 사용 언어 / 웹프레임워크 : Ruby 2.4 / Ruby on Rails 5.1.62. Github : https://github.com/kbs4674/hobbycup3. DEMO : http://newbie-thone.herokuapp.com/4. "기술상" 수상 동국대학교 × 멋쟁이사자처럼 에서 주최한 뉴비톤 대회입니다.대회에는 국민대, 동국대 등 멋사가 존재하는 동아리의 학생들이 거진 참여해서 개최된 대회입니다. 사실 해당대회는 이제 막 멋사에 가입을 하고, 신입 멋사 동아리원(2-3개월 차)들에게 있어 해커톤이 개최 전 몸풀기 겸 대학과의 교류를 위해 개최된 대회입니다.저는 저 때 운영진이었다 보니 비록 참가 후보에서 제일 낮은 후보순위였긴 했으나, 운이 좋게도 붙게 되어서 저희학교 학생.......]]></description>
					<pubDate>Tue, 05 Feb 2019 19:46:07 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[개발 포트폴리오]]></category>
					<title><![CDATA[강원대학교 대동제 축제사이트]]></title>
					<link>https://blog.naver.com/kbs4674/221458915325</link>
					<guid>https://blog.naver.com/kbs4674/221458915325</guid>
					<description><![CDATA[사이트 정보 1. 사용 언어 / 웹프레임워크 : Ruby 2.4 / Ruby on Rails 5.1.62. Github : https://github.com/chap95/2018_knu_festival3. DEMO : http://knu대동제.com 해당 프로젝트는 약 1주일의 개발 끝에 만들은 작품입니다.대략 거의 10명의 멋쟁이사자처럼 동아리 팀원들과 함께 만든 작품이자, 모두가 합심해서 멋쟁이 사자처럼 최종 과제(?)로 만든 작품입니다.(저는 해당 프로젝트에서 백엔드(서버)를 담당해서 개발을 했습니다.) 사실 해당 프로젝트는 원래 운영진 중심이 아닌 학생들의 중심으로 개발을 했다보니, 저보다는 다른 팀원들이 고생을 꽤나 했습니다. 게다가 원래는 위와같이 PC 기준에 맞춘 사이트를 기획/제작을 했다가.......]]></description>
					<pubDate>Tue, 05 Feb 2019 19:31:59 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : 세션이 유지된 로그인 [Gem : Mechanize]]]></title>
					<link>https://blog.naver.com/kbs4674/221457563580</link>
					<guid>https://blog.naver.com/kbs4674/221457563580</guid>
					<description><![CDATA[부록 함께 응용하면 좋은 정보 : Nokogiri [클릭] ▲ 에브리타임과 같이 로그인을 해야 게시글을 열람할 수 있는 사이트 같은 경우사전에 로그인 세션이 유지되어야 한다. 크롤링을 할 때 떄로는 사전에 로그인이 진행된 상태에서 크롤링을 해야하는 경우가 있습니다.단순히 저희 컴퓨터에서 로그인이 되었다고 해서 수용이 없는게, 크롤링을 하는 서버는 애초에 기본 초반에는 로그인이란 개념 없이 무작정 크롤링을 하는 개념입니다. 이번에는 크롤링 전, 사전에 로그인이 유지된 세션을 하는 방법을 다뤄보고자 합니다. 로그인이 유지된 세션 : Mechanize 참고 1. 저는 Everytime 홈페이지를 기준으로 설명하겠습니다. 1. Gemfile 을 열람해서.......]]></description>
					<pubDate>Sun, 03 Feb 2019 05:28:19 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[나른한 하루]]></category>
					<title><![CDATA[" 나는 코코 카피탄, 오늘을 살아가는 너에게 "]]></title>
					<link>https://blog.naver.com/kbs4674/221451800174</link>
					<guid>https://blog.naver.com/kbs4674/221451800174</guid>
					<description><![CDATA[과거에 잡플래닛 사이트에서 설문조사를 했었는데, 잡플래닛 측에서 감사하게도 미술관 입장권을 줬습니다. 사실 평소의 저였더라면... 저걸 안쓰고 버리거나, 누군가에게 양도해줬을텐데 과거에 미술관 가는걸 좋아한다는 친구가 생각나서 이번에는 큰 맘 먹고 친구와 함께 미술관에 가기로 했습니다. 한 3시쯤에 도착한 대림미술관 입니다.코코 카피탄의 작품전시가 한창 진행중이었는데, 92년생 젊은 사진작가의 전시전이었던 것을 나중에 알게되며 크게 놀라랐었습니다. 처음에 티켓팅을 할 때 바로 미술관에 들어가는게 아닌, 미술관 바로 옆에 있는 말그대로 "미술관 옆집" 이란 곳에 가서 티켓팅을 하시면 됩니다. 저같은 경우는 이미 잡.......]]></description>
					<pubDate>Sat, 26 Jan 2019 21:42:10 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[고양이 일기]]></category>
					<title><![CDATA[방학 후, 고양이들 근황]]></title>
					<link>https://blog.naver.com/kbs4674/221449981059</link>
					<guid>https://blog.naver.com/kbs4674/221449981059</guid>
					<description><![CDATA[방학이 시작된지 벌써 한 달이 지나가려고 한다.방학이 시작되면 학교에는 이제 학생들이 많이 빠져나가고, 그로인해 캠퍼스 내 고양이들은 관리가 부실해질 수 있다는 걱정이 들긴했는데 그 걱정은 기우였다. 다행히도 캠퍼스 내 길고양이 돌봄 동아리에서 먹이도 꼬박 챙겨주는 덕분에 방학 때는 별 탈 없이 잘 지낸다. 하지만 물을 제대로 섭취하지 못함으로 인해 풍선처럼 부는 현상이 발생하곤 한다.. (주변에서 물을 챙겨주고 있긴 하지만 날씨때문에 물이 얼어버린다.)※ 참고 : 고양이의 겨울나기(웹툰) [클릭] 오랜만의 일기를 통해 고양이들의 근황을 소개하고자 한다. 치즈치즈는 언제나 잘 지내고 있다. 매일 가보면 잘 먹고 잘 산다.......]]></description>
					<pubDate>Thu, 24 Jan 2019 14:51:47 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : 구글 연동 로그인 API [Gem : omniauth-google-oauth2]]]></title>
					<link>https://blog.naver.com/kbs4674/221446902191</link>
					<guid>https://blog.naver.com/kbs4674/221446902191</guid>
					<description><![CDATA[부록 같이 봐두면 좋은 자료- 네이버 아이디 로그인 [클릭]- 페이스북 아이디 로그인 [클릭] 별도의 회원정보 기록 없이, 버튼 하나만 누르면 바로 해당 사이트에 가입과 동시에 로그인이 되게하는 'Google 계정 연동 로그인'에 대해 소개하고자 합니다.참고로 이번에 소개드릴 방법은 이미 수동적으로 회원가입이 진행되어 있어도, 구글 연동 로그인을 할 때 페이스북 아이디와 기존 Devise에 가입된 아이디와 맞는게 있을 시 동일하게 연계되어 회원활동이 가능합니다. 참고 1. Gem : devise를 이미 사용하고 있다는 가정하에 이 글을 작성합니다! [ devise Gem 설치법 클릭 ] 2. 예약된 시간에 따라 자동으로 일처리를 하는 whenever Gem이 선.......]]></description>
					<pubDate>Mon, 21 Jan 2019 00:17:38 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : 페이스북 연동 로그인 API [Gem : omniauth-facebook]]]></title>
					<link>https://blog.naver.com/kbs4674/221446312846</link>
					<guid>https://blog.naver.com/kbs4674/221446312846</guid>
					<description><![CDATA[부록 같이 봐두면 좋은 자료- 네이버 아이디 로그인 [클릭]- 구글 연동 로그인 [클릭] 별도의 회원정보 기록 없이, 버튼 하나만 누르면 바로 해당 사이트에 가입과 동시에 로그인이 되게하는 '페이스북 계정 연동 로그인'에 대해 소개하고자 합니다.참고로 이번에 소개드릴 방법은 이미 수동적으로 회원가입이 진행되어 있어도, 페이스북 연동 로그인을 할 때 페이스북 아이디와 기존 Devise에 가입된 아이디와 맞는게 있을 시 동일하게 연계되어 회원활동이 가능합니다. 참고 1. 페이스북 아이디 로그인을 사용할 홈페이지가 https 도메인을 반드시 사용해야 합니다. (페이스북 정책) * CloudFlare을 통한 https는 API 작동이 안됩니다. 2. Gem .......]]></description>
					<pubDate>Sun, 20 Jan 2019 02:39:51 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Heroku : 네임서버를 이용한 커스텀 도메인 지정 및 도메인 SSL 적용 (CloudFlare)]]></title>
					<link>https://blog.naver.com/kbs4674/221446015988</link>
					<guid>https://blog.naver.com/kbs4674/221446015988</guid>
					<description><![CDATA[참고 1. C9 기준으로 터미널 작업이 이루어집니다. 2. 헤로쿠-도메인 연동 설정에 있어 도메인은 호스팅케이알[클릭] 회사 기준으로 설명합니다. 3. 호스팅케이알 에서 도메인 구매과정은 생략합니다. 4. DNS 연동에 있어 CloudFlare이 사용될 예정인데, CloudFlare의 회원가입 과정은 생략합니다. 알아두면 좋은 Heroku 관련자료1. Heroku 커스텀 도메인 지정(포워딩 기법) [클릭]2. Heroku에 자신의 Ruby on Rails 프로젝트를 올리는 법 [클릭]3. 항상 깨어있는 서버 유지 [클릭] 이번 글에서는 Heroku와의 도메인을 연동할 때 과거 포워딩 방식과는 다르게 CNAME 연동을 통한 방식으로 설명을 하겠습니다. 참고 1. 포워딩 방식 : A 주소(×××.c.......]]></description>
					<pubDate>Sat, 19 Jan 2019 17:25:16 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[AWS]]></category>
					<title><![CDATA[AWS : AWS EC2에 이더리움 Geth서버 설치]]></title>
					<link>https://blog.naver.com/kbs4674/221425491576</link>
					<guid>https://blog.naver.com/kbs4674/221425491576</guid>
					<description><![CDATA[이번에 블록체인 해커톤에서 개발을 진행하면서 Geth서버를 돌릴 때, 쉬운 방법으로서는 로컬로 돌리는 방법도 있었지만, 외부에서도 접근이 가능할 수 있는 AWS EC2 연동방식을 채택하게 되었습니다.초반에는 Geth서버를 돌리는데에 있어 구름IDE 채택을 할려 했는데 이번에 저희가 프로젝트를 진행하면서 구름IDE가 막혔는지 계속 CPU가 뻑나는 문제가 있더라구요.. 게다가 AWS EC2에 Geth 설치법을 설명한 글이 제대로된게 없어서 이번 포스팅을 통해 기여를 하고자 합니다. AWS EC2 설정1. AWS EC2 한국서버 DashBoard로 갑니다.2. 새로운 EC2 인스턴스를 생성해 주세요. 1) EC2 인스턴스 설정 (단계 1) : Ubuntu OS를 선택합니다. (Ubuntu S.......]]></description>
					<pubDate>Sun, 23 Dec 2018 16:46:14 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : 여러가지 메소드]]></title>
					<link>https://blog.naver.com/kbs4674/221420285631</link>
					<guid>https://blog.naver.com/kbs4674/221420285631</guid>
					<description><![CDATA[Ruby on Rails에는 여느 프로그래밍 언어와 마찬가지로 기본적인 메소드가 존재합니다. 이번 글에서는 다양하게 쓰이는 메소드 중, 많이 활용되어 쓰이는 메소드에 대해 소개드리겠습니다. Ruby on Rails : 메소드 Post라는 게시판 모델에 13개의 데이터를 예시로 설명하겠습니다. 1) all누구나 개발을 하면서 제일 많이 쓰는 메소드일 겁니다. 모든 DB를 보여주는 메소드 입니다. 1234&lt;%= Post.all.each do |x| %&gt; &lt;%= x.title %&gt; &lt;hr/&gt;&lt;% end %&gt; 2) first(n)제가 개발을 하면서 제일 많이 쓴 메소드입니다. 첫 구절 DB부터 몇 번 째 까지 보여줄 것인지 정합니다. 1234&lt;%= Post.first(3).each do |x| %&gt; &lt;%= .......]]></description>
					<pubDate>Sun, 16 Dec 2018 14:35:47 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[나른한 하루]]></category>
					<title><![CDATA[늦었지만 ruby on rails 연사 썰 푸는 이야기]]></title>
					<link>https://blog.naver.com/kbs4674/221420122659</link>
					<guid>https://blog.naver.com/kbs4674/221420122659</guid>
					<description><![CDATA[그동안 많은 일들이 있어서 개인적인 이야기를 써내지 못했었네요..이번에는 제 인생에 있어 뜻깊었던 이야기를 풀어보고자 합니다. 지금으로부터 약 1달 전, 11월 17일에 멋쟁이 사자처럼 학생들을 대상으로 세미나가 진행되었었습니다.사실 저도 이 세미나 참여를 그냥 '설마 연사자로 뽑힐까' 하는 마음으로 그냥 무심코 지원했다가 덜컥 붙어버려서 저도 놀랐습니다.그리고 막상 뽑혔을 때 저 빼고 다들 이미 현업에 종사하고 계신 분들이라서 '잘 할 수 있을까' 하는 부담도..ㅋㅋ 세미나 연사를 지원하게 된 계기가 제가 1년동안 ruby on rails를 공부하면서 이리저리 고생했던 공부법 소개를 하고,절대 저처럼 살지말고 편하게 공부할 수.......]]></description>
					<pubDate>Sun, 16 Dec 2018 05:44:54 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : AWS RDS 서버 연동 (PostgreSQL 기반)]]></title>
					<link>https://blog.naver.com/kbs4674/221420109694</link>
					<guid>https://blog.naver.com/kbs4674/221420109694</guid>
					<description><![CDATA[시작 전 유의사항(종합) 1. AWS 계정이 이미 있다는 가정 하에 설명합니다. 2. PostgreSQL v9.5.15 사용을 기반으로 설명하겠습니다. 3. Ruby on Rails 및 AWS의 기본지식을 가지고 시작하시는게 좋을겁니다. 4. 레일즈 환경은 Production Mode를 중점으로 설명하겠습니다. 5. Figaro Gem을 활용합니다. 자세한 설명은 생략합니다. ※ 참고 : Figaro Gem [클릭] 6. Window OS 기준으로 설명합니다. 그동안 Ruby on Rails에서는 데이터 보관에 있어서 로컬서버에 저장하는 방식으로 이용되어왔습니다. ▲ Ruby on Rails 프로젝트 내에 있는 DB(db/development.sqlite3) 이번 시간에는 해당 DB를 로컬저장 방식이 아닌 AWS를 이용한 RDS 저장방식을.......]]></description>
					<pubDate>Sun, 16 Dec 2018 04:02:28 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[고양이 일기]]></category>
					<title><![CDATA[백설기의 뒹굴이]]></title>
					<link>https://blog.naver.com/kbs4674/221417939356</link>
					<guid>https://blog.naver.com/kbs4674/221417939356</guid>
					<description><![CDATA[(사실 캣잎에 취해서 저런거다만.. 귀여워서 ㅠ)]]></description>
					<pubDate>Wed, 12 Dec 2018 20:10:02 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[나른한 하루]]></category>
					<title><![CDATA[메이플스토리 핑크빈이 대학을 찾아간다!]]></title>
					<link>https://blog.naver.com/kbs4674/221411202335</link>
					<guid>https://blog.naver.com/kbs4674/221411202335</guid>
					<description><![CDATA[블로그는 BGM과 함께 ^~^https://maplestory.nexon.com/News/Event/26오늘부터 핑크빈이 전국을 도라다니며 대학생들에게 커피를 나눠주는 행사가 시작되었습니다!핑크빈은 초창기 때는 메이플계에 있어서 보스몹 1순위로 뽑혔던 몬스터였는데,요즘은.. 거의 자쿰 신세라는 얘기가 쿨럭..아무튼 핑크빈이 오늘부터 직접 학교에 대학탐방을 시작하게 되었습니다!제가 갔을 때는 아직 수업이 한창 진행되는 11시인것도 있고, 이날 비가 조금 와서 그런지 사람이 많이 안보였습니다!해당 장소에 가면 핑크빈이 현수막으로 맞이해주고이렇게 커피도 준비되어 있었습니다.총학에서 통제를 해준 덕분에 사람들도 질서정연하게 줄을 지켜가며 커피를.......]]></description>
					<pubDate>Mon, 03 Dec 2018 11:41:49 +0900</pubDate>
					<tag><![CDATA[메이플스토리,메이플,Maplestory,핑크빈,대학]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[고양이 일기]]></category>
					<title><![CDATA[턱시도 & 고등어]]></title>
					<link>https://blog.naver.com/kbs4674/221410927145</link>
					<guid>https://blog.naver.com/kbs4674/221410927145</guid>
					<description><![CDATA[밤에 학교 기숙사에 도착했을 때, 오랜만에 턱시도 고양이를 만나게 되었다. 이 애는 과거에 한번 언급을 했던 고양이이다.※ 참고 : https://blog.naver.com/kbs4674/221397850929 여전히 사람을 무서워 하긴 하나, 그래도 먹이가 있으면 더듬더듬 고민을 하다 결국 유혹을 못 이기고 다가오는 녀석이다. " 냠냠 " 츄르는 언제나 옳다.. 한 녀석에게 츄르를 주니, 몇 마리의 무리들이 점점 내 곁으로 모이게 되었다.내 주위로 사방에 퍼져있어서 모두가 함께 있는 모습을 담은 사진을 찍진 못했으나, 그 중 고등어 냥이를 건지게 되었다. 일단 다른 냥이들 역시 사람과의 접근을 기피하는 고양이들이었다.그런데 사람은 싫은데 먹이를 먹고싶어.......]]></description>
					<pubDate>Sun, 02 Dec 2018 23:02:14 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[고양이 일기]]></category>
					<title><![CDATA[고냥이 식사타임]]></title>
					<link>https://blog.naver.com/kbs4674/221410917626</link>
					<guid>https://blog.naver.com/kbs4674/221410917626</guid>
					<description><![CDATA[평화로운 아침,여기 고양이가 한마리 있다. 몇 분 동안 느지막히 바라만보다가,이제야 인기척을 느꼈는지 스르르 눈에 뜬다. 그리고, 이제는 반대로 고양이가 나를 응시한다.허허.. 잠을 방해한 것 같은데.. 평소에 가방에 츄르를 넣고다니던 나는 '잠도 깼는데 간식 줘야지' 하고 츄르를 꺼내고, 츄르에 손가락을 튕기며 시선을 집중시키려 하는데.. " 먀? " 엥.. 형이 거기서 왜 나와.. 잠자던 고양이는 고양이 집 위에서 자고있었는데고양이집에서 갑자기 고양이가 튀어나왔다.. 그리고 고양이 집에 기대어있던 넉가래에서도 갑자기 고양이들이 튀어나왔다..!!와.. 이 때 진심 깜짝놀람;.. 진짜 어느순간 이렇게 모였다...(여기에 찍힌애들 말.......]]></description>
					<pubDate>Sun, 02 Dec 2018 22:47:12 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Heroku : 항상 깨어있는 서버(Wake Up)로 유지]]></title>
					<link>https://blog.naver.com/kbs4674/221406115523</link>
					<guid>https://blog.naver.com/kbs4674/221406115523</guid>
					<description><![CDATA[알아두면 좋은 Heroku 관련자료1. Heroku 커스텀 도메인 지정(포워딩 기법) [클릭]2. Heroku에 자신의 Ruby on Rails 프로젝트를 올리는 법 [클릭] http://herokuapp.com Heroku는 Ruby on Rails 언어 기반 서버를 지원해주는 몇 안되는 서버업체 중 하나입니다.Ruby on Rails 기반으로 작품을 만들어내고, 무료로 부담없이 서버에 Deploy를 하고싶을 때 많이 이용해보셨을 서비스이기도 한데요, ▲ zzz... 잠에 든 서버 (plant5) 다만 Heroku의 단점은 30분 동안 홈페이지에 방문자가 없을 시 서버가 잠든다는 단점이 있습니다. 참고 서버가 잠든 상태에서 다시 접속이 시도되면, 약 15초 동안 서버가 재 가동되는 딜레이가 발생합니다. 참고 해.......]]></description>
					<pubDate>Mon, 26 Nov 2018 02:32:25 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[고양이 일기]]></category>
					<title><![CDATA[첫 눈과 고양이]]></title>
					<link>https://blog.naver.com/kbs4674/221405735762</link>
					<guid>https://blog.naver.com/kbs4674/221405735762</guid>
					<description><![CDATA[어제 춘천은 유난히 눈이 많이 내렸다.사실 이 날 당일에는 춘천에 없어서 잘 몰랐는데, 밤 늦게 울산에서 춘천에 오고나니 그 때서야 실감을 하게 되었다. 학교에 가까워질 수록 사람들이 만들어놓은 눈사람들의 향연이 이어져갔다. 학교에 도착하고 나서도 어김없이 냥이들을 챙기는건 잊지 않았다.냥이들의 아지트에 가니 웬 일로 모두가(3마리) 한 지붕 아래에서 사이좋게 지내고 있었다. 아무래도 날씨가 추워진 탓이 컸겠지.. "냐옹" 그의 미묘에 반해오늘도 나는 어김없이 츄르를 뜯는다..]]></description>
					<pubDate>Sun, 25 Nov 2018 13:56:06 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[고양이 일기]]></category>
					<title><![CDATA[세수하러 왔다가]]></title>
					<link>https://blog.naver.com/kbs4674/221397850929</link>
					<guid>https://blog.naver.com/kbs4674/221397850929</guid>
					<description><![CDATA[물만 먹고 가지요 ~~Feat. 기숙사 거주 냥이들 보너스 : 휴식하는 냥이들]]></description>
					<pubDate>Tue, 13 Nov 2018 22:13:18 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : 해시태그]]></title>
					<link>https://blog.naver.com/kbs4674/221396166787</link>
					<guid>https://blog.naver.com/kbs4674/221396166787</guid>
					<description><![CDATA[SNS, 네이버 등에서 블로그 포스팅, 카페 등 보면 다음과같이 해시태그가 적혀있는것을 보실 수 있습니다.그리고 해시태그를 클릭하면 해당 태그가 적힌 모든 게시물들을 확인할 수 있고요. 이번 시간에는 이를 레일즈에 적용시켜보겠습니다. 해시태그 1. 일단 게시판이 될 Post Scaffold를 만듭니다.1rails g scaffold Post title:string content:text 2. 태그를 저장할 모델을 만듭니다.1rails g model Tag name:string 3. 모든 게시글에 작성된 해시태그가 모아지고, 허브가 될 DB를 설치합니다.1rails g migration CreatePostsTags post:references tag:references 4. 3번과정에서 만들어진 DB파일로 이동하셔서 내용을 살짝 수정을 합니다.(.......]]></description>
					<pubDate>Sun, 11 Nov 2018 14:29:56 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : 이메일 전송 [Gem : mailgun_rails]]]></title>
					<link>https://blog.naver.com/kbs4674/221386948816</link>
					<guid>https://blog.naver.com/kbs4674/221386948816</guid>
					<description><![CDATA[Scaffold 게시판에서 게시글을 작성 시, 작성과 동시에 이메일이 발송되게 하는 법에 대해 알아보겠습니다. 참고 1. AWS에서는 잘 작동하나. Heroku에서는 제대로 작동이 안되는 이슈가 있습니다. 부록 devise를 활용한 이메일 인증 [클릭] Chapter 1 Gem 사용을 위한 준비 : Mailgun 사이트 회원가입 " https://app.mailgun.com/ " 1. Mailgun을 사용하기 위해 위 URL 사이트를 가입합니다. 참고 Mailgun 회원가입 때 카드 정보를 입력하면 하루 메일 사용량을 10000건으로 늘려줍니다. 2. 회원가입 후, 어떤 옵션의 구성을 쓸건지 물어보는데 무료로 쓸거라면 Concept Plan 을 클릭해주세요. 3. 가입당시 입력한 이메일 함으로 이동 후, 이메일.......]]></description>
					<pubDate>Mon, 29 Oct 2018 02:13:30 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : 실시간(비동기) 게시글 작성 Pusher [Gem : Pusher]]]></title>
					<link>https://blog.naver.com/kbs4674/221384445754</link>
					<guid>https://blog.naver.com/kbs4674/221384445754</guid>
					<description><![CDATA[웹페이지에서 보통 일반적으로 새 글이 올라왔을 때 글을 확인하는 방법은 새로고침(F5)을 통해서 봐야 합니다.실시간적으로 보는방법같은 경우는 보통 웹소켓을 통한 지원이 이루어지는 비동기 방식이어야 하며, 이를 초보자가 손수 코드로 짜기에는 어렵습니다.이번에는 손쉽게 비동기 방식을 쓸 수 있도록 지원하는 Pusher Gem에 대해 소개하고자 합니다. Chapter 1 실시간(비동기) 게시글 작성 Pusher 준비 " https://dashboard.pusher.com " 1. 위 URL의 사이트에 가서 가입을 합니다. 2. Pusher 잼 관리창 하단 혹은 좌측 메뉴에 보면 보이는 Create New App 버튼을 클릭합니다. 3. Pusher Channel(소켓)에 대한 간단한 설정을 합니다. 4. .......]]></description>
					<pubDate>Thu, 25 Oct 2018 01:38:50 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[AWS]]></category>
					<title><![CDATA[AWS : Route53을 이용한 Heroku 도메인 설정 (포워딩)]]></title>
					<link>https://blog.naver.com/kbs4674/221384347000</link>
					<guid>https://blog.naver.com/kbs4674/221384347000</guid>
					<description><![CDATA[알아두면 좋은 Heroku 관련자료1. Heroku : 네임서버를 이용한 커스텀 도메인 지정 및 도메인 SSL 적용 (CloudFlare) [클릭]2. Heroku에 자신의 Ruby on Rails 프로젝트를 올리는 법 [클릭]3. 항상 깨어있는 서버 유지 [클릭] 헤로쿠(PaaS 서비스)는 타 호스트와는 다르게 DNS가 고정적이지 않다는 문제점이 있습니다. 그렇다보니 IP를 기반으로 페이지를 이동시키는 A 레코드 사용이 제한이 됩니다.아쉽지만 이 문제점을 보완하고, 이용을 하고자 AWS에서 구매한 도메인(Route 53)을 이용해서 Heroku 서버의 도메인에 포워딩 방식을 통해 연동하는 방법에 대해 소개합니다.※ 원리 : http://knu대동제.com 링크를 입력 후 이동 시 → http://fes.......]]></description>
					<pubDate>Wed, 24 Oct 2018 22:24:43 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[고양이 일기]]></category>
					<title><![CDATA[흰냥이와 껌냥이]]></title>
					<link>https://blog.naver.com/kbs4674/221384074476</link>
					<guid>https://blog.naver.com/kbs4674/221384074476</guid>
					<description><![CDATA[세삼 바둑알을 보는 느낌..껌냥이는 사람에게 친근한 냥이이나, 흰냥이는 사람에게 조심성을 가지는 고양이 ㅠㅠ]]></description>
					<pubDate>Wed, 24 Oct 2018 15:38:09 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : 다음 카카오 지도 API 연동]]></title>
					<link>https://blog.naver.com/kbs4674/221381753132</link>
					<guid>https://blog.naver.com/kbs4674/221381753132</guid>
					<description><![CDATA[다음지도 API에서 자동으로 알아낸 후, 좌표값의 정보가 담긴 Scaffold 게시글을 등록하면 메인 홈페이지 등에 보여지는 지도에 모든 좌표가 보여지게 하는 원리의 지도를 소개하고자 합니다. Chapter 1 다음 카카오 지도 API 준비단계 " https://developers.kakao.com/apps "1. 다음 카카오 개발자센터[클릭]로 가서 로그인 혹은 회원가입을 진행합니다.처음 시작하시는 분이라면 좌측메뉴에 보이는 '앱 만들기' 버튼을 클릭해서 새로운 앱을 만들어주세요. 2. 자신의 앱에 들어간 후, 좌측메뉴에 보이는 메뉴에서 설정 - 일반 에 가신 뒤,Javascript API Key를 획득합니다. 3. 이어서 바로 아래에 보이는 '플랫폼' 탭에서 새 플랫폼(웹)을 추가.......]]></description>
					<pubDate>Sun, 21 Oct 2018 05:21:31 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[레일즈/Ruby on Rails : Scaffold를 이용한 카테고리 게시판 제작]]></title>
					<link>https://blog.naver.com/kbs4674/221380526245</link>
					<guid>https://blog.naver.com/kbs4674/221380526245</guid>
					<description><![CDATA[기존의 게시판을 만드는 기본적인 방법으로서 Scaffold가 있습니다. 그런데 만약에 2개 이상의 게시판을 만들어 낼 때,과연 Scaffold를 일일이 사용하는게 효율적일까요?Scaffold를 2개 이상까지는 뭐 어찌어찌 한다 하더라도, 3개 이상 부터는 관리에 있어 많은 손이 오갈 것 입니다.(예 : 똑같은 디자인 View에 대해 전부 수정해야 할 때) 이번 시간에는 Scaffold 속에 Scaffold를 또 만드는 식으로 해서 카테고리형 게시판을 만드는 방법을 소개하고자 합니다. 저희가 완성하게 될 대략적인 조감도는 위와 같습니다. 2중 Scaffold를 이용한 카테고리형 게시판 제작1. 다음 명령어를 터미널에 입력해서 posts라는 이름의 scaffold를 생성합니다.......]]></description>
					<pubDate>Fri, 19 Oct 2018 02:58:10 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[Ruby on Rails : Gem을 이용하지 않은 간단한 검색창 구현]]></title>
					<link>https://blog.naver.com/kbs4674/221379111562</link>
					<guid>https://blog.naver.com/kbs4674/221379111562</guid>
					<description><![CDATA[사실 레일즈에서도 검색엔진 관련 Gem이 존재하긴 합니다.그런데 문제는 이러한 검색엔진들이 영어를 기반으로 제작되었다 보니 한글에는 최적화 되어있지 않습니다.즉, 형태소 분석이 뛰어나질 않습니다. 기존의 검색엔진 Gem 문제점 : 형태소 분석 취약 1. '안녕하세요!' 제목의 게시글을 검색 시, '안녕' 만 검색해서는 검색이 안됨.2. '안녕하세요' 역시 검색이 안됨.3. '안녕하세요!' 라고 검색을 해야 비로소 검색이 됨. 이번에 그래서 저는 간단하게 검색창을 구현을 해봤습니다. 번외 검색엔진 Gem1. Sunspot [클릭]2. ElasticSearch [클릭] 참고 위 검색엔진들은 더 복잡한 기술을 가지고 있으면서도, '한글' 검색에 특화되지 않았습니.......]]></description>
					<pubDate>Wed, 17 Oct 2018 03:33:01 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[오픈클래스 : 유니티]]></category>
					<title><![CDATA[오픈클래스 : 유니티 12일차 강연]]></title>
					<link>https://blog.naver.com/kbs4674/221375593670</link>
					<guid>https://blog.naver.com/kbs4674/221375593670</guid>
					<description><![CDATA[유니티 스터디 영상자료 코드 작동 순서 변경 모든 스크립트 간에는 작동순서가 있어서 작동이 안될 수 있다. Edit &gt; Project Settings &gt; Script Execution Order 에 가서 Script 작동 순서를 바꾸면 된다. Tween (혹은 Easing) : 오브젝트 움직임 제어3개의 유명한 유니티용 Tween 엔진· iTween + iTween Visual Editor &lt;&lt; 사용에 있어 복잡하단 단점이 있음.· DoTween &lt;&lt; 성능 퍼포먼스 1등, 함수 사용에 있어 간편· LeanTween &lt;&lt; 트윈은 움직임에 대해서만 역할을 담당하지 기록에 대해선 담당을 하지 않음, LeanTween이 해당 이슈에 있어 적절 Tween으로 할 수 있는 것· 카메라 워크· 특별한 연출· 움직임에 대한 특.......]]></description>
					<pubDate>Thu, 11 Oct 2018 18:27:39 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[오픈클래스 : 유니티]]></category>
					<title><![CDATA[오픈클래스 : 유니티 11일차 강연]]></title>
					<link>https://blog.naver.com/kbs4674/221371037546</link>
					<guid>https://blog.naver.com/kbs4674/221371037546</guid>
					<description><![CDATA[유니티 스터디 영상자료 지형 이펙트 : 안개 적용1. 유니티 상단메뉴에서 Windows - Lighting - Settings 이동한다. 참고 Unity 2018.2.1f1 버전에는 Window-Rendering-Lighting Setting 메뉴로 가면 됨. 2. Settings 메뉴로 이동 후, Other Settings 탭에 가서 아래 그림과 같이 적용해본다. 참고 Fog Mode 설명Linera : FAKE 안개틱Exponential Squared : 실사적인 안개 효과Start : 시작 거리End : 끝 거리 그런데 불구하고 하늘 부분이 안개가 적용되진 않는다. 참고 유니티의 순수 안개는 하늘에는 적용되진 않는다.최대한 자연스럽게 보여지도록 우회하는 방법으로서는 하늘이랑 안개랑 비슷한 색깔로 적용시키면 된다. 여담 원래 게임에서.......]]></description>
					<pubDate>Thu, 04 Oct 2018 18:52:37 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[고양이 일기]]></category>
					<title><![CDATA[휴식]]></title>
					<link>https://blog.naver.com/kbs4674/221367526895</link>
					<guid>https://blog.naver.com/kbs4674/221367526895</guid>
					<description><![CDATA[마음 뿌듯..]]></description>
					<pubDate>Sat, 29 Sep 2018 10:12:20 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Github]]></category>
					<title><![CDATA[Github : git 캐시 삭제 (.gitignore 적용 안될 시)]]></title>
					<link>https://blog.naver.com/kbs4674/221367354303</link>
					<guid>https://blog.naver.com/kbs4674/221367354303</guid>
					<description><![CDATA[중간에 .gitignore에 내용을 추가할게 있어서 .gitignore에 새로운 내용을 넣고, Github에 Push를 했는데Commit 기록에 계속 남아있는(.gitignore의 내용이 적용이 안되는) 문제가 발생했었습니다.이는 .gitignore은 과거의 기억만을 가지고 있을 뿐, 현재의 기억은 제대로 적용이 안되어 있어서 발생하는 이른바 캐싱 문제입니다. 참고 .gitignore의 개념 이를 해결하는 방법은 Github에 캐싱된 내역들을 삭제하는 것입니다.명령어는 간단합니다. 1git rm -r --cached .위 명령어를 입력해주신 뒤, 수정된 .gitignore에 대해 commit 후, push를 해주면 .gitignore의 내용이 반영이 됩니다.]]></description>
					<pubDate>Fri, 28 Sep 2018 23:04:27 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[레일즈/Ruby on Rails : 그래프 차트 [Gem : chartkick]]]></title>
					<link>https://blog.naver.com/kbs4674/221363828837</link>
					<guid>https://blog.naver.com/kbs4674/221363828837</guid>
					<description><![CDATA[이번에 대동제 축제 사이트를 구축하면서 저희는 사이트 내에 특별한 장치를 해뒀습니다.사람들이 얼마나 왔고, 어떠한 경로를 통해 저희 사이트를 접근을 했는지 카운팅을 해왔습니다. Tip 방문자수 카운팅에는 조회수 표출에 사용되는 Impression Gem을 활용했습니다. 그런데 재밌는 것은 Impression Gem 기능 중, 유저가 조회수를 올림과 동시에 방문경로를 기록하는 기능이 존재합니다.이 전 사이트에 대한 기록은 Impression 모델의 referrer 컬럼이 담당합니다. 부록 Impression Gem [클릭] 그리고 카운팅을 마치고, 데이터 도식화에 대한 필요가 생기게 되어 그래프 Gem을 사용하기로 했습니다. 차트 Gem : chartkick 참고 1. ChartContro.......]]></description>
					<pubDate>Sat, 22 Sep 2018 02:39:38 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[Ruby&#160;on&#160;Rails]]></category>
					<title><![CDATA[레일즈/Ruby on Rails : X-Frame-Options 제한 해제]]></title>
					<link>https://blog.naver.com/kbs4674/221363674159</link>
					<guid>https://blog.naver.com/kbs4674/221363674159</guid>
					<description><![CDATA[X-Frame-Options요즘 웹사이트에서는 보안 취약성을 방지하고자 iframe 소스를 막고있는 추세입니다. (대표적으로 네이버에서 iframe은 유투브 외엔 비허용)레일즈 역시 iframe을 막는 소스가 기본적으로 존재합니다. https://www.wikplayer.com/ 이번에 홈페이지에 배경음악을 넣는 작업을 하는데, 갑자기 홈페이지에 아무것도 안보여지는 문제가 생겼습니다. ▲ 참고로 C9에서는 정상적으로 보여졌고, AWS 서버에서 위와같은 문제 발생 왜그런가 하고 F12 개발자도구를 띄어놓고 오류를 검사해보니, 눈에 띄는 에러가 보였습니다.X-Frame-Options 라 해서 나중에 알아보니 iframe 태그를 막는 기능이라 하더라고요. 처음에는 답변들 대부분이 서.......]]></description>
					<pubDate>Fri, 21 Sep 2018 20:25:39 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[오픈클래스 : 유니티]]></category>
					<title><![CDATA[오픈클래스 : 유니티 10일차 강연]]></title>
					<link>https://blog.naver.com/kbs4674/221362955911</link>
					<guid>https://blog.naver.com/kbs4674/221362955911</guid>
					<description><![CDATA[유니티 스터디 영상자료 Player Animation : Mecanim 구현- 인간형 캐릭터만 가능- 상태 전이(모션제어)- IK 구현 등 (계단을 오를 때 다리를 계단 높이에 맞게 오므린다, 벽에 손이 뚫리지 않고, 손을 짚는다 등) Rig 설정※ 참고1. Generic : 모두가 생각이 일치하지 않는 것 (사람이 아니 것)2. Humanoid : 사람 형태 1. Project 에서 Player &gt; Models &gt; Player 오브젝트 클릭 Player 오브젝트를 클릭 후, Inspector에서 Rig의 Animation Type이 Generic인지 확인 2.1번 과정에 이어서, Inspector에서 바로 보이는 Animation으로 이동 후, Jump, Damage 클립 추가 및 기본적으로 움직이는 것, 가만히 있는 상태에 대해선 계속 반복적인.......]]></description>
					<pubDate>Thu, 20 Sep 2018 18:59:57 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[나른한 하루]]></category>
					<title><![CDATA[멋쟁이 사자처럼 : 대학교 축제사이트 제작 썰]]></title>
					<link>https://blog.naver.com/kbs4674/221362456941</link>
					<guid>https://blog.naver.com/kbs4674/221362456941</guid>
					<description><![CDATA[멋쟁이사자처럼 6기 통과의례 과제 중 하나였던 대학 축제 사이트 개발의 막이 내리고 라이브 서비스를 하기 시작했습니다. 강원대학교 대동제 축제사이트 : 머동머동제 http://knu대동제.com 이번 사이트의 주제는 '귀요미'를 주제로 제작이 되었으며, 총 10명이서 개발을 하게 되었습니다.진짜 이 사이트 개발을 위해 10명의 개발자들이 약 1주일동안 밤을 지새며 개발한걸 생각하면 눈물이 앞을 가립니다 흙흙.. ▲ 초기 프로토타입 개발사이트 사실 원래는 초기 프로토타입으로서, '네온 사인'을 주제로 하여 사이트를 개발하려던게 있긴 했습니다.그런데 홈페이지 방문객 간의 커뮤니케이션 부족 등의 이유로 약 축제 3-4일 전에 갈아엎는걸.......]]></description>
					<pubDate>Thu, 20 Sep 2018 01:56:32 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[AWS]]></category>
					<title><![CDATA[AWS : 아마존 도메인 구입 및 적용법]]></title>
					<link>https://blog.naver.com/kbs4674/221360622054</link>
					<guid>https://blog.naver.com/kbs4674/221360622054</guid>
					<description><![CDATA[AWS : 아마존 도메인 구입 및 적용법 참고 1. 연결하고자 하는 AWS EC2가 탄력적 IP랑 반드시 연동되어 있어야 합니다. ※ 참고 : 탄력적 IP 설정법 [클릭] 참고 외부 도메인 연동법 [클릭] 외부 도메인 연동이 아닌 아마존에서 직접 도메인을 구입 후, 내부에서 연동하는 방법에 대해 소개하겠습니다. 1. Route 53 서비스로 이동 후, Register domain form에서 도메인 구매를 위해 구매하고자 하는 도메인을 입력하고, check 합니다. 참고 한글 도메인을 쓰실 분은 언어 선택란에 Korean을 선택해주세요. 참고 개인적인 경험상 한글 도메인은 비추천 드립니다. 홈페이지 주소 입력 시 한글이 인코딩에 깨져서 보여지는 단점이 있습니다.http://k.......]]></description>
					<pubDate>Mon, 17 Sep 2018 14:23:54 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
				<item>
					<author>kbs4674</author>
					<category><![CDATA[AWS]]></category>
					<title><![CDATA[AWS : 외부 도메인 적용법]]></title>
					<link>https://blog.naver.com/kbs4674/221360336074</link>
					<guid>https://blog.naver.com/kbs4674/221360336074</guid>
					<description><![CDATA[AWS : 외부 도메인 적용법 참고 1. 타 기관은 호스팅케이알(https://www.hosting.kr/) 업체 도메인을 기준으로 합니다. 2. 연결하고자 하는 AWS EC2가 탄력적 IP랑 반드시 연동되어 있어야 합니다. ※ 참고 : 탄력적 IP 설정법 [클릭] 참고 아마존 도메인 구입 및 적용법 [클릭] 1. 호스팅업체(타 기관)에서 도메인을 구매합니다. 2. AWS로 가신 후, Route53(https://console.aws.amazon.com/route53/home) 대시보드로 이동합니다. Route53 대시보드를 보시면 위와같이 화면이 보여질테고그 중, DNS management가 보일텐데, Create hosted zone을 클릭합니다. 2. 계속해서 Create Hosted Zone을 클릭해주세요. 3. Create Hosted Zone을 클릭하면.......]]></description>
					<pubDate>Mon, 17 Sep 2018 01:54:39 +0900</pubDate>
					<tag><![CDATA[]]></tag>
					<activity:verb>http://activitystrea.ms/schema/1.0/post</activity:verb>
					<activity:object-type>http://activitystrea.ms/schema/1.0/blog-entry</activity:object-type>
				</item>
			
		
		
	
</channel>
</rss>
