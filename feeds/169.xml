<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
<channel>
<title>Duck Programming</title>
<link>https://haviyj.tistory.com/</link>
<description>프로그래밍을 잘하고 싶어서 만든 블로그</description>
<language>ko</language>
<pubDate>Tue, 14 May 2019 11:06:52 +0900</pubDate>
<generator>TISTORY</generator>
<managingEditor>Havi</managingEditor>
<image>
<title>Duck Programming</title>
<url>https://tistory1.daumcdn.net/tistory/2339757/attach/ff88df341d1840088ca1bc1eaf4316bc</url>
<link>https://haviyj.tistory.com</link>
<description>프로그래밍을 잘하고 싶어서 만든 블로그</description>
</image>
<item>
<title>2018년 회고</title>
<link>https://haviyj.tistory.com/42</link>
<description>&lt;h1 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 24px 0px 16px; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); padding-bottom: 0.3em; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;2018 회고&lt;/h1&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;2018년 나는 무엇을 했는가, 회고라는 의미는 과거를 돌아보게 해준다. 참으로 오랜만에 블로그에 글을 올리는 것 같다. 근 1년만에 블로그 글이다. 2018년 회고를 쓰기에 앞서 2017년 회고를 보아하니 나는 1년전에도 똑같은 생각을 하고 있었다. 그리고 그때 다짐했던 마음과 기억들이 새록새록 떠올랐다. &lt;b&gt;‘아, 내가 이래서 회고를 썼었구나’&lt;/b&gt;라는 생각과 10년이 흘러도 이때의 희미한 기억들을 떠올릴 기회는 지금 회고를 쓰는것이구나 라는 생각이 들었다.&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 24px; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); padding-bottom: 0.3em; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;1.책&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:368px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F999EAF395C43232E23A25F&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/999EAF395C43232E23&quot; filemime=&quot;image/jpeg&quot; filename=&quot;115868024_large.jpg&quot; height=&quot;368&quot; width=&quot;368&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;딱 1년만에 ‘처음 배우는 스프링 부트2’를 집필하였다. 나에겐 굉장히 큰 도전이였고 많이 배우고 느꼈다. 책이 나왔을 때는 기쁘면서도 정말 나왔다는게 신기할 정도로 어벙벙하였다. 처음 목표로 했던 ‘초보자도 이해하기 쉬운 방향으로 쓰기’라는 중심축은 지키기 힘들었다. ‘단순히 내가 이해할 정도면 누구나 이해할것이다’ 라는 마인드로는 역부족이였다. &lt;b&gt;내 머리속에 있는것을 쉽게 표현하는 능력, 이해하기 쉬운 어휘와 문장 능력 등이 더 필요했다. &lt;/b&gt;오탈자를 고칠때는 반성을 많이 했다. 처음 쓰는 책이기에 너무 개발자적인 마인드로 접근한게 아닌가라는 생각이 들었다. 오탈자에 집중하기 보다는 내용에 집중하자는 마음가짐이였는데 결과적으로 두개 다 어중간했던것 같다. 1년전에는 집필을 끝내면 뿌듯함만 있을줄 알았는데 아쉬움과 미련이 남는다.&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 24px; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); padding-bottom: 0.3em; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;2.이직&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;개발자로서 3년차에 첫 이직을 했다. 전에 다니던 직장에 딱히 큰 불만은 없었다. 이직을 한 이유는 단지 더 큰 물에 대한 &lt;b&gt;호기심 그리고 성장&lt;/b&gt;이였다. &lt;b&gt;큰 물이라는 것은 경험하지 못한 이라는 뜻이 더 맞겠다.&lt;/b&gt; 경험하지 못한 분야와 성장을 바라고 준비를 하였다. 상반기에는 단순히 이력서를 쓰고 내가 생각하는 IT에서 제일 큰 회사들만 지원하였다. 이때는 단순히 경력직 면접이 어떤지 알아보고 싶은 마음이 컸다. 물론 붙으면 더 좋고, 떨어져도 크게 상관없는 마인드였다. 결과적으로 지원했던 L사, N사, K사 좋은 소식을 들을 수 있었다. 여러 곳에서 좋은 제의가 있었기에 고민을 많이 했다. 결과적으로 ‘&lt;b&gt;LINE&lt;/b&gt;’에 입사하였다.&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:265px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile10.uf.tistory.com%2Fimage%2F99C9FC335C43236623B15F&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99C9FC335C43236623&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ogimage.png&quot; height=&quot;265&quot; width=&quot;265&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;라인에 입사하게 된 가장 큰 이유는 ‘&lt;b&gt;성장&lt;/b&gt;’이였다. 면접때 느꼈던 고수의 향기와 글로벌 회사라는 매력, 내가 경험하지 못한 분야와 다양한 사람들을 만나 성장하고 싶음에 이끌렸다.&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;물론, 처음부터 만족하고 잘 풀린것은 아니었다. 새로운 환경에 적응하는것도 쉽지 않았고 여러 생각에 반신반의 했던 기억이 난다. 하지만, 반년이 지난 지금 돌아보면 내가 생각한 모든 것이 맞았구나라는 생각이 든다. 확실히 입사전/후를 비교하면 &lt;b&gt;나는 성장했다&lt;/b&gt;. 성장의 이유는 여러가지를 꼽을 수 있을것 같다. 글로벌한 일을 해볼 수 있는 기회가 있었다. 내가 맡은 빌링 시스템은 해외 PG사들과 중간 게이트웨이가 되어 결제 수단을 제공하는데 대만, 태국, 일본, 기타 나라들과 긴밀하게 협업해야 한다. (번역기에 의존하는) 미숙한 영어실력이었지만 다른 나라 사람들과 일해보는 경험은 재밌었다. 시퀀스 다이어그램을 보며 복잡한 결제 플로우에 대해 의논해 보는 것도 신선했다. 물론, 해외사람들과 일하는게 좋은 점만 있는건 아니다. 한 번은 대만의 SevenEleven의 바코드 결제를 연동하는데 SOAP 통신만 지원하기에 고생하며 개발했던 경험이 있었다. 결과적으로 SOAP 연동도 완료하였지만 결제 수단으로 들어가지 않았다는 슬픈 이야기로 마무리 되었다...&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 24px; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); padding-bottom: 0.3em; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;3.오픈소스&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;2018년에 목표로 했던 키워드를 생각하니 ‘&lt;b&gt;오픈소스&lt;/b&gt;’가 떠오른다. 오픈소스에 기여하는 것이 새해 목표였었다. 결과적으로 보면 했다. 이 부분은 회사에서의 일이 큰 기회가 되었다. 새로운 프로젝트의 게이트웨이로 Spring-Cloud-Gateway를 도입하여 목표로 하는 기능을 완성시켰다. 성능 테스트까지 끝냈는데 beta로 제공하는 기능에서 성능이 떨어지는 포인트를 잡게 되었다. 신생 프로젝트라 자료가 많지 않아서 일단은&amp;nbsp;&lt;a href=&quot;https://github.com/spring-cloud/spring-cloud-gateway/issues/760&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;이슈&lt;/a&gt;를 올려서 확인을 받으려 했다.&amp;nbsp;&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:558px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile23.uf.tistory.com%2Fimage%2F995DB33D5C433F7C228529&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/995DB33D5C433F7C22&quot; filemime=&quot;image/jpeg&quot; filename=&quot;스크린샷 2019-01-20 오전 12.17.13.png&quot; height=&quot;378&quot; style=&quot;&quot; width=&quot;558&quot;/&gt;&lt;/span&gt;&lt;span style=&quot;font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;&lt;/span&gt;&lt;span style=&quot;font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;이슈를 올리고 보니 내가 직접해결해 보고 싶은 욕심이 생겼다. 해결할 때는 꽤 뿌듯했는데 나중에 보면 정말 별거 아닌거 같은 느낌이 들거 같다. 그래도 내가 사용하는 프레임워크의 내부를 파악하고 기여할 수 있어서 기쁘다. 이런점에서 나는 개발자가 맞나보다.&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 24px; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); padding-bottom: 0.3em; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;4.아쉬웠던 부분&lt;/h2&gt;&lt;p&gt;&lt;/p&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;box-sizing: border-box;&quot;&gt;블로그 글을 쓰지 않은 것. 사실 책을 쓰는것 이외에 글을 쓰고 싶은 욕심이 없었다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;협상의 기술. 기회가 왔는데도 놓쳤다. 아쉽다ㅠㅠ&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;깊이 있는 오픈소스 기여&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;p&gt;&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; margin-top: 24px; line-height: 1.25; border-bottom: 1px solid rgb(234, 236, 239); padding-bottom: 0.3em; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;5.2019년 목표&lt;/h2&gt;&lt;ul style=&quot;list-style-type: disc;&quot;&gt;&lt;li&gt;&lt;p style=&quot;box-sizing: border-box;&quot;&gt;일일 일 &lt;b&gt;운동&lt;/b&gt;이다. 게을러 지지 않겠다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;이직한 &lt;b&gt;회사에서 최선을 다하는 것&lt;/b&gt;. 회사에서 최선을 다하는것만으로 성장한다. 앞으로 진행 될 새로운 프로젝트가 너무 재밌다. 성장의 기회이자 커리어이자 기쁨이 된다. 그래서 좋다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;b&gt;영어 공부&lt;/b&gt;. 지금은 일주일에 한번씩 회화학원을 다니고 있다. 매일 조금씩의 시간이라도 투자해서 놓치지 않게끔 연습하고 싶다. 이건 계획부터..&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;b&gt;오픈소스&lt;/b&gt;. 일이 아닌 이상에야 필요한 간단한 기능, 버그 수정이 한계였던 것 같다. 하나를 잡고 진득히 투자해 보고 싶다.&lt;/p&gt;&lt;/li&gt;&lt;li&gt;&lt;p style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;앞으로 블로그는 정말 간편하게 필요한 내용만 채울 것이다. 글을 쓰는데 시간을 쏟지 않을 것. 그 시간에 &lt;b&gt;코딩력을 기르자.&lt;/b&gt;&lt;/p&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;/div&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;막상 회고를 쓰게 되니 아무 생각없이 앞만 보고 달리다가 구체적으로 어떤 마음으로 어떤걸 하며 살아야 겠다는 생각을 하게된다. 주마다 회고를 하는 분도 봤었는데 꽤 괜찮은 방법인것 같다. 마치 하루하루 명상을 하는 느낌? 왠지, 2019년은 더 재밌을 것 같다.&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://haviyj.tistory.com/42&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>내 생각</category>
<author>Havi</author>
<guid>https://haviyj.tistory.com/42</guid>
<comments>https://haviyj.tistory.com/42#entry42comment</comments>
<pubDate>Sat, 19 Jan 2019 22:20:27 +0900</pubDate>
</item>
<item>
<title>2017년 개발자로 어떻게 살았는가(회고)</title>
<link>https://haviyj.tistory.com/41</link>
<description>&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;주변에서 자신이 지난 1년간 어떠한 일들을 했는지 회고하는 글들을 SNS를 통해 보게되었습니다. 처음에는 회고를 쓰는게 도움이 될까 반신반의하였지만 막상 직접 써보니 느껴지는게 많았던 것 같습니다. 회고를 써서 인터넷상에 공유하는게 남들에게 보여주기 위한 의도도 있겠지만 본래의 의미인 자신을 되돌아봄에 충실하며 써보고자 합니다.(제 개인적인 생각이 난무합니다) 그래야 몇년뒤에 이 때의 느낌을 더 잘 간직할것만 같습니다.&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;작년에는&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;작지만 강한(?) 포털회사인 줌인터넷에서 일하면서 처음에는 트래픽이 적고 간단한 웹들을 개발했다. 그러면서 점차 고객센터, 회원, 스윙 등 적당히(?) 트래픽있고 중요한 업무를 맡게 되었다. 회원쪽은 법적인 이슈, 고객 정보관련 이슈, 레거시 프로젝트로 인한 이슈 등 다양한 문제를 겪고 개선하고자 노력하였다. 이때는 업무에 적응하고 내가 맡은 프로젝트가 남들에게 맡겨졌을 때 욕먹지 않도록 노력하는 시기였다.&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;2017년이 될 무렵...&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;2017년 1월1일 다음과 같은 목표들을 세웠다. 사실 개인적인 목표들이 더 존재하지만 일단 개발적인 목표는 다음과 같았다.&lt;/p&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;토비의 스프링 완독&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;오픈소스 참여&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;사내에 도움이 되는 프로젝트 진행&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;평일 하루, 주말 하루 운동(개인적으로 건강도 개발과 연관이 있다고 생각한다)&lt;/li&gt;&lt;/ul&gt;&lt;h1 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 24px 0px 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;목표를 얼마나 이루었는가&lt;/h1&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;토비의 스프링 완독&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;사내 업무를 하면서 스프링으로 개발을 하지만 막상 책을 틈틈이 봤을뿐 정독해 본적이 없었다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;때문에 무언가 내실이 탄탄한 느낌이 없었다. 그래서 생각한 것이 토비의 스프링을 정리해 보는 것. 스터디를 진행할까 개인적으로 공부할까 고민해 보았지만 스터디를 진행하면 주체적이지 못할 가능성이 컸다. 무엇보다 아래와 같은 이점 때문에 블로그에 정리하게 되었다.&lt;/p&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;남들이 보기때문에 잘 써야 함&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;내가 주체적으로 이해해야만 글을 쓸 수 있음&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;어차피 한번 읽어봤자 평생 기억할 수도 없고 여러번 봐야지 내것이 됨&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;때문에 핵심만 정리된 내용을 보면 금방 읽고 기억을 상기시킬 수 있음&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;그래서 하루에 한 시간씩 책을 읽으며&amp;nbsp;&lt;a href=&quot;http://haviyj.tistory.com/category/Back-End/%ED%86%A0%EB%B9%84%EC%9D%98%20%EC%8A%A4%ED%94%84%EB%A7%81&quot; rel=&quot;nofollow&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;블로그&lt;/a&gt;에 정리했다. 그래서 그런지 책을 읽는게 지루하지 않고 오히려 즐거웠다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;a href=&quot;https://github.com/young891221/blog/blob/master/images/my/3.PNG&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;&lt;img src=&quot;https://github.com/young891221/blog/raw/master/images/my/3.PNG&quot; width=&quot;50%&quot; style=&quot;box-sizing: content-box; border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;p class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;토비의 스프링은 내가 겉핥기로 이해했던 틀의 내부를 채워주었다. 어떠한 개념을 왜 만들게 되었는지, 어떻게 쓰는지 등 스프링을 더 깊게 이해하게 되었다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;(하지만 여기에도 단점이 존재한다. 진도가 너무나 더디다...그냥 읽는것보다 최소 3배는 더 걸린다.)&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;세미나를 통한 사내 프로젝트 개선&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;누구나 그러하듯 초반에는 팀내의 업무에 잘 적응하는 것이 가장 큰 목표였다. 닥치는데로 지식을 습득하고 공부하며 각종 세미나를 열심히 보러 다녔다. 세미나를 갔다오면 마치 트렌디한 개발자가 되는 느낌이였다.(실제로는 아니였지만...) 세미나에서 자극과 영감을 받을 때가 많았다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;모두가 비슷한 고민을 하고 있다는 것도 알게 되었다. 덕분에 새로운 기술을 적용하거나 어떠한 문제를 해결할 때도 도움이 되었다.&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;그러다 세미나에서 관심을 가진 기술을 실제 업무에도 적용해 볼 기회가 생겼다.&lt;/span&gt;&amp;nbsp;맹사장님의&amp;nbsp;&lt;a href=&quot;https://github.com/projectBS/s67&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;ES6 세미나&lt;/a&gt;를 통해 ES6에 관심을 갖고 공부하고 있던 찰나 때마침 팀내의 모바일웹 서비스가 커피스크립트로 구성되어 있어서 맡게되는 개발자마다 큰 곤욕을 치르고 있었다.(나도 포함..) 그래서 팀장님과 잘 조율하여 CoffeeScript -&amp;gt; ES6 컨버팅 작업을 진행하였다. 관련 내용은&amp;nbsp;&lt;a href=&quot;http://haviyj.tistory.com/24?category=684460&quot; rel=&quot;nofollow&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;여기&lt;/a&gt;있다.&lt;/p&gt;&lt;blockquote class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;p class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;이때는 어느정도 트래픽을 받고 있는 줌의 모바일웹을 개선하는 것이라 두근두근하였다. 지금 생각하면 아쉬운 부분도 있지만 개선으로 인해 모바일웹 프로젝트를 맡게 되는 팀원들의 생산성이 올라갔다는 점이 뿌듯하다.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;오픈소스 참여 도전&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;시간이 흘러&amp;nbsp;&lt;a href=&quot;http://hub.zum.com/&quot; rel=&quot;nofollow&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;허브&lt;/a&gt;&amp;nbsp;서비스를 맡게 되었다. 허브는 트래픽이 수직 상승중에 있으며 가장 최근에 만든 서비스였다. 허브 서비스를 운영하며 전체적인 아키텍처와 자바8에 대해 많이 배우게 되었다. 이때 한창 람다, 디폴트 인터페이스, 스트림API 등의 공부를 하였다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;그러다 허브의 플리킹 기능을 수정할 일이 생겼다. 위, 아래 스크롤시 플리킹을 막는 기능이였다. Slick(플리킹 관련 오픈소스)의 버그아닌 버그같은 기능이였다. 구글링 해보니 나와 비슷한 문제를 겪는 여러 개발자가 있었지만 Slick 개발자는 자신도 알고있고 의도한 기능이라며 따로 개선해 주지 않았다. 그래서 내가&amp;nbsp;&lt;a href=&quot;https://github.com/young891221/SlickAddIsScroll&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;포크&lt;/a&gt;를 떠서 기능을 하나 추가하였다. 이슈는 당연히 먹히지 않을거 같아서 제시도 못했지만 다른 누군가에게 도움이 되었으면 한다. (사실 했지만 차였다)&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;또, 어떤 오픈소스를 수정해 볼까 고민해 보았다. 하지만 고민만 하였지 결국에는 남들이 개발한 소스에 커밋만 하는 정도로 끝나게 되었다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;지인인 창천향로님의 인텔리제이 번역 플러그인에 코드 개선정도, 기타 다른 오픈소스에 짧막한 커밋을 남겼다.&lt;/p&gt;&lt;blockquote class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;p class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;목표인 오픈소스 커밋은 달성했지만 아쉬움이 크다. 오픈소스를 개발할때는 내가 개발하는 것의 불편함 점을 개선하는 것이 실질적인 동기부여가 되는거 같다. 내년에는 나만의 오픈소스를 만들고 싶다!&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;사내 프로젝트 개선2&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;근데 허브에는 아쉬운 점이 있었다. 남들 다 있는 소셜 댓글 기능이 없었다. 때문에 사람들의 관심을 더 끌 수 있는데 그러지 못하는게 아쉬웠다. 그래서 공부도 할겸 간단한 OAuth2 기반의 데모 프로젝트를 만들어 보기로 했다. 다 만들고&amp;nbsp;&lt;a href=&quot;http://haviyj.tistory.com/38?category=692364&quot; rel=&quot;nofollow&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;블로깅&lt;/a&gt;도 하여 KSUG에 올렸는데 생각보다 반응이 좋았다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;하지만 실제로 허브에 적용하지는 못하였다. 회사의 업무 롤, 기타 계획들 때문에 내년으로 연기되었다. 그래도 누군가에게 도움이 되고 꾸준히 댓글이 달려서 기분이 좋았다. 특히 오타잡이님들 때문에 즐거웠다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;a href=&quot;https://github.com/young891221/blog/blob/master/images/my/2.PNG&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;&lt;img src=&quot;https://github.com/young891221/blog/raw/master/images/my/2.PNG&quot; width=&quot;50%&quot; style=&quot;box-sizing: content-box; border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;뜻밖의 기회&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;몇 달전 토비님과 저녁식사때도 '나도 미래에 책을 쓰고 싶은데 어떻게 쓰게 되셨는지' 질문을 한적이 있었다. 근데 놀라운 일이 일어났다. 한빛미디어의 기획자분이 나의 블로그를 보고 스프링 부트 관련 책을 써보자고 제안하였다. 그러한 기회가 너무 빨리, 이런식으로 찾아올줄은 꿈에도 몰랐다. 무척 기분좋은 일이였지만 내가 할 수 있나 많은 고민을 하였다. 사실 결심은 빨랐다. 이유는&lt;/p&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;가보지 못한 세로운 영역에 도전해 보는거 같아서&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;책을 쓴다는건 내 버킷리스트중 하나였기에&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;포기할지라도 내가 손해보는 것은 없음(반성은 해야함...)&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;그리고 책을 쓰게 되었다. 처음에는 자괴감과 자신감에 대한 생각의 반복이였다. 다른 대단한 사람들이 쓴 책을 보며 '저런 대단한 사람들이나 책을 쓰는거지...'라는 생각과 '나는 초보자의 입장에서 더 쉽고 더 이해잘되게 풀어 쓸 수 있어'라는 생각과...그러다 책쓰는 프로그래머 협회 유동환님의 글을 보고 마음을 굳히게 되었다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:518px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile30.uf.tistory.com%2Fimage%2F997BFE4B5C4260231DFF8B&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/997BFE4B5C4260231D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1.jpg&quot; height=&quot;685&quot; style=&quot;&quot; width=&quot;518&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;/p&gt;&lt;blockquote class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;p class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;결과적으로 책을 쓰며 많은 것을 알게 되었다.&lt;/p&gt;&lt;/blockquote&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;정말 피와 땀이 많이 듬&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;책을 쓰는 모두를 존경하게 됨&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;내가 평소에 잘 알고 써오던 것도 더 정확하게 알기 위해 까보고 다방면으로 써봐야 됨&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;티끌모아 태산이라고 꾸준한 습관이 중요함&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;세상에 포기는 가장 쉬움&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;회사에서 코딩하는게 훨씬 재밌음&lt;/li&gt;&lt;/ul&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;의식적인 연습&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;예전에 박재성 강사님의 세미나를 들은적이 있었다. 그때 인상깊게 들어서 의식적인 연습과 관련한 책도 읽게 되었다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;하반기즈음 글도 쓰고 내가 하고싶은 공부를 하던 중 어느 순간부터 뭘 하던 진도가 잘 안나갔다. 그동안은 무작정 진행하였지만 이때 의식적인 연습을 시작해야겠다는 생각을 하게 되었다. 문제가 무엇인지 곰곰히 생각해 보았다.&lt;/p&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;절대적인 글쓰기 시간의 부족&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;습관적으로 SNS, 카톡을 봄&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;이게 맞나?, 문장의 흐름은 괜찮나?, 독자들이 이해할 수 있을까?, 기타 여러 고민이 길어질수록 집중력이 흐려짐&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;문법, 문장의 흐름, 단어 고민 등 기획자분과의 협업을 할때도 길어짐&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;더 능률적인 방법, 환경 등을 고민하지 않고 무작정했던게 가장 큰 문제였음&lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;나의 문제점부터 제대로 인지하고 다음과 같이 대처방안을 떠올려보았다.&lt;/p&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;일찍기상(6시20분에 일어나 10분간 정신차리고 30분부터 1시간 글쓰기)&lt;ul class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 0px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;아침에 더 집중이 잘됨&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;아무리 바쁘더라도 이 시간에는 산을 만드는 티끌들을 모을 수 있음&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;출퇴근하며 책읽기&lt;ul class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 0px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;굉장히 나랑 잘맞음&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;졸지않고 시간의 효율을 낼 수 있음&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;바탕화면에 집중력을 흐트리는 요소들(카톡, 페북, 블로그 기타) 싹다 정리(작업 표시줄도 숨김, 왠만하면 전체화면으로 진행)&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;10분 혹은 20분 간격으로 알림 설정&lt;ul class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 0px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;윈도우의 알림기능 사용&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;나에게 주어진 간격만큼 의식적으로 되뇌이며 집중하게 만듬&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;뭔가 게임같은 요소처럼 느껴지도록 생각함&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;날마다 제목도 다르게 정하여 당근과 채찍을 번갈아가며 사용&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;결과적으로 집중력이 향상되었다. 특히 글을 쓸때. 어떤이에게는 굉장히 바보같은 방법처럼 보일 수 있겠지만 잘못된 습관이 지속되게 되면 그러한 습관을 고칠 수 있도록 의식적으로 노력해야만 바꿀 수 있다는 것을 느꼈다.(물론 나만의 방식이다) 이를 통해&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;진정한 효율은 내 문제가 무엇인지 앎으로부터 나온다는 것도 깨달았다.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;앞으로&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;현재는&amp;nbsp;&lt;a href=&quot;http://zum.com/&quot; rel=&quot;nofollow&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;줌의 메인페이지&lt;/a&gt;를 담당하고 있다. 앞서간 선배들의 발자취를 따라 나도 메인을 더 나은 서비스로 개선하며 의미있는 일을 해보고 싶다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;이제는 다른데로 이직하였지만 이전에 메인페이지를 담당하던 사수분은 어느날 인상적인 말을 남겼었다.&lt;/p&gt;&lt;blockquote class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;p class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;저는 제가 못할거 같은 일들에 도전해요. 잘 알지도 못하지만 한계에 계속 도전하고 노력하면 언젠가 그 벽을 깨고 성장하게 되더라구요.&lt;/p&gt;&lt;/blockquote&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;누구나 알고 있을 것이다. 하지만 말만 하는게 아니라&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;행동&lt;/span&gt;으로 보여주기는 어렵다. 한계에 도전하며 포기하지 않고 노력하는게 앞으로 이 시대를 살아가며 치뤄야할 숙명이 아닌가 생각한다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;된다고 생각하는 사람은 되고 안된다고 생각하는 사람은 정말 안된다.&lt;/span&gt;&amp;nbsp;내년에도 되는 놈으로 살자! 2018년에도 화이팅!&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://haviyj.tistory.com/41&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>내 생각</category>
<author>Havi</author>
<guid>https://haviyj.tistory.com/41</guid>
<comments>https://haviyj.tistory.com/41#entry41comment</comments>
<pubDate>Mon, 01 Jan 2018 12:36:53 +0900</pubDate>
</item>
<item>
<title>Spring Boot + Envers로 엔티티 이력관리하기</title>
<link>https://haviyj.tistory.com/40</link>
<description>&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;너무나 쉽고 편한 기능이라 쓸까말까 고민했었는데 한글화된 문서가 거의 없어서 일단 쓰기로 했습니다. 삽질보다는 공식 문서의 영문 해석능력에 따라 적용시간을 단축시킬 수 있습니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;또, 스프링 캠프 2017에서 김영한님이 발표해 주신 자료영상을 찾아 보시면 이해하기 훨씬 수월하실 겁니다.&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;개요&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;Hibernate Envers 프로젝트는 각각의 대상 엔티티의 이력관리를 간편하게 도와줍니다. 정말 간단하게 적용하자면&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@Audited&lt;/code&gt;어노테이션만 붙이면 끝납니다. 사실 Envers를 알기전까지 저는 제가 대상으로 하는 히스토리용 테이블을 따로 생성하여 json 형식으로 데이터를 저장하고 불러오곤 하였습니다. 뭐 상황에 따라 적용하는 방식의 이점이 있겠지만 Envers를 적용한다면 대상 테이블과 똑같은 테이블에 rev(revinfo PK), revtype(생성, 수정, 삭제 구분)컬럼이 추가로 생성되며 이력관리를 할 수 있습니다. 뭐 이런 기능 필요없이 &quot;나는 내가 직접 테이블을 생성하고 이력에 대한 로직을 짤거야!&quot; 라는 분들도 계시겠지만...빠르게, JPA에 맞게, 모던하게 사용하고자 하시는 분들에게&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Envers&lt;/span&gt;를 추천해 드립니다.&amp;nbsp;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;그럼 본격적으로 Envers를 파헤쳐 보도록 하겠습니다. 우리의 목표는 아주 심플한 예제로 빠르게 Envers를 이해하고 적용하는게 목표입니다! 모든 소스는&amp;nbsp;&lt;a href=&quot;https://github.com/young891221/Spring-Boot-Envers-Example&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;Github&lt;/a&gt;에서 보실 수 있습니다.&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;프로젝트 환경&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;뭐 이것저것 많이 들어간것 같지만 사실상 JPA, Envers, Web이 핵심입니다.&lt;/p&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;Java8&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Spring Boot 1.5.6&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Spring Data Envers&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Spring Starter Web&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Spring Stater Data Jpa&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Spring Boot Starter Test&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;MySql&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;lombok&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Gradle 3.5&lt;/li&gt;&lt;/ul&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;Envers 적용하기&lt;/h2&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;DB 연동&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;먼저 application.yml에 datasource부터 셋팅하겠습니다. 저희는 스프링 부트를 사용하기 때문에 다음과 같이 간단하게 기본적인 datasource 정보를 입력하여 디비와 연동할 수 있습니다. 한 가지 특별한 점은&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;jpa.hibernate.ddl-auto: create&lt;/code&gt;로 설정한 부분입니다. 이 부분은 프로젝트가 구동될때 마다 새롭게 테이블을 생성한다고 명시하는 부분입니다. 실제로 서비스에서는 절대 사용하면 안되는 설정이지만 전 테스트를 돌릴때 마다 새로 테이블을 생성해서 결과를 볼 수 있도록 일부러 설정해 놓았습니다.(예제소스의 간편화를 위해...)&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-ent&quot; style=&quot;box-sizing: border-box; color: rgb(34, 134, 58);&quot;&gt;spring&lt;/span&gt;:
  &lt;span class=&quot;pl-ent&quot; style=&quot;box-sizing: border-box; color: rgb(34, 134, 58);&quot;&gt;datasource&lt;/span&gt;:
    &lt;span class=&quot;pl-ent&quot; style=&quot;box-sizing: border-box; color: rgb(34, 134, 58);&quot;&gt;url&lt;/span&gt;: &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;jdbc:mysql://{경로}&lt;/span&gt;
    &lt;span class=&quot;pl-ent&quot; style=&quot;box-sizing: border-box; color: rgb(34, 134, 58);&quot;&gt;username&lt;/span&gt;: 
    &lt;span class=&quot;pl-ent&quot; style=&quot;box-sizing: border-box; color: rgb(34, 134, 58);&quot;&gt;password&lt;/span&gt;: 
    &lt;span class=&quot;pl-ent&quot; style=&quot;box-sizing: border-box; color: rgb(34, 134, 58);&quot;&gt;driver-class-name&lt;/span&gt;: &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;com.mysql.jdbc.Driver&lt;/span&gt;
  &lt;span class=&quot;pl-ent&quot; style=&quot;box-sizing: border-box; color: rgb(34, 134, 58);&quot;&gt;jpa&lt;/span&gt;:
    &lt;span class=&quot;pl-ent&quot; style=&quot;box-sizing: border-box; color: rgb(34, 134, 58);&quot;&gt;hibernate&lt;/span&gt;:
      &lt;span class=&quot;pl-ent&quot; style=&quot;box-sizing: border-box; color: rgb(34, 134, 58);&quot;&gt;ddl-auto&lt;/span&gt;: &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;create&lt;/span&gt;
&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;위의&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;jpa.hibernate.ddl-auto: create&lt;/code&gt;설정이 마음에 안드시는 분들은 build.gradle에서 하이버네이트 플러그인 설정을 통해 자동으로 테이블을 생성할수도 있습니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;..&lt;/span&gt;.

plugins {
	id &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;org.hibernate.gradle.tools&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; version &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;1.2.5&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
}

apply &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;plugin&lt;/span&gt;: &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;hibernatetools-gradle-plugin&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;..&lt;/span&gt;.&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;설정 후 인텔리제이에서 다음과 같이 하이버네이트 플러그인을 실행하면 테이블이 생성됩니다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:232px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile2.uf.tistory.com%2Fimage%2F99D2304F5C4260721F5CF1&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99D2304F5C4260721F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;1.png&quot; height=&quot;273&quot; style=&quot;&quot; width=&quot;232&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;@Audited&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;이제 테스트용 도메인과 클래스 몇개를 추가해 보도록 하겠습니다. 도메인은 아주 심플합니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Data&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@NoArgsConstructor&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Builder&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Audited&lt;/span&gt; &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(106, 115, 125);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;이력관리용 어노테이션&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;pl-e&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;Serializable&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;long&lt;/span&gt; serialVersionUID &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;8530213963961662300L&lt;/span&gt;;

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@GeneratedValue&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt; id;

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Column&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;String&lt;/span&gt; title;

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Column&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Timestamp&lt;/span&gt; publishedAt;
}&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;Book 클래스는 롬복을 사용하여 구성하였습니다. 실질적으로 위의 코드에는 가장 중요한&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@Audited&lt;/code&gt;어노테이션이 있습니다. &quot;이력관리하고 싶은 타겟 엔티티가 있다!&quot;하면&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@Audited&lt;/code&gt;만 붙이면 해결이 됩니다. 쉽죠?&lt;br style=&quot;box-sizing: border-box;&quot;&gt;좀 더 풀어서 설명하자면 Book 도메인에&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@Audited&lt;/code&gt;를 사용하여 이력관리를 하기 위해서는 이력관리용 테이블로 book_aud 테이블(이름 변경 가능)과 revinfo 테이블이 필요합니다. book_aud는 book의 필드값 3개(id, title, publishedAt)와 이력관리 ID값인&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;rev&lt;/code&gt;, 타입을 나타내는&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;revtype&lt;/code&gt;으로 설계됩니다.&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;revtype&lt;/code&gt;값의 의미는 다음과 같습니다.&lt;/p&gt;&lt;h4 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 16px; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;revtype&lt;/h4&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;0 : insert&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;1 : update&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;2 : delete&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;이 부분이 좀 아쉽긴 하네요. 타입을 숫자로 구분해 놓는게;; 서버에서 enum을 쓰던 명확하게 구분이 필요할듯 합니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;테이블은 미리 만들어 놓아도 되고 저는 예제용으로 테이블이 자동생성되도록 설정했고 굳이 따로 만들진 않았습니다. 자동생성된 book_aud 테이블 스키마는 다음과 같습니다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;a href=&quot;https://github.com/young891221/blog/blob/master/images/Hibernate/envers/2.png&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;&lt;img src=&quot;https://github.com/young891221/blog/raw/master/images/Hibernate/envers/2.png&quot; style=&quot;box-sizing: content-box; border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;만약, 이력관리하고 싶지 않은 필드들을 커스터마이징하게 바꾸고 싶다면&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@Audited&lt;/code&gt;를 필드값에 할당해도 상관없습니다. 아래와 같이 바꾸면 title 필드는 이력테이블에서 제외됩니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Data&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Entity&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@NoArgsConstructor&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@AllArgsConstructor&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Builder&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;pl-e&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;Serializable&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;long&lt;/span&gt; serialVersionUID &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;8530213963961662300L&lt;/span&gt;;

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Id&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@GeneratedValue&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt; id;

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Column&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;String&lt;/span&gt; title;

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Column&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Audited&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Timestamp&lt;/span&gt; publishedAt;
}&lt;/pre&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;a href=&quot;https://github.com/young891221/blog/blob/master/images/Hibernate/envers/3.png&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;&lt;img src=&quot;https://github.com/young891221/blog/raw/master/images/Hibernate/envers/3.png&quot; style=&quot;box-sizing: content-box; border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;RevisionRepository 인터페이스&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;자, 이제 이력관련 테이블을 만들었고 어노테이션을 사용하여 간편하게 이력들을 관리할 수 있습니다. 이제 계속해서 추가되는 이력들을 조회하고 싶어지는 데요. 일일이 쿼리를 짜서 만들까요? 아니죠, 이것도 이미 다 만들어져 있습니다~(너무 다 만들어져 있나;;)&lt;br style=&quot;box-sizing: border-box;&quot;&gt;이력관련 테이블을 조회하기위해 미리 만들어져 있는&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;RevisionRepository 인터페이스&lt;/span&gt;를 살펴보겠습니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@NoRepositoryBean&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;RevisionRepository&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;pl-e&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;Repository&amp;lt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;T&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;ID&lt;/span&gt;&amp;gt;&lt;/span&gt; {
	&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(106, 115, 125);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;최근 리비전 조회&lt;/span&gt;
	&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;Revision&amp;lt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;N&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;T&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;findLastChangeRevision&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9);&quot;&gt;id&lt;/span&gt;);
	&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(106, 115, 125);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;id를 사용하여 해당 id의 모든 리비전 조회&lt;/span&gt;
	&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;Revisions&amp;lt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;N&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;T&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;findRevisions&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9);&quot;&gt;id&lt;/span&gt;);
	&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(106, 115, 125);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;리비전을 페이징 처리하여 조회&lt;/span&gt;
	&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;Page&amp;lt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box;&quot;&gt;Revision&amp;lt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;N&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;T&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;findRevisions&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9);&quot;&gt;id&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Pageable&lt;/span&gt; &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9);&quot;&gt;pageable&lt;/span&gt;);
	&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(106, 115, 125);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;특정 리비전 조회&lt;/span&gt;
	&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;Revision&amp;lt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;N&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;T&lt;/span&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;findRevision&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;ID&lt;/span&gt; &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9);&quot;&gt;id&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;N&lt;/span&gt; &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9);&quot;&gt;revisionNumber&lt;/span&gt;);
}&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;우리는 이를 잘 활용하면 됩니다. BookRepository 인터페이스에 RevisionRepository를 상속받도록 합니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;interface&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;BookRepository&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;pl-e&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;JpaRepository&amp;lt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;Book&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;Long&lt;/span&gt;&amp;gt;&lt;/span&gt;, &lt;span class=&quot;pl-e&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;RevisionRepository&amp;lt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;Book&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;Long&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;Integer&lt;/span&gt;&amp;gt;&lt;/span&gt; {
}&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;RevisionRepository 인터페이스사용을 위해서는 추가적인 설정이 필요합니다. 어노테이션 한 줄로 모든 설정은 끝납니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@EnableJpaRepositories&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;repositoryFactoryBeanClass&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;EnversRevisionRepositoryFactoryBean&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;class) &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(106, 115, 125);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;EnversRevisionRepositoryFactoryBean 인스턴스 생성&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@SpringBootApplication&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;Application&lt;/span&gt; {

	&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;main&lt;/span&gt;(&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;String&lt;/span&gt;[] &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(227, 98, 9);&quot;&gt;args&lt;/span&gt;) {
		&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;SpringApplication&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;run(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Application&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;class, args);
	}
}&lt;/pre&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;RevisionRepository 테스트&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;자, 모든 환경과 코드 작성이 끝났습니다. 실제로 잘 돌아가는지 확인하기 위해 몇 가지 테스트 코드를 작성해 보겠습니다. 테스트 코드는 @DataJpaTest를 사용하려다가 그냥 MySQL에 직접 데이터를 넣고 빼며 테스트하고 싶어서 @SpringBootTest를 사용하였습니다. 직접 코드를 보면서 확인해 보겠습니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@RunWith&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;SpringRunner&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;class)
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@SpringBootTest&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(111, 66, 193);&quot;&gt;JpaEnversTest&lt;/span&gt; {
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;boolean&lt;/span&gt; isInit &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;false&lt;/span&gt;;

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;BookRepository&lt;/span&gt; bookRepository;

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Before&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; void Book_데이터_생성() {
        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;if&lt;/span&gt;(&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;!&lt;/span&gt;isInit) {
            &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(106, 115, 125);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;10개 Book 데이터 저장&lt;/span&gt;
            &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;rangeClosed(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;10&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;forEach(index &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;&amp;gt;&lt;/span&gt;
                    bookRepository&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;save(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Book&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;builder()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;title(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;테스트&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;+&lt;/span&gt; index)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;publishedAt(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Timestamp&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;valueOf(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;LocalDateTime&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;now()))&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;build())
            );

            &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(106, 115, 125);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;1번 Book 삭제&lt;/span&gt;
            bookRepository&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;delete(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;valueOf(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;));

            &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(106, 115, 125);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;2번 Book 수정하기 3번 반복&lt;/span&gt;
            &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Book&lt;/span&gt; book2 &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; bookRepository&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;findOne(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;valueOf(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;2&lt;/span&gt;));
            &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;IntStream&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;rangeClosed(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;3&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;forEach(index &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;&amp;gt;&lt;/span&gt; {
                book2&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;setTitle(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;수정&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;+&lt;/span&gt; index);
                bookRepository&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;save(book2);
            });
            isInit &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;true&lt;/span&gt;;
        }
    }

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Test&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;expected&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;InvalidDataAccessApiUsageException&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;class)
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; void Book_Revision_NULL_데이터_검색() {
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Revision&lt;/span&gt; revision &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; bookRepository&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;findLastChangeRevision(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;valueOf(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;));
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Book&lt;/span&gt; book &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Book&lt;/span&gt;) revision&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity();
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Integer&lt;/span&gt; revisionNumber &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Integer&lt;/span&gt;) revision&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getRevisionNumber();

        assertThat(book&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;테스트1&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
        assertThat(revisionNumber, is(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;));
    }

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; void Book_Revision_검색() {
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Revision&lt;/span&gt; revision1 &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; bookRepository&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;findRevision(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;valueOf(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;),&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;);
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Book&lt;/span&gt; book1 &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Book&lt;/span&gt;) revision1&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity();
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Integer&lt;/span&gt; revisionNumber1 &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Integer&lt;/span&gt;) revision1&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getRevisionNumber();

        assertThat(book1&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;테스트1&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
        assertThat(revisionNumber1, is(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;));

        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Revision&lt;/span&gt; revision2 &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; bookRepository&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;findLastChangeRevision(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;valueOf(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;2&lt;/span&gt;));
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Book&lt;/span&gt; book2 &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Book&lt;/span&gt;) revision2&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity();
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Integer&lt;/span&gt; revisionNumber2 &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Integer&lt;/span&gt;) revision2&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getRevisionNumber();
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;DateTime&lt;/span&gt; dateTime &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; revision2&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getRevisionDate();

        assertThat(book2&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;수정3&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
        assertThat(revisionNumber2, is(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;14&lt;/span&gt;));
    }

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; void Book_Revision_Page_검색() {
        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;Page&amp;lt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box;&quot;&gt;Revision&amp;lt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;Book&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;gt;&lt;/span&gt; bookPage &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; bookRepository&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;findRevisions(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;valueOf(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;2&lt;/span&gt;), &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;PageRequest&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;10&lt;/span&gt;));
        assertThat(bookPage&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTotalElements(), is(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;valueOf(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;4&lt;/span&gt;)));
        assertThat(bookPage&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getContent()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;get(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;테스트2&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
        assertThat(bookPage&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getContent()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;get(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;수정1&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
        assertThat(bookPage&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getContent()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;get(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;2&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;수정2&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
        assertThat(bookPage&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getContent()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;get(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;3&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;수정3&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
    }

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;@Test&lt;/span&gt;
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;public&lt;/span&gt; void Book_Revisions_검색() {
        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;Revisions&amp;lt;&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;Integer&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(36, 41, 46);&quot;&gt;Book&lt;/span&gt;&amp;gt;&lt;/span&gt; revisions &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;=&lt;/span&gt; bookRepository&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;findRevisions(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box;&quot;&gt;Long&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;valueOf(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;2&lt;/span&gt;));
        assertThat(revisions&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getContent()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;size(), is(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;4&lt;/span&gt;));
        assertThat(revisions&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getContent()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;get(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;0&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;테스트2&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
        assertThat(revisions&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getContent()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;get(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;1&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;수정1&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
        assertThat(revisions&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getContent()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;get(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;2&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;수정2&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
        assertThat(revisions&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getContent()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;get(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 92, 197);&quot;&gt;3&lt;/span&gt;)&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getEntity()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(215, 58, 73);&quot;&gt;.&lt;/span&gt;getTitle(), is(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(3, 47, 98);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;수정3&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;));
    }
}&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;Book_데이터_생성() 메소드에서 초기 데이터를 세팅합니다. 데이터 세팅 후 이력이 제대로 체크되는지 확인하기 위해 몇번의 데이터 삭제, 수정을 반복합니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;Book_Revision_NULL_데이터_검색() 메소드는 삭제된 1번 Book을 조회하기 때문에 exception이 발생하게 됩니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;Book_Revision_검색(), Book_Revision_Page_검색(), Book_Revisions_검색() 메소드는 각각의 조회 API를 사용해는 예제 테스트로 작성하였습니다.&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://haviyj.tistory.com/40&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>JPA</category>
<author>Havi</author>
<guid>https://haviyj.tistory.com/40</guid>
<comments>https://haviyj.tistory.com/40#entry40comment</comments>
<pubDate>Wed, 06 Sep 2017 14:17:42 +0900</pubDate>
</item>
<item>
<title>[도서 리뷰] 실전 스프링 부트 워크북</title>
<link>https://haviyj.tistory.com/39</link>
<description>&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:376px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile2.uf.tistory.com%2Fimage%2F99C3D84D5C42611E1B9163&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99C3D84D5C42611E1B&quot; filemime=&quot;image/jpeg&quot; filename=&quot;B2433442478_l.jpg&quot; height=&quot;483&quot; style=&quot;&quot; width=&quot;376&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;후기&lt;/h2&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;Spring Boot 특징&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;제가 가장 마음에 들었던 부분은 책 표지가 이쁘장하게 꾸며져 있어 좋았습니다. 개인적으로 부트의 녹색을 좋아해서;;ㅎㅎ&lt;br style=&quot;box-sizing: border-box;&quot;&gt;일단 구성은 대부분의 스프링 부트 책과 비슷하게 스프링 부트의 주요 특징과 기능에 대해 초반 정리가 들어갑니다. 스프링 부트가 왜 필요한지 어떠한 점이 좋아서 써야하는지 등을 잘 정리해 놓았습니다.&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;Spring Boot CLI&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;중반에는 스프링 부트의 CLI 위주로 설명이 되어 있습니다. 대체적으로 실제 스프링 부트 개발시 IDE로 개발하기에 CLI를 써본적이 한번도 없었습니다. 왠만하면 클릭 몇번으로 원하는 의존성을 가져올 수 있고 실행도 간편하기에 따로 사용해 보진 않았지만 이런게 있다는 것을 알게되는 계기(?)였습니다.&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;Spring Boot 프로젝트&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;이 책의 또 하나의 주요한 포인트는 그루비 언어로 쓰여진 코드가 많다는 점입니다. 덕분에 그루비가 자바와 정말 비슷하다는 점을 알게 되었지만 스칼라가 대세가 되어 그루비 개발자도 그루비를 안쓰는 세상에 굳이 번역 그대로 그루비를 넣어야 했나 하는 아쉬움이 있습니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;다른 스프링 부트책과는 다른 특징으로 다양한 프로젝트들을 담고 있습니다.&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;spring-boot&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;spring-boot-data&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;spring-boot-data-rest&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;spring-boot-security&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;spring-boot-oauth2&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;spring-boot-JMS&lt;/code&gt;,&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;spring-cloud&lt;/code&gt;&amp;nbsp;기타 등 다양한 프로젝트 기본 예제 코드를 제공해 주고 있어 참고하기 좋았습니다. 하지만, 실제 프로젝트에 대한 설명이 이 프로젝트가 어떠한 프로젝트인지 기본적으로 알고있다는 전제하에 들어가는게 초심자에게는 쉽게 다가가지 못할 요소로 남아있습니다.&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;프로젝트별 상세설명&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;가장 마음에 들었던 점은 프로젝트별 어노테이션 및 코드에 대한 설명을 구어체로 잘 표현해 주었습니다. 덕분에 무엇인지 궁금했던 부분을 빠르게 캐치할 수 있었습니다. 외국문서를 번역한 거라 매끄럽지 않은 부분이 있을거라 생각했지만 구어체나 어려운 부분들을 이해하기 쉽게 번역해 주셨습니다. 현재로서는 다양한 스프링 부트의 프로젝트를 이만큼 한번에 볼 수 있는 책은&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;실전 스프링 부트 워크북&lt;/code&gt;뿐이라고 생각합니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;여러 스프링 부트의 프로젝트들을 간편한 예제로 만나고 싶은 분들에게 강추합니다!&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://haviyj.tistory.com/39&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>독서</category>
<author>Havi</author>
<guid>https://haviyj.tistory.com/39</guid>
<comments>https://haviyj.tistory.com/39#entry39comment</comments>
<pubDate>Tue, 04 Jul 2017 22:59:43 +0900</pubDate>
</item>
<item>
<title>Spring Boot &amp; OAuth2 기반 소셜 댓글 시스템 개발하기</title>
<link>https://haviyj.tistory.com/38</link>
<description>&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;회사에서의 잉여력 + 개인의 잉여력을 가지고 회사에도 도움 + 개인적인 공부에도 도움이 되는 프로젝트를 진행해 보고 싶었습니다. 제가 맡고 있는 서비스에 아쉬운점이 소셜 댓글이 없다는 것인데(ㅠ.ㅠ) 아쉬움도 달래고 공부도 하고 제 서비스에 댓글기능도 붙일겸 직접 소셜 인증(페이스북, 구글, 트위터, 카카오) &amp;amp; 간단한 댓글 Getting Started를 개발하기로 야심찬 계획(?)을 세웠습니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;모든 소스는&amp;nbsp;&lt;a href=&quot;https://github.com/young891221/spring-boot-social-comment&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;github&lt;/a&gt;에 있습니다.&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;개요&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;em style=&quot;box-sizing: border-box;&quot;&gt;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;목표는 페이스북, 구글, 트위터, 카카오 등 국내에서 많이 쓰이는 서비스들의 OAuth인증을 통한 댓글 시스템 구현하기!&lt;/span&gt;&lt;/em&gt;&amp;nbsp;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;여기서 트위터를 제외한 다른 인증은 모두 OAuth2를 사용합니다. Spring에는 이를 구현한 고마운 라이브러리인 Spring Social과&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Spring Security OAuth2&lt;/span&gt;가 있습니다. 전자의 경우 마지막 업데이트가 2년전이고 정해진 디비 스키마에 데이터가 저장되는 방식이라 커스터마이징한 개발이 가능한 후자를 선택하였습니다. Spring Security OAuth2는 인증과 개인정보 API가 내부로직을 몰라도 될 만큼 편리하게 구현되어 있어 그냥 갔다 쓰시면 됩니다. 그래도 개발자라면 어떻게 동작하는지 정도는 알아야 겠다는 마음가짐(?) 때문에 동작 프로세스 정도는 소스를 까보면서 분석해 보았습니다.(추후 세션에서...)&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;blockquote class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;p class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;cf.트위터 developer 사이트를 들어가 보시면&amp;nbsp;&lt;a href=&quot;https://dev.twitter.com/oauth/application-only&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;Application-only authentication&lt;/a&gt;으로 OAuth2를 제공해 준다고 설명되어 있습니다. 하지만 이는 Client Credentials Grant로 Application 본인에 대한 인증만 사용할 수 있고 유저에 대한 정보를 가져올 수 없어서 제가 만드는 프로젝트에서는 부합하지 못하였습니다. 다음 세션에서 더 자세히 설명하겠습니다.&lt;/p&gt;&lt;/blockquote&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;필요한 정보 모으기(OAuth2란?)&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;OAuth는 임시 인증을 위한 방식으로 Token을 사용하는데 이를 표준적인 방법으로 통일한 것입니다. OAuth2는 OAuth protocol의 2버전입니다. 이 프로토콜은 3rd party를 위한 범용적인 인증 표준이 됩니다. OAuth2에서 제공하는 인증 타입 방식은 현재 4가지가 있습니다.(Authorization grant types, Implicit Grant, Resource Owner Password Credentials Grant, Client Credentials Grant 등) 그중 저에게 필요한 방식은&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Authorization grant types&lt;/span&gt;입니다. Authorization grant types는 웹 서버에서 long-lived access token을 사용하여 사용자 인증을 처리하는 방식으로 제가 선택한 페이스북, 구글, 카카오가 사용하는 방식입니다. 아래 그림의 Flow를 보시면 더 이해하기 쉽습니다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:621px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile21.uf.tistory.com%2Fimage%2F9926184A5C42614820344F&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9926184A5C42614820&quot; filemime=&quot;image/jpeg&quot; filename=&quot;auth_code_flow.png&quot; height=&quot;505&quot; style=&quot;&quot; width=&quot;621&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;Resource Owner: 인증이 필요한 유저&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Client: 웹 사이트&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Authorization Server: 페이스북/구글/카카오 서버&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Resource Server: 페이스북/구글/카카오 서버&lt;/li&gt;&lt;/ul&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;반면에 개요에서 말한 트위터가 제공하는&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;Client Credentials Grant&lt;/span&gt;&amp;nbsp;방식은 client 자신이 resource owner가 되는 방식입니다. 이 방식은 client 이외의 다른 resource owner로부터 정보를 얻을 수 있는 권한이 없습니다.&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;애초에 resource owner가 없으므로 사용자의 개인정보를 얻을 수 없는 방식입니다.&lt;/span&gt;&amp;nbsp;따라서 제가 만들려는 소셜 댓글 플랫폼에는 사용할 수 없었습니다.(그래서 트위터는 OAuth1방식으로...ㅠㅠ)&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:549px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile6.uf.tistory.com%2Fimage%2F997A5C4B5C42615D1E1023&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/997A5C4B5C42615D1E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;client_credentials_flow.png&quot; height=&quot;414&quot; style=&quot;&quot; width=&quot;549&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;br /&gt;&lt;/p&gt;&lt;blockquote class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;p class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;번외로 Implicit Grant 방식은 Authorization grant types처럼 서버와 서버에서 인증을 수행하는 방식으로 클라이언트가 token이나 secret이 노출되지 않는 것과는 다르게 javascript처럼 resource owner쪽에서 전적으로 인증을 수행하는 방식입니다.&lt;/p&gt;&lt;/blockquote&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile30.uf.tistory.com%2Fimage%2F9987C64B5C42616A1C09BE&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/9987C64B5C42616A1C&quot; filemime=&quot;image/jpeg&quot; filename=&quot;directory2.png&quot; height=&quot;441&quot; style=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;Spring Security OAuth2에는 인증타입이 모두 구현되어 있습니다&lt;/code&gt;&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;프로젝트 환경&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;다음은 프로젝트 개발 환경과 사용한 라이브러리입니다.&lt;/p&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;Java8&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Spring Boot 1.5.2&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Spring Security Oauth2&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Spring Social Twitter&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;JPA&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;lombok&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;logback&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Gradle 3.5&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;h2&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;embedded redis(for session)&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Freemarker&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;handlebars.js&lt;/li&gt;&lt;/ul&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;설계&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;인증요청시 Spring Security에 설정된 필터를 통해 인증이 수행되고 인증이 완료되면 redis를 사용해 세션정보를 담습니다. 회원에 대한 정보는 h2 db에 심플한 정보로 저장하여 사용합니다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:800px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile5.uf.tistory.com%2Fimage%2F99C3F8455C42617D1E86D6&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99C3F8455C42617D1E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;architecture.png&quot; height=&quot;312&quot; style=&quot;&quot; width=&quot;800&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;기본 구현 프로세스&lt;/h2&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;소셜정보 설정&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;소셜관련 clientId, clientSecret의 정보를 application.yml에 넣어줍니다. 페이스북의 경우는 userInfo정보를 가져오기 위한 API 규격이 다릅니다. 다른 소셜인증의 경우 필요한 디폴트 정보가 왠만큼 다 있고 scope에 요청정보를 명시해 주는 형식이지만 페이스북은&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;fields&lt;/code&gt;파라미터를 사용하여&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;fields=id,name,email&lt;/code&gt;&amp;nbsp;형식으로 요청해야 정상적으로 동작합니다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:488px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile4.uf.tistory.com%2Fimage%2F992405425C42619A1EC99F&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/992405425C42619A1E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;social_config.png&quot; height=&quot;567&quot; style=&quot;&quot; width=&quot;488&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;clientAuthenticationScheme?&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;clientAuthenticationScheme&lt;/code&gt;의 경우 디폴트는&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;header&lt;/code&gt;로 지정되며&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;form&lt;/code&gt;과&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;query&lt;/code&gt;는 같은 방식으로 동작합니다. 이 로직 처리는&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;DefaultClientAuthenticationHandler&lt;/code&gt;&amp;nbsp;클래스에서 진행되며&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;header&lt;/code&gt;의 경우 아래와 같이 clientId와 clientSecret을 Base64로 인코딩하여 헤더에 포함되는 형식으로 request를 요청합니다. 이에 관한 자세한 사항은&amp;nbsp;&lt;a href=&quot;http://www.rfc-editor.org/rfc/rfc7617.txt&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;OAuth2 Spec 문서&lt;/a&gt;를 참고하시기 바랍니다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:553px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile29.uf.tistory.com%2Fimage%2F99BB8E4D5C4261B61D434E&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99BB8E4D5C4261B61D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;scheme.png&quot; height=&quot;363&quot; style=&quot;&quot; width=&quot;553&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;clientAuthenticationScheme Class&lt;/code&gt;&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;인증처리용 Filter 설정&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;Security설정에서&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;OAuth2ClientAuthenticationProcessingFilter&lt;/code&gt;라는 인증처리용 필터를 가져와서 소셜별로 필요한 설정들을 해줍니다. 그리고 마지막에&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;FilterRegistrationBean&lt;/code&gt;에게 소셜 필터리스트를 set해주고 빈으로 등록해 줍니다.&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;FilterRegistrationBean&lt;/code&gt;는 SecurityConfig 이외에 다른 곳에 빈으로 등록하여 사용하셔도 무방합니다.(Filter들의 결집을 위해?) SecurityConfig는&amp;nbsp;&lt;a href=&quot;https://github.com/young891221/spring-boot-social-comment/blob/master/social-comment/src/main/java/com/social/config/SecurityConfig.java&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;여기&lt;/a&gt;를 참조하세요.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:591px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile1.uf.tistory.com%2Fimage%2F99B7074D5C4261CD1F7810&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99B7074D5C4261CD1F&quot; filemime=&quot;image/jpeg&quot; filename=&quot;source1.png&quot; height=&quot;339&quot; style=&quot;&quot; width=&quot;591&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;OAuth2ClientAuthenticationProcessingFilter&lt;/code&gt;의 내부를 까보면&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;attemptAuthentication&lt;/code&gt;이라는 오버라이드된 메소드가 있는데 추후 내부로직 진행이 어떻게 흘러가는지 궁금하시다면 이 부분을 기준으로 주요로직들의 흐름을 읽으실 수 있습니다.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;a href=&quot;https://github.com/young891221/blog/blob/master/images/Spring/oauth2/source3.png&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;&lt;img src=&quot;https://github.com/young891221/blog/raw/master/images/Spring/oauth2/source3.png&quot; width=&quot;95%&quot; style=&quot;box-sizing: content-box; border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;인증 후 세션처리&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;인증이 완료되면 위의 필터의&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;setAuthenticationSuccessHandler&lt;/code&gt;에서 설정한 경로로 리다이렉트됩니다. 저는 AOP를 사용하여&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@SocialUser&lt;/code&gt;라는 파라미터를 가진 놈들에게 세션에 있는 user 데이터를 바로 반환하거나 인증이 완료된 후 userDetails에 관한 정보를 User 객체에 맵핑하여 db에 저장해 주고 애노테이션에 선언된 user 객체에 바인딩시켜주는 방식을 사용하였습니다. 즉,&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@SocialUser&lt;/code&gt;를 선언한 파라미터는 user에 대한 정보를 가져올 수 있습니다. 이 부분에 대한 자세한 소스는&amp;nbsp;&lt;a href=&quot;https://github.com/young891221/spring-boot-social-comment/blob/master/social-comment/src/main/java/com/social/aop/UserAspect.java&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;이곳&lt;/a&gt;을 참조하세요.&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;a href=&quot;https://github.com/young891221/blog/blob/master/images/Spring/oauth2/source2.png&quot; target=&quot;_blank&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;&lt;img src=&quot;https://github.com/young891221/blog/raw/master/images/Spring/oauth2/source2.png&quot; width=&quot;80%&quot; style=&quot;box-sizing: content-box; border-style: none; max-width: 100%;&quot;&gt;&lt;/a&gt;&lt;/p&gt;&lt;blockquote class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;p class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;여기서 포인트컷을&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;execution(* *(.., @com.social.annotation.SocialUser (*), ..))&lt;/code&gt;와 같이 선언하는 것은 모든 반환타입, 모든 메소드에 @SocialUser 애노테이션이 달려 있는 파라미터를 찾는 다는 의미입니다.(자세한 내용은&amp;nbsp;&lt;a href=&quot;http://haviyj.tistory.com/36&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;이곳&lt;/a&gt;을 참조해 주세요) 하지만, 이와 같은 방식은 부트구동시 모든 빈을 탐색하기에 runtime이 굉장히 오래 걸립니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;따라서 위와 같은 방식의 파라미터 애노테이션을 사용한 방식을 구현하고 싶으시다면&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;HandlerMethodArgumentResolver&lt;/code&gt;와 같은 인터페이스를 구현하여 사용하시는게 바람직합니다.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;트위터 인증은?&lt;/h3&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; font-weight: normal;&quot;&gt;트위터는 어쩔 수 없이&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;Spring-social-twitter&lt;/code&gt;를 사용하여 OAuth1 Spec으로 구현하였습니다. 이 부분은&amp;nbsp;&lt;a href=&quot;https://github.com/young891221/spring-boot-social-comment/blob/master/social-comment/src/main/java/com/social/controller/TwitterController.java&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;소스&lt;/a&gt;를 직접 참고하세요~&lt;/p&gt;&lt;/h3&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;인증 이외에..&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;redis는 일부러 embbeded redis를 썼습니다. 추후 실서비스에 적용한다면 바꿔야 겠지만..Getting Started 느낌으로 어디서나 구동하기 좋고 따로 설치와 관리가 필요없기에 사용하기 편리하였습니다.&lt;br style=&quot;box-sizing: border-box;&quot;&gt;댓글은 1댑스의 대댓글 기능을 만들고자 하였으나 귀차니즘이 발동하여...대댓글 없이 댓글 하나씩만 달수 있도록 하였습니다.&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;결과&lt;/h2&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;로그인 인증만 테스트해 볼 수 있는 페이지와 댓글기능 사용시 인증할 수 있는 페이지 2개로 구성되어 있습니다. 댓글 제공 방식은 view나 Json으로 데이터를 전송하는 방식을 생각해 보았습니다.&lt;/p&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;a href=&quot;http://localhost:8080/comment/%7Bservice%7D/%7Bid%7D&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;http://localhost:8080/comment/{service}/{id}&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;a href=&quot;http://localhost:8080/json/comment/%7Bservice%7D/%7Bid%7D&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;http://localhost:8080/json/comment/{service}/{id}&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:562px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile9.uf.tistory.com%2Fimage%2F990E724C5C4261E81E7CEC&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/990E724C5C4261E81E&quot; filemime=&quot;image/jpeg&quot; filename=&quot;view_json.png&quot; height=&quot;303&quot; style=&quot;&quot; width=&quot;562&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p align=&quot;center&quot; class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;css는 넘나 어렵네요..&lt;/code&gt;&lt;/p&gt;&lt;h2 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; line-height: 1.25; padding-bottom: 0.3em; border-bottom: 1px solid rgb(234, 236, 239); color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;참고사이트&lt;/h2&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;&lt;a href=&quot;https://spring.io/guides/tutorials/spring-boot-oauth2/&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;spring boot oauth2&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;a href=&quot;http://www.bubblecode.net/en/2016/01/22/understanding-oauth2/&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;oauth2 spec&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;a href=&quot;https://brunch.co.kr/@sbcoba/8&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;이수홍님의 oauth2&lt;/a&gt;&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;&lt;a href=&quot;https://github.com/kstyrc/embedded-redis&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;embbeded redis&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br /&gt;&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://haviyj.tistory.com/38&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Spring</category>
<category>oauth2</category>
<category>spring boot</category>
<category>spring security oauth2</category>
<category>댓글</category>
<author>Havi</author>
<guid>https://haviyj.tistory.com/38</guid>
<comments>https://haviyj.tistory.com/38#entry38comment</comments>
<pubDate>Sat, 24 Jun 2017 15:49:56 +0900</pubDate>
</item>
<item>
<title>Gradle에 task 여러개 실행하도록 설정하기</title>
<link>https://haviyj.tistory.com/37</link>
<description>&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;기존에는 task를 grunt 하나만 돌리다가 이번에 webpack, grunt를 함꼐 쓰게 되면서 Gradle Build시 task를 순차적으로 모두 수행하도록 설정해 보았습니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;org.apache.tools.ant.taskdefs.condition.Os&lt;/span&gt;
task grunt(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 134, 179);&quot;&gt;type&lt;/span&gt;:&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;Exec&lt;/span&gt;) {
	workingDir &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;./&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;

	&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;Os&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;isFamily(&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;Os&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 134, 179);&quot;&gt;FAMILY_WINDOWS&lt;/span&gt;)) {
		&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(150, 152, 150);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;on windows&lt;/span&gt;
		commandLine &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;cmd&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;/c&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;grunt&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
	}
	&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;else&lt;/span&gt; {
		&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(150, 152, 150);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;on linux&lt;/span&gt;
		commandLine &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;grunt&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
	}

}
compileJava&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;dependsOn grunt&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;기존에 1개만 처리되는 task는 위와 같은 방식입니다. 여기서 타입을&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;Exec&lt;/code&gt;으로 받아서 하나만 처리하도록 설정되어 있습니다. 여기에 task를 여러개 적용하기 위해 똑같이 복붙한다고 적용되지 않습니다. 결론적으로 작동되는 소스는 다음과 같습니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;org.apache.tools.ant.taskdefs.condition.Os&lt;/span&gt;
task mainBuild {
	doLast {
		exec {
			workingDir &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;./&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
			&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;Os&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;isFamily(&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;Os&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 134, 179);&quot;&gt;FAMILY_WINDOWS&lt;/span&gt;)) {
				commandLine &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;cmd&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;/c&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;webpack -p&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
			}
			&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;else&lt;/span&gt; {
				commandLine &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;webpack -p&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
			}
		}
		exec {
			workingDir &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;./&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
			&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;Os&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;isFamily(&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;Os&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 134, 179);&quot;&gt;FAMILY_WINDOWS&lt;/span&gt;)) {
				commandLine &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;cmd&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;/c&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;, &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;grunt&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
			}
			&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;else&lt;/span&gt; {
				commandLine &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;grunt&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;
			}
		}
	}
}
compileJava&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;dependsOn mainBuild&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;위와 같이 설정하면 task의 실행 타입을 매개변수로 받지 않고 내부에 각각 명시해 놓았습니다. 또한&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;exec&lt;/code&gt;은&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;doFirst/doLast&lt;/code&gt;안쪽에 포함되어져야 합니다. 위와 같이 설정한다면 webpack -&amp;gt; grunt 순으로 빌드가 수행되어 집니다. 실행순서를 좀 더 명확하게 설정하고 싶으시다면&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;shouldRunAfter&lt;/code&gt;나&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;mustRunAfter&lt;/code&gt;를 적용하시면 됩니다.&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;참고&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;task에 대한 자세한 내용은&amp;nbsp;&lt;a href=&quot;http://kwonnam.pe.kr/wiki/gradle/task&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;권남님 블로그&lt;/a&gt;를 참고하시면 많은 도움이 됩니다.&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://haviyj.tistory.com/37&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Spring</category>
<category>gradle</category>
<category>gradle exec</category>
<category>gradle task</category>
<category>task</category>
<author>Havi</author>
<guid>https://haviyj.tistory.com/37</guid>
<comments>https://haviyj.tistory.com/37#entry37comment</comments>
<pubDate>Fri, 09 Jun 2017 16:40:48 +0900</pubDate>
</item>
<item>
<title>Parameter AOP 설정하기 간단 팁</title>
<link>https://haviyj.tistory.com/36</link>
<description>&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;보통 메소드단위의 AOP를 많이 사용하시는데 유저정보에 대한 값을 파라미터에서 AOP방식으로 캐치하여 User객체로 전환시키는 방법을 간단한 예제를 통해 알아보겠습니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;@Target&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;ElementType&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 134, 179);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;PARAMETER&lt;/span&gt;)
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;@Retention&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;RetentionPolicy&lt;/span&gt;&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 134, 179);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;RUNTIME&lt;/span&gt;)
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;@interface&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(121, 93, 163);&quot;&gt;User&lt;/span&gt; {
}&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;위의 예제소스를 보시면 User 어노테이션을&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;PARAMETER&lt;/code&gt;타입으로 선언하였습니다. 어노테이션의 매개변수가 필요하시다면 내부에 생성하시면 됩니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;@Controller&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(121, 93, 163);&quot;&gt;Controller&lt;/span&gt; {

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;@GetMapping&lt;/span&gt;(&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 134, 179);&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;/test&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(121, 93, 163);&quot;&gt;test&lt;/span&gt;(&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;@User&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;User&lt;/span&gt; &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(237, 106, 67);&quot;&gt;user&lt;/span&gt;, &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;HttpSession&lt;/span&gt; &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(237, 106, 67);&quot;&gt;session&lt;/span&gt;) {
        &lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 134, 179);&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(150, 152, 150);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;반환된 user값을 사용하여 이후 로직 수행&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;test&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;;
    }
}&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;생성된&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@User&lt;/code&gt;어노테이션을 사용하고자 Controller에 간단하게 반영해 봤습니다. 어노테이션을 만들고 적용했으니 이제 적용된 어노테이션을 포인트컷해서 타겟에 User객체를 바인딩 해보도록 하겠습니다.&lt;/p&gt;&lt;pre class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; margin-top: 0px; margin-bottom: 16px; font-stretch: normal; line-height: 1.45; word-wrap: normal; padding-top: 10px; padding-bottom: 10px; overflow: auto; background-color: rgb(246, 248, 250); border-radius: 3px; color: rgb(36, 41, 46);&quot;&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;@Aspect&lt;/span&gt;
&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(121, 93, 163);&quot;&gt;UserAspect&lt;/span&gt; {

    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;@Around&lt;/span&gt;(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;execution(* *(.., @User (*), ..))&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;)
    &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;Object&lt;/span&gt; &lt;span class=&quot;pl-en&quot; style=&quot;box-sizing: border-box; color: rgb(121, 93, 163);&quot;&gt;convertUser&lt;/span&gt;(&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;ProceedingJoinPoint&lt;/span&gt;  &lt;span class=&quot;pl-v&quot; style=&quot;box-sizing: border-box; color: rgb(237, 106, 67);&quot;&gt;joinPoint&lt;/span&gt;) &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;Throwable&lt;/span&gt; {
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;HttpSession&lt;/span&gt; session &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; ((&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;ServletRequestAttributes&lt;/span&gt;) &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;RequestContextHolder&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;currentRequestAttributes())&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;getRequest()&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;getSession();
        &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;User&lt;/span&gt; user &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; (&lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;User&lt;/span&gt;) session&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;getAttribute(&lt;span class=&quot;pl-s&quot; style=&quot;box-sizing: border-box; color: rgb(24, 54, 145);&quot;&gt;&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;user&lt;span class=&quot;pl-pds&quot; style=&quot;box-sizing: border-box;&quot;&gt;&quot;&lt;/span&gt;&lt;/span&gt;);
	&lt;span class=&quot;pl-c1&quot; style=&quot;box-sizing: border-box; color: rgb(0, 134, 179);&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box; color: rgb(150, 152, 150);&quot;&gt;&lt;span class=&quot;pl-c&quot; style=&quot;box-sizing: border-box;&quot;&gt;//&lt;/span&gt;user로직 처리&lt;/span&gt;
        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;Object&lt;/span&gt;[] args &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;Arrays&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;stream(joinPoint&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;getArgs())&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;map(data &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;&amp;gt;&lt;/span&gt; { &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;if&lt;/span&gt;(data &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;instanceof&lt;/span&gt; &lt;span class=&quot;pl-smi&quot; style=&quot;box-sizing: border-box; color: rgb(51, 51, 51);&quot;&gt;User&lt;/span&gt;) { data &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;=&lt;/span&gt; user; } &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; data; })&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;toArray();

        &lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;return&lt;/span&gt; joinPoint&lt;span class=&quot;pl-k&quot; style=&quot;box-sizing: border-box; color: rgb(167, 29, 93);&quot;&gt;.&lt;/span&gt;proceed(args);
    }
}&lt;/pre&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;여기서 팁들은 다음과 같습니다.&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;어드바이스, 파리미터용 포인트컷 적용&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@Around&lt;/code&gt;는 어드바이스를 말합니다. 원래 메소드 형식에는 간단하게&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@Around(&quot;@annotation(com.test.User)&quot;)&lt;/code&gt;&amp;nbsp;요런식으로도 정의할 수 있지만 파라미터 어노테이션에는 적용되지 않으므로 좀 더 섬세하게 포인트컷 할 수 있는&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;execution&lt;/code&gt;을 사용하였습니다. 여기서 중요한 포인트는&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;execution(* *(.., @User (*), ..))&lt;/code&gt;&amp;nbsp;이 부분입니다. 파라미터 어노테이션의 핵심인데요 제가 한창 삽질했던 부분입니다... 첫번째&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;*&lt;/code&gt;은 리턴타입을 나타내며 두 번째부터 시작하는&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;*(.., @User (*), ..)&lt;/code&gt;은&amp;nbsp;&lt;span style=&quot;box-sizing: border-box; font-weight: 600;&quot;&gt;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@User&lt;/code&gt;&amp;nbsp;애노테이션이 선언된 부분의 양옆의 다른 파라미터 0개 이상을 허용하겠다는 패턴입니다.&lt;/span&gt;&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;AOP에서 HttpSession 가져오기&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;AOP에서는 Controller처럼 파라미터를 통해 HttpServletRequest를 가져오진 못하지만 RequestContextHolder를 통해 가져올 수 있습니다. 이를 통해 세션객체를 사용할 수 있습니다.&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;데이터 반환&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;로직 처리 후&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;@User&lt;/code&gt;어노테이션이 선언된 파라미터에 바인딩 될 데이터 반환하기 위해&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;joinPoint.proceed(args)&lt;/code&gt;의 매개변수로 컨버팅된 User 객체를 바꿔서 반환해 주면 됩니다. 이런식으로 처리하면 타겟 파라미터에&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;args&lt;/code&gt;에 담긴 오브젝트들이 바인딩됩니다.(위의 예제에서는 User와 HttpSession) 여기서 주의하실 점은&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;joinPoint.getArgs()&lt;/code&gt;로 가져온 값에는 저희가 선언한&amp;nbsp;&lt;code style=&quot;box-sizing: border-box; font-family: SFMono-Regular, Consolas, &amp;quot;Liberation Mono&amp;quot;, Menlo, Courier, monospace; font-size: 13.6px; padding: 0.2em 0px; margin: 0px; background-color: rgba(27, 31, 35, 0.05); border-radius: 3px;&quot;&gt;User user, HttpSession session&lt;/code&gt;&amp;nbsp;두 가지 모두 가져온다는 점입니다. 따라서 선언된 파라미터가 위와 같이 2개이면 2개 모두를 반환시켜주어야 합니다. 안그러면 에러뜹니다ㅎㅎ&lt;br style=&quot;box-sizing: border-box;&quot;&gt;&lt;/p&gt;&lt;blockquote class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin: 0px 0px 16px; padding: 0px 1em; color: rgb(106, 115, 125); border-left-width: 0.25em; border-left-color: rgb(223, 226, 229); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;p class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;ps.혹시 이러한 데이터 반환방법 이외에 더 좋은 방법을 알고 계시다면 댓글 부탁드립니다.&lt;/p&gt;&lt;/blockquote&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;참고&lt;/h3&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;또 이외에 스프링 3.1 이후 추가된 HandlerMethodArgumentResolver 인터페이스를 구현하면 위와 같이 파라미터 어노테이션을 적용할 수 있습니다.&amp;nbsp;&lt;br style=&quot;box-sizing: border-box;&quot;&gt;기본적인 AOP관련 자세한 내용은&amp;nbsp;&lt;a href=&quot;http://jojoldu.tistory.com/71&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;창천향로님의 블로그&lt;/a&gt;나&amp;nbsp;&lt;a href=&quot;http://docs.spring.io/spring/docs/current/spring-framework-reference/html/aop.html&quot; style=&quot;box-sizing: border-box; background-color: transparent; color: rgb(3, 102, 214);&quot;&gt;공식문서&lt;/a&gt;를 참고하면 많은 도움이 되실겁니다.&lt;/p&gt;&lt;div style=&quot;text-align:left; padding-top:10px;clear:both&quot;&gt;
&lt;iframe src=&quot;//www.facebook.com/plugins/like.php?href=https://haviyj.tistory.com/36&amp;amp;layout=standard&amp;amp;show_faces=true&amp;amp;width=310&amp;amp;action=like&amp;amp;font=tahoma&amp;amp;colorscheme=light&amp;amp;height=65&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; style=&quot;border:none; overflow:hidden; width:310px; height:65px;&quot; allowTransparency=&quot;true&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
<category>Spring</category>
<category>AOP</category>
<category>joinpoint</category>
<category>Parameter</category>
<category>Parameter AOP</category>
<author>Havi</author>
<guid>https://haviyj.tistory.com/36</guid>
<comments>https://haviyj.tistory.com/36#entry36comment</comments>
<pubDate>Fri, 09 Jun 2017 16:15:14 +0900</pubDate>
</item>
<item>
<title>DDD 입문 후기</title>
<link>https://haviyj.tistory.com/35</link>
<description>&lt;p align=&quot;center&quot; class=&quot;rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px; text-align: center; clear: none; float: none;&quot;&gt;&lt;span class=&quot;imageblock&quot; style=&quot;display:inline-block;width:445px;;height:auto;max-width:100%&quot;&gt;&lt;img srcset=&quot;https://img1.daumcdn.net/thumb/R1280x0/?scode=mtistory&amp;fname=http%3A%2F%2Fcfile30.uf.tistory.com%2Fimage%2F99CC63445C4262521DC3CF&quot; src=&quot;https://t1.daumcdn.net/cfile/tistory/99CC63445C4262521D&quot; filemime=&quot;image/jpeg&quot; filename=&quot;ddd_sign.jpg&quot; height=&quot;593&quot; style=&quot;&quot; width=&quot;445&quot;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;최범균님의 DDD강의를 들으며 개인적으로 새로 알게되고 중요하다고 생각되는 포인트만 정리하였다.&lt;/p&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;인프라스트럭처&lt;/h3&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;고수준쪽 페키지에 인터페이스를 만들어 두고 이를 구현한 클래스는 인프라스트럭처에 둔다.&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;모듈 구성&lt;/h3&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;너무 빡세게 제한을 두면 힘들다...상황과 팀에 따라 유연하게~&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;적절한 아키텍처를 구현해서 상호협의적으로 가는게 좋다.&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;아키텍처 설계시&lt;/h3&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;DIP구조를 먼저 머리속에 넣어두는 것(좋은 설계로 가는 길)&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;즉, 저수준과 고수준을 놔눠두는 것&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;응용 서비스에 도메인 로직을 넣지 말자&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;CQRS&lt;/h3&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;상태를 바꾸는 기능 - JPA&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;조회하는 기능 - MySQL&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;위의 상황에 대해 두 개의 Model을 구성한다.&lt;/li&gt;&lt;/ul&gt;&lt;h3 class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; margin-top: 24px; margin-bottom: 16px; font-size: 1.25em; line-height: 1.25; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;;&quot;&gt;벨류 매핑&lt;/h3&gt;&lt;ul class=&quot;unchanged rich-diff-level-one&quot; style=&quot;box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, system-ui, &amp;quot;Segoe UI&amp;quot;, Helvetica, Arial, sans-serif, &amp;quot;Apple Color Emoji&amp;quot;, &amp;quot;Segoe UI Emoji&amp;quot;, &amp;quot;Segoe UI Symbol&amp;quot;; font-size: 16px;&quot;&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box;&quot;&gt;별도 테이블이라고 무조건 Entity로 생각하지 말자.&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;일단 Value인지 아닌지 먼저 고민한 후에 그 다음에 엔티티로 적용하는게 좋다.&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Value라고 생각되면 JPA의 @Embeddable 어노테이션을 사용해서 애그리거트 루트에 포함시킨다.&lt;/li&gt;&lt;li class=&quot;unchanged&quot; style=&quot;box-sizing: border-box; margin-top: 0.25em;&quot;&gt;Att